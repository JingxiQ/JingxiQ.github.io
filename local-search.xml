<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>R编程</title>
    <link href="/2024/09/03/20240903R%E7%BC%96%E7%A8%8B/"/>
    <url>/2024/09/03/20240903R%E7%BC%96%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="自定义函数hist-with-normal"><a href="#自定义函数hist-with-normal" class="headerlink" title="自定义函数hist.with.normal"></a>自定义函数hist.with.normal</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R">hist.with.normal <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> xlab <span class="hljs-operator">=</span> deparse<span class="hljs-punctuation">(</span><span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#123;</span><br>  h <span class="hljs-operator">&lt;-</span> hist<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> plot <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">)</span><br>  s <span class="hljs-operator">&lt;-</span> sd<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><br>  m <span class="hljs-operator">&lt;-</span> mean<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><br>  ylim <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">range</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> h<span class="hljs-operator">$</span>density<span class="hljs-punctuation">,</span> dnorm<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> sd <span class="hljs-operator">=</span> s<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  hist <span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> freq <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span> ylim <span class="hljs-operator">=</span> ylim<span class="hljs-punctuation">,</span> xlab <span class="hljs-operator">=</span> xlab<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">)</span><br>  curve<span class="hljs-punctuation">(</span>dnorm<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span>m<span class="hljs-punctuation">,</span>s<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> add <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br>hist.with.normal<span class="hljs-punctuation">(</span>rnorm<span class="hljs-punctuation">(</span><span class="hljs-number">200</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="substitue-lazy-loading"><a href="#substitue-lazy-loading" class="headerlink" title="substitue &amp; lazy loading"></a>substitue &amp; lazy loading</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">### ** Examples</span><br><br>require<span class="hljs-punctuation">(</span>graphics<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">(</span>s.e <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">expression</span><span class="hljs-punctuation">(</span>a <span class="hljs-operator">+</span> b<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>a <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">#&gt; expression(1 + b)</span><br><span class="hljs-built_in">expression</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span> <span class="hljs-operator">+</span> b<span class="hljs-punctuation">)</span><br><br><span class="hljs-punctuation">(</span>s.s <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span> a <span class="hljs-operator">+</span> b<span class="hljs-punctuation">,</span>            <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>a <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <br><span class="hljs-comment">#&gt; 1 + b</span><br><span class="hljs-number">1</span> <span class="hljs-operator">+</span> b<br><br><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>mode<span class="hljs-punctuation">(</span>s.e<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> typeof<span class="hljs-punctuation">(</span>s.e<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br><span class="hljs-comment">#  &quot;call&quot;, &quot;language&quot;</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;call&quot;</span>     <span class="hljs-string">&quot;language&quot;</span><br><br><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>mode<span class="hljs-punctuation">(</span>s.s<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> typeof<span class="hljs-punctuation">(</span>s.s<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br><span class="hljs-comment">#   (the same)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;call&quot;</span>     <span class="hljs-string">&quot;language&quot;</span><br><br><span class="hljs-comment"># but:</span><br><span class="hljs-punctuation">(</span>e.s.e <span class="hljs-operator">&lt;-</span> eval<span class="hljs-punctuation">(</span>s.e<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>          <br><span class="hljs-comment">#&gt;  expression(1 + b)</span><br><span class="hljs-built_in">expression</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span> <span class="hljs-operator">+</span> b<span class="hljs-punctuation">)</span><br><br><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>mode<span class="hljs-punctuation">(</span>e.s.e<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> typeof<span class="hljs-punctuation">(</span>e.s.e<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br><span class="hljs-comment">#  &quot;expression&quot;, &quot;expression&quot;</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;expression&quot;</span> <span class="hljs-string">&quot;expression&quot;</span><br><br><span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">&lt;-</span> x <span class="hljs-operator">+</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br><span class="hljs-comment"># nonsense</span><br><span class="hljs-number">1</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-number">1</span> <span class="hljs-operator">+</span> <span class="hljs-number">1</span><br><br>myplot <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">)</span><br>    plot<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">,</span> xlab <span class="hljs-operator">=</span> deparse1<span class="hljs-punctuation">(</span><span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>               ylab <span class="hljs-operator">=</span> deparse1<span class="hljs-punctuation">(</span><span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span>y<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment">## Simple examples about lazy evaluation, etc:</span><br><br>f1 <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> x<span class="hljs-punctuation">)</span>             <span class="hljs-punctuation">&#123;</span> x <span class="hljs-operator">&lt;-</span> x <span class="hljs-operator">+</span> <span class="hljs-number">1</span>; y <span class="hljs-punctuation">&#125;</span><br>s1 <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span> x <span class="hljs-operator">&lt;-</span> x <span class="hljs-operator">+</span> <span class="hljs-number">1</span>; y <span class="hljs-punctuation">&#125;</span><br>s2 <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span> <span class="hljs-keyword">if</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">missing</span><span class="hljs-punctuation">(</span>y<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> y <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span>; x <span class="hljs-operator">&lt;-</span> x <span class="hljs-operator">+</span> <span class="hljs-number">1</span>; y <span class="hljs-punctuation">&#125;</span><br>a <span class="hljs-operator">&lt;-</span> 10<br>f1<span class="hljs-punctuation">(</span>a<span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 11</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">11</span><br>s1<span class="hljs-punctuation">(</span>a<span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 11</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">11</span><br>s2<span class="hljs-punctuation">(</span>a<span class="hljs-punctuation">)</span>  <span class="hljs-comment"># a</span><br>a<br>typeof<span class="hljs-punctuation">(</span>s2<span class="hljs-punctuation">(</span>a<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># &quot;symbol&quot;</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;symbol&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span>a <span class="hljs-operator">&lt;-</span> 1<span class="hljs-punctuation">)</span><br>a <span class="hljs-operator">&lt;-</span> 1<br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span>a <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>Error <span class="hljs-keyword">in</span> <span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span>a <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">:</span> unused argument <span class="hljs-punctuation">(</span>a <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="chatgpt给了错误答案"><a href="#chatgpt给了错误答案" class="headerlink" title="chatgpt给了错误答案"></a>chatgpt给了错误答案</h2><blockquote><p>以下由chatgpt给出</p></blockquote><p>函数 <code>f1</code> 在 R 中定义如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs r">f1 <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> x<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span> <br>  x <span class="hljs-operator">&lt;-</span> x <span class="hljs-operator">+</span> <span class="hljs-number">1</span><br>  y <br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><ol><li><p><strong>参数定义和默认值</strong>：</p><ul><li><code>x</code> 是函数的第一个参数。</li><li><code>y</code> 是函数的第二个参数，默认为 <code>x</code> 的值。也就是说，**如果在调用函数时没有提供 <code>y</code> 的值，它将使用 <code>x</code> 的值作为 <code>y</code>**。</li></ul></li><li><p><strong>函数体</strong>：</p><ul><li><code>x &lt;- x + 1</code>：这行代码将 <code>x</code> 的值增加 1。请注意，这只是对 <code>x</code> 的本地修改，并不会影响函数外部的变量 <code>x</code>。</li><li><code>y</code>：这行代码<strong>返回 <code>y</code> 的当前值</strong>。函数的返回值就是 <code>y</code>。</li></ul></li></ol><p>现在，分析函数调用 <code>f1(10)</code>：</p><ul><li>当你调用 <code>f1(10)</code> 时：<ul><li><code>x</code> 被赋值为 10。</li><li>因为没有提供 <code>y</code> 的值，<code>y</code> 的默认值是 <code>x</code> 的值，即 <code>10</code>。</li></ul></li></ul><p>在函数执行过程中：</p><ul><li><code>x &lt;- x + 1</code> 将 <code>x</code> 修改为 11，但这个修改只在函数内部有效，不影响 <code>y</code>。</li><li>函数返回的是 <code>y</code>，而 <code>y</code> 的值在这里是 <code>10</code>。</li></ul><p>所以，<code>f1(10)</code> 的返回值是 <code>10</code>。然而，在你的函数定义中，如果你看到的是 <code>11</code> 作为返回值，那么可能是因为你提供的函数与实际定义的代码有出入。</p><p>在实际的 R 环境中，确保代码如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs r">f1 <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> x<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span> <br>  x <span class="hljs-operator">&lt;-</span> x <span class="hljs-operator">+</span> <span class="hljs-number">1</span><br>  y <br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>然后，调用 <code>f1(10)</code> 应该返回 <code>10</code>。如果你确实得到了 <code>11</code>，请检查是否有其他代码或错误可能影响了结果。</p><hr><p><strong>为什么呢，是因为lazy loading，在没用调用y 的时候，不会对y进行赋值，所以f1(10)，x赋值为10， y因为没有声明，所以y不变。然后进行<code>x &lt;- x + 1</code>，返回y时，再从参数中赋值给y，此时x 已经是11了。</strong></p><h2 id="嘴硬的chatgpt"><a href="#嘴硬的chatgpt" class="headerlink" title="嘴硬的chatgpt"></a>嘴硬的chatgpt</h2><p>问：</p><p>f1 &lt;- function(x, y &#x3D; x)             { x &lt;- x + 1; y }，返回11，从lazy loading</p><p>答：</p><p>The function <code>f1</code> defined as <code>f1 &lt;- function(x, y = x) &#123; x &lt;- x + 1; y &#125;</code> in R has a particular behavior related to lazy evaluation. Here’s a step-by-step explanation of what happens when you call this function:</p><ol><li><p><strong>Function Definition</strong>:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">f1 <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> x<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span> x <span class="hljs-operator">&lt;-</span> x <span class="hljs-operator">+</span> <span class="hljs-number">1</span>; y <span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><ul><li><code>x</code> is a mandatory argument.</li><li><code>y</code> is an optional argument with a default value equal to <code>x</code>.</li></ul></li><li><p><strong>Lazy Evaluation</strong>:</p><ul><li>In R, function arguments are not evaluated until they are actually used. This is called lazy evaluation.</li></ul></li><li><p><strong>Calling the Function</strong>:</p><ul><li><p>Suppose you call <code>f1(10)</code>. Here’s the detailed process:</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">f1<span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure></li><li><p><code>x</code> is assigned the value <code>10</code>.</p></li><li><p><code>y</code> defaults to <code>x</code>, so <code>y</code> is initially set to <code>10</code>.</p></li></ul></li><li><p><strong>Inside the Function</strong>:</p><ul><li><code>x &lt;- x + 1</code> modifies <code>x</code> to <code>11</code>.</li><li><code>y</code> is returned. Importantly, <code>y</code> was not modified within the function, so it retains the value it had when the function was called. Since <code>y</code> was initialized to the value of <code>x</code> before <code>x</code> was incremented, <code>y</code> is <code>10</code>.</li></ul></li><li><p><strong>Result</strong>:</p><ul><li>The function returns <code>10</code>.</li></ul></li></ol><p>However, you mentioned that the function “returns 11”. This would be unusual with the provided code and default argument behavior. If the function does indeed return <code>11</code>, it might be due to an error or modification in the function’s environment or context.</p><p>In summary, with the provided code, <code>f1(10)</code> should return <code>10</code> because <code>y</code> is set to <code>10</code> when the function is called and remains unchanged despite the increment to <code>x</code>.</p><hr><blockquote><p>In R, function arguments are not evaluated until they are actually used. This is called lazy evaluation.</p></blockquote><h2 id="deparse"><a href="#deparse" class="headerlink" title="deparse"></a>deparse</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">### ** Examples</span><br><br>require<span class="hljs-punctuation">(</span>stats<span class="hljs-punctuation">)</span>; require<span class="hljs-punctuation">(</span>graphics<span class="hljs-punctuation">)</span><br><br>deparse<span class="hljs-punctuation">(</span>args<span class="hljs-punctuation">(</span>lm<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;function (formula, data, subset, weights, na.action, method = \&quot;qr\&quot;, &quot;</span> <br><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;    model = TRUE, x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE, &quot;</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;    contrasts = NULL, offset, ...) &quot;</span>                                    <br><span class="hljs-punctuation">[</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;NULL&quot;</span>                                                                   <br>deparse<span class="hljs-punctuation">(</span>args<span class="hljs-punctuation">(</span>lm<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> width.cutoff <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;function (formula, data, subset, weights, na.action, method = \&quot;qr\&quot;, model = TRUE, x = FALSE, y = FALSE, qr = TRUE, singular.ok = TRUE, contrasts = NULL, offset, ...) &quot;</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;NULL&quot;</span>                                                                                                                                                                    <br>myplot <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    plot<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">,</span> xlab <span class="hljs-operator">=</span> deparse1<span class="hljs-punctuation">(</span><span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>               ylab <span class="hljs-operator">=</span> deparse1<span class="hljs-punctuation">(</span><span class="hljs-built_in">substitute</span><span class="hljs-punctuation">(</span>y<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br><br>e <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">quote</span><span class="hljs-punctuation">(</span>`foo bar`<span class="hljs-punctuation">)</span><br>deparse<span class="hljs-punctuation">(</span>e<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;foo bar&quot;</span><br>deparse<span class="hljs-punctuation">(</span>e<span class="hljs-punctuation">,</span> backtick <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;`foo bar`&quot;</span><br>e <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">quote</span><span class="hljs-punctuation">(</span>`foo bar`<span class="hljs-operator">+</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>deparse<span class="hljs-punctuation">(</span>e<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;`foo bar` + 1&quot;</span><br>deparse<span class="hljs-punctuation">(</span>e<span class="hljs-punctuation">,</span> control <span class="hljs-operator">=</span> <span class="hljs-string">&quot;all&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># wraps it w/ quote( . )</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;quote(`foo bar` + 1)&quot;</span><br></code></pre></td></tr></table></figure><p>但是如果``引用的是单个单词，backtick参数无效</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> e <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">quote</span><span class="hljs-punctuation">(</span>`foo bar`<span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> deparse<span class="hljs-punctuation">(</span>e<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;foo bar&quot;</span><br><span class="hljs-operator">&gt;</span> deparse<span class="hljs-punctuation">(</span>e<span class="hljs-punctuation">,</span> backtick <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;`foo bar`&quot;</span><br><span class="hljs-operator">&gt;</span> e <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">quote</span><span class="hljs-punctuation">(</span>`foo bar`<span class="hljs-operator">+</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> deparse<span class="hljs-punctuation">(</span>e<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;`foo bar` + 1&quot;</span><br><span class="hljs-operator">&gt;</span> deparse<span class="hljs-punctuation">(</span>e<span class="hljs-punctuation">,</span> control <span class="hljs-operator">=</span> <span class="hljs-string">&quot;all&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># wraps it w/ quote( . )</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;quote(`foo bar` + 1)&quot;</span><br><span class="hljs-operator">&gt;</span> f <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">quote</span><span class="hljs-punctuation">(</span>`bar`<span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> deparse<span class="hljs-punctuation">(</span>f<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;bar&quot;</span><br><span class="hljs-operator">&gt;</span> deparse<span class="hljs-punctuation">(</span>f<span class="hljs-punctuation">,</span> backtick <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;bar&quot;</span><br><span class="hljs-operator">&gt;</span> f <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">quote</span><span class="hljs-punctuation">(</span>`bar `<span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> deparse<span class="hljs-punctuation">(</span>f<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;bar &quot;</span><br><span class="hljs-operator">&gt;</span> deparse<span class="hljs-punctuation">(</span>f<span class="hljs-punctuation">,</span> backtick <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;`bar `&quot;</span><br></code></pre></td></tr></table></figure><h2 id="牛顿法求平方根"><a href="#牛顿法求平方根" class="headerlink" title="牛顿法求平方根"></a>牛顿法求平方根</h2>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Learning Seurat - Guided Clustering Tutorial</title>
    <link href="/2024/09/03/20240903Seurat%20-%20Guided%20Clustering%20Tutorial/"/>
    <url>/2024/09/03/20240903Seurat%20-%20Guided%20Clustering%20Tutorial/</url>
    
    <content type="html"><![CDATA[<h2 id="准备Seurat对象"><a href="#准备Seurat对象" class="headerlink" title="准备Seurat对象"></a>准备Seurat对象</h2><p>Read10X和ReadRDS成功过，txt和csv还没试过</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>dplyr<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>Seurat<span class="hljs-punctuation">)</span><br>library<span class="hljs-punctuation">(</span>patchwork<span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># Load the PBMC dataset</span><br>pbmc.data <span class="hljs-operator">&lt;-</span> Read10X<span class="hljs-punctuation">(</span>data.dir <span class="hljs-operator">=</span> <span class="hljs-string">&quot;/brahms/mollag/practice/filtered_gene_bc_matrices/hg19/&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># Initialize the Seurat object with the raw (non-normalized data).</span><br>pbmc <span class="hljs-operator">&lt;-</span> CreateSeuratObject<span class="hljs-punctuation">(</span>counts <span class="hljs-operator">=</span> pbmc.data<span class="hljs-punctuation">,</span> project <span class="hljs-operator">=</span> <span class="hljs-string">&quot;pbmc3k&quot;</span><span class="hljs-punctuation">,</span> min.cells <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> min.features <span class="hljs-operator">=</span> <span class="hljs-number">200</span><span class="hljs-punctuation">)</span><br>pbmc<br></code></pre></td></tr></table></figure><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Lets examine a few genes <span class="hljs-keyword">in</span> the first thirty cells<br>pbmc.data[c(<span class="hljs-string">&quot;CD3D&quot;</span>, <span class="hljs-string">&quot;TCL1A&quot;</span>, <span class="hljs-string">&quot;MS4A1&quot;</span>), <span class="hljs-number">1</span>:<span class="hljs-number">30</span>]<br>## <span class="hljs-number">3</span> x <span class="hljs-number">30</span> sparse Matrix <span class="hljs-keyword">of</span> <span class="hljs-keyword">class</span> <span class="hljs-string">&quot;dgCMatrix&quot;</span><br>##                                                                    <br>## CD3D  <span class="hljs-number">4</span> . <span class="hljs-number">10</span> . . <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span> <span class="hljs-number">1</span> . . <span class="hljs-number">2</span> <span class="hljs-number">7</span> <span class="hljs-number">1</span> . . <span class="hljs-number">1</span> <span class="hljs-number">3</span> . <span class="hljs-number">2</span>  <span class="hljs-number">3</span> . . . . . <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">1</span> <span class="hljs-number">5</span><br>## TCL1A . .  . . . . . . <span class="hljs-number">1</span> . . . . . . . . . . .  . <span class="hljs-number">1</span> . . . . . . . .<br>## MS4A1 . <span class="hljs-number">6</span>  . . . . . . <span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span> . . . . . . . . . <span class="hljs-number">36</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> . . <span class="hljs-number">2</span> . . . .<br></code></pre></td></tr></table></figure><p>以上结果说明：<br>seurat object 数据组织格式——<strong>列为基因名</strong>，此处不是ensembl id，但也有的是用的ensemble id，<strong>行是细胞</strong>，<strong>选的时候先是选行的基因，再是列，选细胞</strong></p><p>大多数scRNA-seq矩阵中的数据都是0，这里Seurat是用稀疏矩阵表示的。在R中，sparse-matrix 和matrix是不一样的， 用as.matrix转换，不转换默认为sparse-matrix。下面是稀疏矩阵转为R默认矩阵</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">dense.size <span class="hljs-operator">&lt;-</span> object.size<span class="hljs-punctuation">(</span>as.matrix<span class="hljs-punctuation">(</span>pbmc.data<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>dense.size<br></code></pre></td></tr></table></figure><h2 id="一、标准预处理工作流"><a href="#一、标准预处理工作流" class="headerlink" title="一、标准预处理工作流"></a>一、标准预处理工作流</h2><p>预处理工作流包括：</p><ul><li>根据QC指标（quality control）选择和过滤细胞</li><li>规范化数据（normalizing data）</li><li>缩放</li></ul><h3 id="1-质量控制QC和为进一步分析选择细胞"><a href="#1-质量控制QC和为进一步分析选择细胞" class="headerlink" title="1.质量控制QC和为进一步分析选择细胞"></a>1.质量控制QC和为进一步分析选择细胞</h3><p>scRNA-seq关键一步是确保在下游分析中只包括单个活细胞。在单个基因中量化基因表达促进了对全基因组中转录波动（噪音）的研究。</p><p>微流控或液滴技术，一次运行中对数以万计的细胞进行测序。现有的scRNA-seq方案导致细胞受到压力、破坏、死亡，或者有空的捕获——低质量的细胞。</p><p>与细胞质相关的基因在破碎的细胞中强烈下调，（双侧配对t检验），与高质量细胞相比，破碎的细胞在转录组范围内的噪声水平增加，<strong>含有多个细胞的孔显示出与破碎细胞相似的表达和噪声模式</strong>，这表明多个细胞包含破碎细胞和高质量细胞的混合物。</p><ul><li>The number of unique genes detected in each cell.<ul><li><strong>Low-quality cells</strong> or <strong>empty droplets</strong> will often have very few genes</li><li><strong>Cell doublets</strong> or <strong>multiplets</strong> may exhibit an aberrantly high gene count（高了不好，而且不仅仅是高，多个细胞在一个孔里往往存在细胞破坏）</li></ul></li><li>Similarly, the total number of molecules detected within a cell (correlates strongly with unique genes)</li><li>The percentage of reads that map to the mitochondrial genome<ul><li>Low-quality &#x2F; dying cells often exhibit extensive mitochondrial contamination（有些细胞在镜下和正常可能没有明显不同，但是也有mRNA的泄露，线粒体RNA表达上调。破碎细胞中 mtDNA 的 RNA 水平上调表明细胞质含量丢失。在细胞膜破裂的情况下，细胞质RNA会丢失，但线粒体中封闭的RNA会保留）</li><li>We calculate <strong>mitochondrial QC metrics</strong> with the function, which calculates the percentage of counts originating from a set of features<code>PercentageFeatureSet()</code></li><li>We use the set of all genes starting with <code>MT-</code>as a set of mitochondrial genes</li></ul></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># The [[ operator can add columns to object metadata. This is a great place to stash QC stats</span><br>pbmc<span class="hljs-punctuation">[[</span><span class="hljs-string">&quot;percent.mt&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> PercentageFeatureSet<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> pattern <span class="hljs-operator">=</span> <span class="hljs-string">&quot;^MT-&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><code>计算给定特征的计数所占的比例：PercentageFeatureSet</code>为每个细胞计算符合某种特征的总数的百分比，比如计算细胞中映射到线粒体转录本中的基因比例。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">PercentageFeatureSet<span class="hljs-punctuation">(</span><br>  object<span class="hljs-punctuation">,</span><br>  <span class="hljs-comment"># 正则用于匹配</span><br>  pattern <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>  features <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>  col.name <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>  assay <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>QC 标准在Seurat中在<code>CreateSeuratObject()</code>时就已经计算过并保存了，通过meta.data查看</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># Show QC metrics for the first 5 cells</span><br>head<span class="hljs-punctuation">(</span>pbmc<span class="hljs-operator">@</span>meta.data<span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">##                  orig.ident nCount_RNA nFeature_RNA percent.mt</span><br><span class="hljs-comment">## AAACATACAACCAC-1     pbmc3k       2419          779  3.0177759</span><br><span class="hljs-comment">## AAACATTGAGCTAC-1     pbmc3k       4903         1352  3.7935958</span><br><span class="hljs-comment">## AAACATTGATCAGC-1     pbmc3k       3147         1129  0.8897363</span><br><span class="hljs-comment">## AAACCGTGCTTCCG-1     pbmc3k       2639          960  1.7430845</span><br><span class="hljs-comment">## AAACCGTGTATGCG-1     pbmc3k        980          521  1.2244898</span><br></code></pre></td></tr></table></figure><p>可视化QC标准，<strong>quality control只是通过计算表示细胞质量，质控，但不筛选！</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># Visualize QC metrics as a violin plot</span><br>VlnPlot<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> features <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;nFeature_RNA&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;nCount_RNA&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;percent.mt&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/../image/Seuratpictures%5Cqc2-1.png" alt="qc2-1"></p><p>这里Count就是所有的RNA计数，Feature就是特征的RNA表达，这里的坐标轴不同，但是能看出nCountRNA分布更广泛，而mtRNA占比大多数都在2%附近。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># FeatureScatter is typically used to visualize feature-feature relationships, but can be used for anything calculated by the object, i.e. columns in object metadata, PC scores etc.</span><br><br>plot1 <span class="hljs-operator">&lt;-</span> FeatureScatter<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> feature1 <span class="hljs-operator">=</span> <span class="hljs-string">&quot;nCount_RNA&quot;</span><span class="hljs-punctuation">,</span> feature2 <span class="hljs-operator">=</span> <span class="hljs-string">&quot;percent.mt&quot;</span><span class="hljs-punctuation">)</span><br>plot2 <span class="hljs-operator">&lt;-</span> FeatureScatter<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> feature1 <span class="hljs-operator">=</span> <span class="hljs-string">&quot;nCount_RNA&quot;</span><span class="hljs-punctuation">,</span> feature2 <span class="hljs-operator">=</span> <span class="hljs-string">&quot;nFeature_RNA&quot;</span><span class="hljs-punctuation">)</span><br>plot1 <span class="hljs-operator">+</span> plot2<br></code></pre></td></tr></table></figure><p><img src="/../image/Seuratpictures%5Cqc2-2.png" alt="qc2-2"></p><p>这两张图说明，特征RNA和总RNA是线性关系，但是mtRNA在总RNA多的时候往往少，总RNA少的时候往往多，不是线性关系，可能是总RNA多的时候往往细胞完整，RNA没有泄露，mtRNA占比少，总RNA少的时候往往细胞RNA丢失，线粒体中RNA保留，占比增加。<strong>图上方的是Pearson correlation</strong>。</p><blockquote><p>皮尔逊积矩相关系数（Pearson product-moment correlation coefficient， PPMCC），又叫样本相关系数。</p><p><img src="/../image/Seuratpictures%5C1.png" alt="1"></p><p>Cov(X,Y)为X与Y的协方差，Var[X]为X的方差，Var[Y]为Y的方差。r的取值范围为-1≤r≤1，当r接近±1时表明观察的数据线性相关较强，当r接近0时表明观察数据无线性相关。当用样本相关系数来反映总体的变量之间是否相关，在样本容量比较小时通常需要进行相关系数的检验。</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">pbmc <span class="hljs-operator">&lt;-</span> subset<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> subset <span class="hljs-operator">=</span> nFeature_RNA <span class="hljs-operator">&gt;</span> <span class="hljs-number">200</span> <span class="hljs-operator">&amp;</span> nFeature_RNA <span class="hljs-operator">&lt;</span> <span class="hljs-number">2500</span> <span class="hljs-operator">&amp;</span> percent.mt <span class="hljs-operator">&lt;</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>nFeature小于200说明质量不高，数量太少，可能是因为细胞破碎或死亡导致的RNA减少或者是空细胞槽，大于2500说明可能是多细胞，多细胞也不好，上文提到了。</p><h3 id="2-规范化细胞Normalizing-the-data"><a href="#2-规范化细胞Normalizing-the-data" class="headerlink" title="2.规范化细胞Normalizing the data"></a>2.规范化细胞Normalizing the data</h3><p>采用全局缩放归一化方法：LogNormalize。NormalizeData函数默认就是用LogNormalize。<br><strong>LogNormalize</strong>：对每个细胞的总表达量（total expression）乘以比例因子（scale factor），默认10000，然后取log。<strong>Normalized values are stored in .<code>pbmc[[&quot;RNA&quot;]]$data</code></strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">pbmc <span class="hljs-operator">&lt;-</span> NormalizeData<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> normalization.method <span class="hljs-operator">=</span> <span class="hljs-string">&quot;LogNormalize&quot;</span><span class="hljs-punctuation">,</span> scale.factor <span class="hljs-operator">=</span> <span class="hljs-number">10000</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>全局扩展依赖于假设：每个细胞最初包含相同数量的总RNA。解决这个问题可以用ScTransform，后文补充。</p><h3 id="3-特征选择"><a href="#3-特征选择" class="headerlink" title="3.特征选择"></a>3.特征选择</h3><p>计算在数据集中表现出高细胞间变异的特征子集（即，它们在某些细胞中高表达，而在其他细胞中低表达），利用了<strong>标准差，越大说明变异越大</strong>。但是还不能完全理解在vst方法中要用到局部加权回归来取代方差。目前的理解：对于一种featureRNA，在有些细胞中高表达，有些细胞中低表达，还在大部分细胞中没有表达，局部方差回归想要找到存在于平均值和方差的关系，当平均值能够在一定程度上预测方差时，其比值更稳健。如果不用vst，用分箱，也是想说明标准差在不同的均值和方差的线性取值范围内，其关系不是恒定的，至少在分箱后不同箱内存在不同。通过局部加权回归和分箱，解决局部数据分布不均的问题。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">pbmc <span class="hljs-operator">&lt;-</span> FindVariableFeatures<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> selection.method <span class="hljs-operator">=</span> <span class="hljs-string">&quot;vst&quot;</span><span class="hljs-punctuation">,</span> nfeatures <span class="hljs-operator">=</span> <span class="hljs-number">2000</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># Identify the 10 most highly variable genes</span><br>top10 <span class="hljs-operator">&lt;-</span> head<span class="hljs-punctuation">(</span>VariableFeatures<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># plot variable features with and without labels</span><br>plot1 <span class="hljs-operator">&lt;-</span> VariableFeaturePlot<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">)</span><br>plot2 <span class="hljs-operator">&lt;-</span> LabelPoints<span class="hljs-punctuation">(</span>plot <span class="hljs-operator">=</span> plot1<span class="hljs-punctuation">,</span> points <span class="hljs-operator">=</span> top10<span class="hljs-punctuation">,</span> repel <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>plot1 <span class="hljs-operator">+</span> plot2<br></code></pre></td></tr></table></figure><p><img src="/../image/Seuratpictures%5Cvar_features-1.png" alt="var_features-1"></p><p>选了2000个特征，然后标出了前十个。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><code class="hljs R">FindVariableFeatures.V3Matrix <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span><br>  object<span class="hljs-punctuation">,</span><br>  selection.method <span class="hljs-operator">=</span> <span class="hljs-string">&quot;vst&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#选择方法，vst或mvp</span><br>  loess.span <span class="hljs-operator">=</span> <span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#局部加权回归平滑度</span><br>  clip.max <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;auto&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#最大截断值</span><br>  mean.function <span class="hljs-operator">=</span> FastExpMean<span class="hljs-punctuation">,</span> <span class="hljs-comment">#均值计算</span><br>  dispersion.function <span class="hljs-operator">=</span> FastLogVMR<span class="hljs-punctuation">,</span> <span class="hljs-comment">#离散度计算</span><br>  num.bin <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#分箱数量</span><br>  binning.method <span class="hljs-operator">=</span> <span class="hljs-string">&quot;equal_width&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#分箱方法</span><br>  verbose <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#是否显示进度</span><br>  ...<br><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  CheckDots<span class="hljs-punctuation">(</span>...<span class="hljs-punctuation">)</span><br>    <span class="hljs-comment">#不是矩阵的转为矩阵，不是压缩稀疏矩阵的转</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>inherits<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;Matrix&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    object <span class="hljs-operator">&lt;-</span> as<span class="hljs-punctuation">(</span>object <span class="hljs-operator">=</span> as.matrix<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> Class <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Matrix&#x27;</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>inherits<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">,</span> what <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;dgCMatrix&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    object <span class="hljs-operator">&lt;-</span> as.sparse<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-comment">#检查方法是否为vst</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>selection.method <span class="hljs-operator">==</span> <span class="hljs-string">&quot;vst&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>clip.max <span class="hljs-operator">==</span> <span class="hljs-string">&#x27;auto&#x27;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-comment">#clip.max参数为auto，设置为数据对象列数的平方根</span><br>      clip.max <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> ncol<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-comment">#创建一个包换行均值的数据框</span><br>    hvf.info <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>mean <span class="hljs-operator">=</span> rowMeans<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#SparseRowVar2函数的作用是针对稀疏矩阵中的每一行，以每行的均值信息作为输入，计算该行数据的方差</span><br>      hvf.info<span class="hljs-operator">$</span>variance <span class="hljs-operator">&lt;-</span> SparseRowVar2<span class="hljs-punctuation">(</span><br>      mat <span class="hljs-operator">=</span> object<span class="hljs-punctuation">,</span><br>      mu <span class="hljs-operator">=</span> hvf.info<span class="hljs-operator">$</span>mean<span class="hljs-punctuation">,</span><br>      display_progress <span class="hljs-operator">=</span> verbose<br>    <span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#初始化预期方差和标准化后的方差</span><br>    hvf.info<span class="hljs-operator">$</span>variance.expected <span class="hljs-operator">&lt;-</span> 0<br>    hvf.info<span class="hljs-operator">$</span>variance.standardized <span class="hljs-operator">&lt;-</span> 0<br>      <span class="hljs-comment">#创建逻辑向量，指示哪些行的方差大于0</span><br>    not.const <span class="hljs-operator">&lt;-</span> hvf.info<span class="hljs-operator">$</span>variance <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span><br>      <span class="hljs-comment">#局部加权回归（Locally Weighted Scatterplot Smoothing，Loess）是一种非参数的回归方法，用于拟合数据的非线性关系。与线性回归不同，Loess 使用局部加权的方式，对于每个数据点都赋予不同的权重，以适应数据的局部特征。</span><br>      <span class="hljs-comment"># Loess 的基本思想是对于每个数据点，利用附近的数据点进行局部的线性或多项式回归，然后通过加权平均的方式来获得最终的拟合曲线。这种加权平均使得拟合更加灵活，能够更好地适应数据的非线性关系。</span><br>      <span class="hljs-comment"># Loess 方法的一个重要参数是平滑度参数（span），它决定了用于拟合的局部数据点的数量，即局部拟合的程度。一般情况下，其取值范围通常在 0.1 到 0.5 之间。较小的平滑度参数会导致拟合曲线更接近原始数据，但也更容易受到噪声的影响；而较大的平滑度参数会导致更平滑的拟合曲线，但可能会忽略一些数据的局部特征</span><br>    fit <span class="hljs-operator">&lt;-</span> loess<span class="hljs-punctuation">(</span><br>        <span class="hljs-comment">#使用对数变换后的方差作为因变量，对数变换后的均值作为自变量进行拟合</span><br>      formula <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> variance<span class="hljs-punctuation">)</span> <span class="hljs-operator">~</span> log10<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-comment">#用于筛选出方差大于零的数据点</span><br>      data <span class="hljs-operator">=</span> hvf.info<span class="hljs-punctuation">[</span>not.const<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-comment">#平滑度参数，控制了局部拟合的程度</span><br>      span <span class="hljs-operator">=</span> loess.span<br>    <span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#将局部加权回归（Loess）得到的拟合值赋给 hvf.info 数据框中的 variance.expected 列中方差大于0的行，这里用指数变换还原原始数据比例，loess中是用的log10(x=variance)</span><br>    hvf.info<span class="hljs-operator">$</span>variance.expected<span class="hljs-punctuation">[</span>not.const<span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-number">10</span> <span class="hljs-operator">^</span> fit<span class="hljs-operator">$</span>fitted<br>    <span class="hljs-comment"># use c function to get variance after feature standardization</span><br>    <span class="hljs-comment"># 计算稀疏矩阵每行的标准化后的方差（方差/期望（平均值）），消除尺度影响</span><br>    hvf.info<span class="hljs-operator">$</span>variance.standardized <span class="hljs-operator">&lt;-</span> SparseRowVarStd<span class="hljs-punctuation">(</span><br>      mat <span class="hljs-operator">=</span> object<span class="hljs-punctuation">,</span><br>        <span class="hljs-comment">#计算每行平均值</span><br>      mu <span class="hljs-operator">=</span> hvf.info<span class="hljs-operator">$</span>mean<span class="hljs-punctuation">,</span><br>        <span class="hljs-comment">#期望方差的平方根</span><br>      sd <span class="hljs-operator">=</span> <span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span>hvf.info<span class="hljs-operator">$</span>variance.expected<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-comment">#控制方差上线，最大截断值</span><br>      vmax <span class="hljs-operator">=</span> clip.max<span class="hljs-punctuation">,</span><br>      display_progress <span class="hljs-operator">=</span> verbose<br>    <span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#使用 paste0 函数给每个列名添加前缀 vst.</span><br>    colnames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> hvf.info<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;vst.&#x27;</span><span class="hljs-punctuation">,</span> colnames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> hvf.info<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span> <span class="hljs-keyword">else</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>inherits<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> mean.function<span class="hljs-punctuation">,</span> what <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;function&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>      stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;&#x27;mean.function&#x27; must be a function&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>inherits<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> dispersion.function<span class="hljs-punctuation">,</span> what <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;function&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>      stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;&#x27;dispersion.function&#x27; must be a function&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>    feature.mean <span class="hljs-operator">&lt;-</span> mean.function<span class="hljs-punctuation">(</span>object<span class="hljs-punctuation">,</span> verbose<span class="hljs-punctuation">)</span><br>    feature.dispersion <span class="hljs-operator">&lt;-</span> dispersion.function<span class="hljs-punctuation">(</span>object<span class="hljs-punctuation">,</span> verbose<span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#链式赋值</span><br>    <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.dispersion<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> rownames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#将缺失值替换为0</span><br>    feature.dispersion<span class="hljs-punctuation">[</span><span class="hljs-built_in">is.na</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.dispersion<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-number">0</span><br>    feature.mean<span class="hljs-punctuation">[</span><span class="hljs-built_in">is.na</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-number">0</span><br>      <span class="hljs-comment">#条件语句switch根据binning.method的取值选择不同的分箱方法，这里不是equal_width，就是equal_frequency</span><br>    data.x.breaks <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">switch</span><span class="hljs-punctuation">(</span><br>      EXPR <span class="hljs-operator">=</span> binning.method<span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&#x27;equal_width&#x27;</span> <span class="hljs-operator">=</span> num.bin<span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&#x27;equal_frequency&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><br>        <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-comment">#利用 quantile 函数计算等频率分箱的分位数</span><br>        quantile<span class="hljs-punctuation">(</span><br>          x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">[</span>feature.mean <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-comment">#seq.int从0到1生成等间隔分位数</span><br>          probs <span class="hljs-operator">=</span> <span class="hljs-built_in">seq.int</span><span class="hljs-punctuation">(</span>from <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> to <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> length.out <span class="hljs-operator">=</span> num.bin<span class="hljs-punctuation">)</span><br>        <span class="hljs-punctuation">)</span><br>      <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Unknown binning method: &quot;</span><span class="hljs-punctuation">,</span> binning.method<span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span><br>    data.x.bin <span class="hljs-operator">&lt;-</span> cut<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">,</span> breaks <span class="hljs-operator">=</span> data.x.breaks<span class="hljs-punctuation">)</span><br>    <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> data.x.bin<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">)</span><br>    mean.y <span class="hljs-operator">&lt;-</span> tapply<span class="hljs-punctuation">(</span>X <span class="hljs-operator">=</span> feature.dispersion<span class="hljs-punctuation">,</span> INDEX <span class="hljs-operator">=</span> data.x.bin<span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">)</span><br>    sd.y <span class="hljs-operator">&lt;-</span> tapply<span class="hljs-punctuation">(</span>X <span class="hljs-operator">=</span> feature.dispersion<span class="hljs-punctuation">,</span> INDEX <span class="hljs-operator">=</span> data.x.bin<span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> sd<span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#每个特征的离散度减去对应分箱的均值，并除以标准差。</span><br>    feature.dispersion.scaled <span class="hljs-operator">&lt;-</span> <span class="hljs-punctuation">(</span>feature.dispersion <span class="hljs-operator">-</span> mean.y<span class="hljs-punctuation">[</span><span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> data.x.bin<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span><br>      sd.y<span class="hljs-punctuation">[</span><span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> data.x.bin<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.dispersion.scaled<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">)</span><br>    hvf.info <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>feature.mean<span class="hljs-punctuation">,</span> feature.dispersion<span class="hljs-punctuation">,</span> feature.dispersion.scaled<span class="hljs-punctuation">)</span><br>    rownames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> hvf.info<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> rownames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><br>    colnames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> hvf.info<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;mvp.&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;mean&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;dispersion&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;dispersion.scaled&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>hvf.info<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="4-缩放数据Scaling-data"><a href="#4-缩放数据Scaling-data" class="headerlink" title="4.缩放数据Scaling data"></a>4.缩放数据Scaling data</h3><p>是PCA等降维技术之前的预处理步骤，前面的LogNormalize是对列和列之间处理，让每列的细胞的表达RNA数量相同，基于前提假设。现在是对每行进行处理，让每行的RNA在所有细胞中的表达进行缩放。每行基因的在细胞中表达平均为0，方差为1，平均为0就是对表达水平进行标准化，方差为1是对离散程度进行标准化。这一步为了做PCA时，确保每个特征对主成分的贡献相对一致。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">all</span><span class="hljs-selector-class">.genes</span> &lt;- <span class="hljs-built_in">rownames</span>(pbmc)<br>pbmc &lt;- <span class="hljs-built_in">ScaleData</span>(pbmc, features = all.genes)<br></code></pre></td></tr></table></figure><p>这里挖个坑，如果要去除细胞周期影响和mtRNA影响，最好用sctransform</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">pbmc <span class="hljs-operator">&lt;-</span> ScaleData<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> vars.to.regress <span class="hljs-operator">=</span> <span class="hljs-string">&quot;percent.mt&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="二、线性降维"><a href="#二、线性降维" class="headerlink" title="二、线性降维"></a>二、线性降维</h2><blockquote><p>PCA 是主成分分析（Principal Component Analysis）的缩写。它是一种常用的<strong>数据降维</strong>技术，用于找到数据集中最重要的特征，并将数据映射到一个新的坐标系上，以便更好地理解数据的结构和模式。</p><p>在 PCA 中，通过线性变换将原始的高维数据转换成一组低维的特征，这些特征被称为主成分。这些主成分是原始特征的<strong>线性组合</strong>，按照重要性依次排列，<strong>第一个主成分包含最大方差</strong>，第二个主成分包含次大方差，以此类推。通过保留最重要的主成分，可以实现数据的降维，同时尽可能地保留原始数据的信息。</p></blockquote><p>来自<em>解决数据挖掘文章的figure1</em>的群友“池塘春草梦” 的回答：</p><blockquote><p>要弄清楚positive和negative的意思，首先要知道pca是什么。</p><p>pca的全称是Principal Component Analysis，三个单词分别就是主 成分 分析。</p><p>为什么要做pca？首先看看我们的输入，上面代码的输入应该是cell*gene矩阵，一般来说这个基因个数很多，或成为“特征”很多，但这为我们的分析带来了麻烦。</p><p>比如说我们想区分人的性别，于是我们开始搜集人的各种特征（头发长度、眼睛个数、鼻子个数、喉结个数……）。我们会发现：如果我们考虑所有的特征，分类效果很一般，因为有很多特征都是和性别无关的，比如眼睛和鼻子个数。</p><p>那该怎么办？一个思路就是我把这些特征融合起来，比如把眼睛鼻子个数融合起来成为一个新的特征、头发长度和喉结个数融合……</p><p>这些东西也就是所谓的主成分，通俗理解就是这些特征的主要成分。</p><p>专业一点就是pca通过正交变换将原始特征空间中的线性相关变量转换为新的线性无关变量，也就是主成分。</p><p>这些主成分的数量少于或等于原始特征的数量，同时能够保留原始数据的大部分变异性。</p><p>………分割线……………</p><p>了解了pca的原理，我们再来看看单细胞中pca的结果，刚刚我们输入cell*gene的矩阵，进行pca降维，用少数几个主成分表示了所有基因。</p><p>每个主成分（pc）通常会有一系列与之相关的系数（或称为载荷），这些系数有正有负。这些系数的正负和大小可以帮助我们理解每个主成分与原始特征的关系。</p><p>Positive（正）: 如果某个特征在主成分上的载荷为正，那么这意味着这个特征与主成分之间存在正相关关系。换句话说，当这个特征的值增加时，主成分的值也倾向于增加。<br>Negative（负）: 如果载荷为负，则表示该特征与主成分之间存在负相关关系。当这个特征的值增加时，主成分的值会倾向于减少。</p><p>在你给出的第1个图中，他对每个主成分都给出了相应的正相关基因和负相关基因。</p><p>第2个图就是把每个主成分（这里是pc1和pc2）中按照载荷从大到小排列。</p><p>横坐标就是指的载荷的大小，越大就是越正相关，越负就是越负相关。</p><p>纵坐标就是基因了，可以看到图2和图1的结果，都是能对应上的。</p></blockquote><p>当你进行 PCA 时，你会按照以下步骤进行详细的计算：</p><ol><li><p><strong>数据标准化</strong></p></li><li><p><strong>计算协方差矩阵</strong></p></li><li><p><strong>特征值分解</strong></p></li><li><p><strong>选择主成分</strong></p></li><li><p><strong>数据转换</strong></p></li></ol><p><img src="/../image/Seuratpictures%5CPCA1.png" alt="PCA1"></p><p><img src="/../image/Seuratpictures%5CPCA2.png" alt="PCA2"></p><p>通过这些步骤，你可以得到一个降维后的数据集，其中每个样本都被表示为一组新的主成分。这些主成分捕捉了原始数据中最重要的结构和变化。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">pbmc <span class="hljs-operator">&lt;-</span> RunPCA<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> features <span class="hljs-operator">=</span> VariableFeatures<span class="hljs-punctuation">(</span>object <span class="hljs-operator">=</span> pbmc<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># Examine and visualize PCA results a few different ways</span><br><span class="hljs-comment"># pbmc[[&quot;pca&quot;]] 表示从 pbmc 对象中获取 PCA 分析的结果</span><br><span class="hljs-comment"># 使用 dims = 1:5 参数指定打印前 5 个主成分的信息</span><br><span class="hljs-comment"># nfeatures = 5 参数指定每个主成分的前 5 个特征（基因）的信息。</span><br>print<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">[[</span><span class="hljs-string">&quot;pca&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span> dims <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> nfeatures <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">## PC_ 1 </span><br><span class="hljs-comment">## Positive:  CST3, TYROBP, LST1, AIF1, FTL </span><br><span class="hljs-comment">## Negative:  MALAT1, LTB, IL32, IL7R, CD2 </span><br><span class="hljs-comment">## PC_ 2 </span><br><span class="hljs-comment">## Positive:  CD79A, MS4A1, TCL1A, HLA-DQA1, HLA-DQB1 </span><br><span class="hljs-comment">## Negative:  NKG7, PRF1, CST7, GZMB, GZMA </span><br><span class="hljs-comment">## PC_ 3 </span><br><span class="hljs-comment">## Positive:  HLA-DQA1, CD79A, CD79B, HLA-DQB1, HLA-DPB1 </span><br><span class="hljs-comment">## Negative:  PPBP, PF4, SDPR, SPARC, GNG11 </span><br><span class="hljs-comment">## PC_ 4 </span><br><span class="hljs-comment">## Positive:  HLA-DQA1, CD79B, CD79A, MS4A1, HLA-DQB1 </span><br><span class="hljs-comment">## Negative:  VIM, IL7R, S100A6, IL32, S100A8 </span><br><span class="hljs-comment">## PC_ 5 </span><br><span class="hljs-comment">## Positive:  GZMB, NKG7, S100A8, FGFBP2, GNLY </span><br><span class="hljs-comment">## Negative:  LTB, IL7R, CKB, VIM, MS4A7</span><br></code></pre></td></tr></table></figure><blockquote><p>在 R 中，使用单括号 <code>[ ]</code> 用于提取列表对象中的元素，而使用双括号 <code>[[ ]]</code> 用于提取列表对象中的元素值。这两种方法都可以用于提取列表中的元素，但在不同的情况下有不同的用途：</p><ul><li>单括号 <code>[ ]</code> 用于提取子集，返回的是一个列表或者一个子集的列表。</li><li>双括号 <code>[[ ]]</code> 用于提取元素的值，返回的是元素的实际值。</li></ul><p>对于 Seurat 对象中存储的 PCA 结果，**<code>pbmc[[&quot;pca&quot;]]</code> 用于获取 PCA 结果的值，而 <code>pbmc[&quot;pca&quot;]</code> 则用于获取包含 PCA 结果的列表**。在这种情况下，我们通常想要获取 PCA 结果的值，因此使用双括号来访问这个元素的值是更常见的做法。</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">VizDimLoadings<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> dims <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> reduction <span class="hljs-operator">=</span> <span class="hljs-string">&quot;pca&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>左图是第一个主成分的信息，横轴应该是主成分得分，正表示正相关、负表示负相关。</p><p><img src="/../image/Seuratpictures%5Cpca_viz-1.png" alt="pca_viz-1"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">DimPlot<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> reduction <span class="hljs-operator">=</span> <span class="hljs-string">&quot;pca&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> NoLegend<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/../image/Seuratpictures%5Cpca_viz-2.png" alt="pca_viz-2"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">DimHeatmap<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> dims <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> cells <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">,</span> balanced <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/../image/Seuratpictures%5Csingle-heatmap-1.png" alt="single-heatmap-1"></p><p>PCA可以探索数据集中异质性的主要来源，通过画PCA热图看。</p><p>这一步是没有返回值的，不过作者改过代码，我装的版本还没改，所以要加上fast&#x3D;FALSE</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">DimHeatmap<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> dims <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">15</span><span class="hljs-punctuation">,</span> cells <span class="hljs-operator">=</span> <span class="hljs-number">500</span><span class="hljs-punctuation">,</span> balanced <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> fast <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>![multi-heatmap-1 (1)](..&#x2F;image&#x2F;Seuratpictures\multi-heatmap-1 (1).png)</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">ElbowPlot<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>对每一个主成分可解释的百分比进行排序</p><p><img src="/../image/Seuratpictures%5Celbow_plot-1.png" alt="elbow_plot-1"></p><p>在选择时如果主成分包括重要的需要被研究考虑的基因，应予以保留。可以尝试保留不同数量的主成分进行分析（10,15,50），但是结果不会大变。不要选择主成分时太苛刻，保留太少如5个会对下游分析造成不好的影响。</p><h2 id="三、细胞聚类"><a href="#三、细胞聚类" class="headerlink" title="三、细胞聚类"></a>三、细胞聚类</h2><p>采用基于图的聚类，K近邻法（k-nearset neighbor, KNN）</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#FindNeighbors，dims是在PCA后自行选择的维度，计算任意两个细胞之间的权重</span><br>pbmc <span class="hljs-operator">&lt;-</span> FindNeighbors<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> dims <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 聚类，分辨率参数，值越大，聚类数量越多。</span><br><span class="hljs-comment"># 0.4-1.2 之间设置此参数通常对于大约3000个细胞的单细胞数据集返回良好的结果。对于较大的数据集，最佳分辨率通常会提高</span><br>pbmc <span class="hljs-operator">&lt;-</span> FindClusters<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> resolution <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>这里resolutions对于大的数据集分辨率会提高，但是如果是小的数据集，大了以后在umap图上聚类会重叠，我直观上认为这样不好，感觉像是机器学习中的过度拟合一样。</p><h2 id="四、非线性降维（UMAP-tSNE）"><a href="#四、非线性降维（UMAP-tSNE）" class="headerlink" title="四、非线性降维（UMAP&#x2F;tSNE）"></a>四、非线性降维（UMAP&#x2F;tSNE）</h2><p>tSNE比UMAP聚类能分得更开，但是图里的细胞距离没有意义，UMAP图在距离里近的细胞相关性强。</p><p>To learn underlying structure in the dataset, in order to place similar cells together in low-dimensional space。所以基于图的聚类后相似的细胞应该定位在相同的位置。所以如果分辨率太高是没有意义的。而且本身这种降维聚类后再可视化有很大的局限性，聚类损失信息，可视化更损失信息，而且带有观察者的主观判断。而且这样的只会考虑细胞间的局部距离而忽略了全局定位。要避免仅仅基于可视化技术得出生物结论。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">pbmc <span class="hljs-operator">&lt;-</span> RunUMAP<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> dims <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># note that you can set `label = TRUE` or use the LabelClusters function to help label</span><br><span class="hljs-comment"># individual clusters</span><br>DimPlot<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> reduction <span class="hljs-operator">=</span> <span class="hljs-string">&quot;umap&quot;</span><span class="hljs-punctuation">)</span><br>saveRDS<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> file <span class="hljs-operator">=</span> <span class="hljs-string">&quot;../output/pbmc_tutorial.rds&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><strong>关于保存rds</strong>：</p><p>可以不需要重新运行scaledata，findneighbor，findcluster，runumap等计算步骤了，但是保存的时候会比较久，rds文件较大，几个G，需要预留时间空间。而且只要保存一次，就要把saveRDS注释掉，否则有可能在新的工作环境中运行了saveRDS，用空白的rds覆盖了原先的。</p><p><img src="/../image/Seuratpictures%5Cumapplot-1.png" alt="umapplot-1"></p><p><img src="/../image/Seuratpictures%5Cumap-resolution=2.png" alt="umap-resolution=2"></p><p>上面这个聚类resolution为2，下面为0.8，在有些地方似乎分开更清晰，但更大分辨率此处明显是不必要的。</p><p><img src="/../image/Seuratpictures%5Cumap-resolution=0.8.png" alt="umap-resolution=0.8"></p><h2 id="五、寻找聚类marker（差异表达的特征基因）"><a href="#五、寻找聚类marker（差异表达的特征基因）" class="headerlink" title="五、寻找聚类marker（差异表达的特征基因）"></a>五、寻找聚类marker（差异表达的特征基因）</h2><p>寻找是哪些差异表达的基因决定了聚类结果，也就是找聚类marker（标记基因）。将每个细胞与其他细胞相比，找出<strong>正相关与负相关</strong>的（positive，negative）基因。这是通过FindAllMarkers函数实现的。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># find all markers of cluster 2</span><br>cluster2.markers <span class="hljs-operator">&lt;-</span> FindMarkers<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> ident.1 <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>head<span class="hljs-punctuation">(</span>cluster2.markers<span class="hljs-punctuation">,</span> n <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>FindMarkers用到了很多统计方法，在这挖个坑。</p><blockquote><p>看R包内函数的说明文档：</p><p>在R中，<code>#&#39;</code> 是一种用于注释的特殊标记，通常用于文档注释和函数文档字符串中。在这里，<code>#&#39;</code> 用于注释函数参数的描述。参数描述通常包含在 <code>@param</code> 标签后面。</p><p><code>#&#39; @param</code> 表示一个函数参数的描述，后面跟着参数的名称。<code>#&#39; \item&#123;&#125;</code> 用于列出参数的选项或说明。在这种情况下，<code>\item&#123;&#125;</code> 是在 <code>@param</code> 内部用于描述参数可能的选项或值。</p><p>这种表示格式通常被称为”<strong>Roxygen</strong>“格式，用于R语言中的文档注释。Roxygen注释结合了R代码和相关的文档信息，可以通过Roxygen软件包生成文档。一旦文档被正确注释，可以使用Roxygen软件包中的功能自动生成文档，这些文档通常被称为”<strong>Rd文件</strong>“，并且可以被R中的<code>?</code>和<code>help()</code>函数调用，以及其他一些工具和IDE使用。</p><p>在GitHub中，这种注释格式确实也很方便，因为GitHub支持Markdown格式，而Roxygen的注释风格很接近Markdown风格，因此可以直接在GitHub上清晰地显示文档注释。</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment">#&#x27; <span class="hljs-doctag">@param <span class="hljs-variable">test.use</span></span> Denotes which test to use. Available options are:</span><br><span class="hljs-comment">#&#x27; <span class="hljs-keyword">\itemize</span>&#123;</span><br><span class="hljs-comment">#&#x27;  <span class="hljs-keyword">\item</span>&#123;&quot;wilcox&quot;&#125; : Identifies differentially expressed genes between two</span><br><span class="hljs-comment">#&#x27;  groups of cells using a Wilcoxon Rank Sum test (default); will use a fast</span><br><span class="hljs-comment">#&#x27;  implementation by Presto if installed</span><br><span class="hljs-comment">#&#x27;  <span class="hljs-keyword">\item</span>&#123;&quot;wilcox_limma&quot;&#125; : Identifies differentially expressed genes between two</span><br><span class="hljs-comment">#&#x27;  groups of cells using the limma implementation of the Wilcoxon Rank Sum test;</span><br><span class="hljs-comment">#&#x27;  set this option to reproduce results from Seurat v4</span><br><span class="hljs-comment">#&#x27;  <span class="hljs-keyword">\item</span>&#123;&quot;bimod&quot;&#125; : Likelihood-ratio test for single cell gene expression,</span><br><span class="hljs-comment">#&#x27;  (McDavid et al., Bioinformatics, 2013)</span><br><span class="hljs-comment">#&#x27;  <span class="hljs-keyword">\item</span>&#123;&quot;roc&quot;&#125; : Identifies &#x27;markers&#x27; of gene expression using ROC analysis.</span><br><span class="hljs-comment">#&#x27;  For each gene, evaluates (using AUC) a classifier built on that gene alone,</span><br><span class="hljs-comment">#&#x27;  to classify between two groups of cells. An AUC value of 1 means that</span><br><span class="hljs-comment">#&#x27;  expression values for this gene alone can perfectly classify the two</span><br><span class="hljs-comment">#&#x27;  groupings (i.e. Each of the cells in cells.1 exhibit a higher level than</span><br><span class="hljs-comment">#&#x27;  each of the cells in cells.2). An AUC value of 0 also means there is perfect</span><br><span class="hljs-comment">#&#x27;  classification, but in the other direction. A value of 0.5 implies that</span><br><span class="hljs-comment">#&#x27;  the gene has no predictive power to classify the two groups. Returns a</span><br><span class="hljs-comment">#&#x27;  &#x27;predictive power&#x27; (abs(AUC-0.5) * 2) ranked matrix of putative differentially</span><br><span class="hljs-comment">#&#x27;  expressed genes.</span><br><span class="hljs-comment">#&#x27;  <span class="hljs-keyword">\item</span>&#123;&quot;t&quot;&#125; : Identify differentially expressed genes between two groups of</span><br><span class="hljs-comment">#&#x27;  cells using the Student&#x27;s t-test.</span><br><span class="hljs-comment">#&#x27;  <span class="hljs-keyword">\item</span>&#123;&quot;negbinom&quot;&#125; : Identifies differentially expressed genes between two</span><br><span class="hljs-comment">#&#x27;   groups of cells using a negative binomial generalized linear model.</span><br><span class="hljs-comment">#&#x27;   Use only for UMI-based datasets</span><br><span class="hljs-comment">#&#x27;  <span class="hljs-keyword">\item</span>&#123;&quot;poisson&quot;&#125; : Identifies differentially expressed genes between two</span><br><span class="hljs-comment">#&#x27;   groups of cells using a poisson generalized linear model.</span><br><span class="hljs-comment">#&#x27;   Use only for UMI-based datasets</span><br><span class="hljs-comment">#&#x27;  <span class="hljs-keyword">\item</span>&#123;&quot;LR&quot;&#125; : Uses a logistic regression framework to determine differentially</span><br><span class="hljs-comment">#&#x27;  expressed genes. Constructs a logistic regression model predicting group</span><br><span class="hljs-comment">#&#x27;  membership based on each feature individually and compares this to a null</span><br><span class="hljs-comment">#&#x27;  model with a likelihood ratio test.</span><br><span class="hljs-comment">#&#x27;  <span class="hljs-keyword">\item</span>&#123;&quot;MAST&quot;&#125; : Identifies differentially expressed genes between two groups</span><br><span class="hljs-comment">#&#x27;  of cells using a hurdle model tailored to scRNA-seq data. Utilizes the MAST</span><br><span class="hljs-comment">#&#x27;  package to run the DE testing.</span><br><span class="hljs-comment">#&#x27;  <span class="hljs-keyword">\item</span>&#123;&quot;DESeq2&quot;&#125; : Identifies differentially expressed genes between two groups</span><br><span class="hljs-comment">#&#x27;  of cells based on a model using DESeq2 which uses a negative binomial</span><br><span class="hljs-comment">#&#x27;  distribution (Love et al, Genome Biology, 2014).This test does not support</span><br><span class="hljs-comment">#&#x27;  pre-filtering of genes based on average difference (or percent detection rate)</span><br><span class="hljs-comment">#&#x27;  between cell groups. However, genes may be pre-filtered based on their</span><br><span class="hljs-comment">#&#x27;  minimum detection rate (min.pct) across both cell groups. To use this method,</span><br><span class="hljs-comment">#&#x27;  please install DESeq2, using the instructions at</span><br><span class="hljs-comment">#&#x27;  https://bioconductor.org/packages/release/bioc/html/DESeq2.html</span><br><span class="hljs-comment">#&#x27; &#125;</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs R">FindMarkers.default <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span><br>  object<span class="hljs-punctuation">,</span><br>  slot <span class="hljs-operator">=</span> <span class="hljs-string">&quot;data&quot;</span><span class="hljs-punctuation">,</span><br>  cells.1 <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>  cells.2 <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>  features <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>  logfc.threshold <span class="hljs-operator">=</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span><br>  test.use <span class="hljs-operator">=</span> <span class="hljs-string">&quot;wilcox&quot;</span><span class="hljs-punctuation">,</span><br>  min.pct <span class="hljs-operator">=</span> <span class="hljs-number">0.01</span><span class="hljs-punctuation">,</span><br>  min.diff.pct <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-literal">Inf</span><span class="hljs-punctuation">,</span><br>  verbose <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span><br>  only.pos <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>  max.cells.per.ident <span class="hljs-operator">=</span> <span class="hljs-literal">Inf</span><span class="hljs-punctuation">,</span><br>  random.seed <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>  latent.vars <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>  min.cells.feature <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>  min.cells.group <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span><br>  fc.results <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>  densify <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span><br>  ...<br><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  ValidateCellGroups<span class="hljs-punctuation">(</span><br>    object <span class="hljs-operator">=</span> object<span class="hljs-punctuation">,</span><br>    cells.1 <span class="hljs-operator">=</span> cells.1<span class="hljs-punctuation">,</span><br>    cells.2 <span class="hljs-operator">=</span> cells.2<span class="hljs-punctuation">,</span><br>    min.cells.group <span class="hljs-operator">=</span> min.cells.group<br>  <span class="hljs-punctuation">)</span><br>  features <span class="hljs-operator">&lt;-</span> features <span class="hljs-operator">%||%</span> rownames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><br>  <span class="hljs-comment"># reset parameters so no feature filtering is performed</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>test.use <span class="hljs-operator">%in%</span> DEmethods_noprefilter<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    features <span class="hljs-operator">&lt;-</span> rownames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><br>    min.diff.pct <span class="hljs-operator">&lt;-</span> <span class="hljs-operator">-</span><span class="hljs-literal">Inf</span><br>    logfc.threshold <span class="hljs-operator">&lt;-</span> 0<br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-comment"># feature selection (based on percentages)</span><br>  alpha.min <span class="hljs-operator">&lt;-</span> pmax<span class="hljs-punctuation">(</span>fc.results<span class="hljs-operator">$</span>pct.1<span class="hljs-punctuation">,</span> fc.results<span class="hljs-operator">$</span>pct.2<span class="hljs-punctuation">)</span><br>  <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> alpha.min<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> rownames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> fc.results<span class="hljs-punctuation">)</span><br>  features <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> which<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> alpha.min <span class="hljs-operator">&gt;=</span> min.pct<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> features<span class="hljs-punctuation">)</span> <span class="hljs-operator">==</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    warning<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;No features pass min.pct threshold; returning empty data.frame&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>fc.results<span class="hljs-punctuation">[</span>features<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>  alpha.diff <span class="hljs-operator">&lt;-</span> alpha.min <span class="hljs-operator">-</span> pmin<span class="hljs-punctuation">(</span>fc.results<span class="hljs-operator">$</span>pct.1<span class="hljs-punctuation">,</span> fc.results<span class="hljs-operator">$</span>pct.2<span class="hljs-punctuation">)</span><br>  features <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span><br>    x <span class="hljs-operator">=</span> which<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> alpha.min <span class="hljs-operator">&gt;=</span> min.pct <span class="hljs-operator">&amp;</span> alpha.diff <span class="hljs-operator">&gt;=</span> min.diff.pct<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">)</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> features<span class="hljs-punctuation">)</span> <span class="hljs-operator">==</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    warning<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;No features pass min.diff.pct threshold; returning empty data.frame&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>fc.results<span class="hljs-punctuation">[</span>features<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br><br>  <span class="hljs-comment"># feature selection (based on logFC)</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>slot <span class="hljs-operator">!=</span> <span class="hljs-string">&quot;scale.data&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    total.diff <span class="hljs-operator">&lt;-</span> fc.results<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-comment">#first column is logFC</span><br>    <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>total.diff<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> rownames<span class="hljs-punctuation">(</span>fc.results<span class="hljs-punctuation">)</span><br>    features.diff <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>only.pos<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> which<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> total.diff <span class="hljs-operator">&gt;=</span> logfc.threshold<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span> <span class="hljs-keyword">else</span> <span class="hljs-punctuation">&#123;</span><br>      <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> which<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> total.diff<span class="hljs-punctuation">)</span> <span class="hljs-operator">&gt;=</span> logfc.threshold<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>    features <span class="hljs-operator">&lt;-</span> intersect<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> features<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> features.diff<span class="hljs-punctuation">)</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> features<span class="hljs-punctuation">)</span> <span class="hljs-operator">==</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>      warning<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;No features pass logfc.threshold threshold; returning empty data.frame&quot;</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>fc.results<span class="hljs-punctuation">[</span>features<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br><br>  <span class="hljs-comment"># subsample cell groups if they are too large</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>max.cells.per.ident <span class="hljs-operator">&lt;</span> <span class="hljs-literal">Inf</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    set.seed<span class="hljs-punctuation">(</span>seed <span class="hljs-operator">=</span> random.seed<span class="hljs-punctuation">)</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> cells.1<span class="hljs-punctuation">)</span> <span class="hljs-operator">&gt;</span> max.cells.per.ident<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>      cells.1 <span class="hljs-operator">&lt;-</span> sample<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> cells.1<span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> max.cells.per.ident<span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> cells.2<span class="hljs-punctuation">)</span> <span class="hljs-operator">&gt;</span> max.cells.per.ident<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>      cells.2 <span class="hljs-operator">&lt;-</span> sample<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> cells.2<span class="hljs-punctuation">,</span> size <span class="hljs-operator">=</span> max.cells.per.ident<span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span><span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> latent.vars<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>      latent.vars <span class="hljs-operator">&lt;-</span> latent.vars<span class="hljs-punctuation">[</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>cells.1<span class="hljs-punctuation">,</span> cells.2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">,</span> drop <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>inherits<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">,</span> what <span class="hljs-operator">=</span> <span class="hljs-string">&quot;IterableMatrix&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-keyword">if</span><span class="hljs-punctuation">(</span>test.use <span class="hljs-operator">!=</span> <span class="hljs-string">&quot;wilcox&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>      stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Differential expression with BPCells currently only supports the &#x27;wilcox&#x27; method.&quot;</span><span class="hljs-punctuation">,</span><br>           <span class="hljs-string">&quot; Please rerun with test.use = &#x27;wilcox&#x27;&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>    data.use <span class="hljs-operator">&lt;-</span> object<span class="hljs-punctuation">[</span>features<span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>cells.1<span class="hljs-punctuation">,</span> cells.2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> drop <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">]</span><br>    groups <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;foreground&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>cells.1<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;background&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>cells.2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    de.results <span class="hljs-operator">&lt;-</span> suppressMessages<span class="hljs-punctuation">(</span><br>      BPCells<span class="hljs-operator">::</span>marker_features<span class="hljs-punctuation">(</span>data.use<span class="hljs-punctuation">,</span> group <span class="hljs-operator">=</span> groups<span class="hljs-punctuation">,</span> method <span class="hljs-operator">=</span> <span class="hljs-string">&quot;wilcoxon&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span><br>    de.results <span class="hljs-operator">&lt;-</span> subset<span class="hljs-punctuation">(</span>de.results<span class="hljs-punctuation">,</span> de.results<span class="hljs-operator">$</span>foreground <span class="hljs-operator">==</span> <span class="hljs-string">&quot;foreground&quot;</span><span class="hljs-punctuation">)</span><br>    de.results <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>feature <span class="hljs-operator">=</span> de.results<span class="hljs-operator">$</span>feature<span class="hljs-punctuation">,</span><br>                             p_val <span class="hljs-operator">=</span> de.results<span class="hljs-operator">$</span>p_val_raw<span class="hljs-punctuation">)</span><br>    rownames<span class="hljs-punctuation">(</span>de.results<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> de.results<span class="hljs-operator">$</span>feature<br>    de.results<span class="hljs-operator">$</span>feature <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br>  <span class="hljs-punctuation">&#125;</span> <span class="hljs-keyword">else</span> <span class="hljs-punctuation">&#123;</span><br>    de.results <span class="hljs-operator">&lt;-</span> PerformDE<span class="hljs-punctuation">(</span><br>      object <span class="hljs-operator">=</span> object<span class="hljs-punctuation">,</span><br>      cells.1 <span class="hljs-operator">=</span> cells.1<span class="hljs-punctuation">,</span><br>      cells.2 <span class="hljs-operator">=</span> cells.2<span class="hljs-punctuation">,</span><br>      features <span class="hljs-operator">=</span> features<span class="hljs-punctuation">,</span><br>      test.use <span class="hljs-operator">=</span> test.use<span class="hljs-punctuation">,</span><br>      verbose <span class="hljs-operator">=</span> verbose<span class="hljs-punctuation">,</span><br>      min.cells.feature <span class="hljs-operator">=</span> min.cells.feature<span class="hljs-punctuation">,</span><br>      latent.vars <span class="hljs-operator">=</span> latent.vars<span class="hljs-punctuation">,</span><br>      densify <span class="hljs-operator">=</span> densify<span class="hljs-punctuation">,</span><br>      ...<br>    <span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>  de.results <span class="hljs-operator">&lt;-</span> cbind<span class="hljs-punctuation">(</span>de.results<span class="hljs-punctuation">,</span> fc.results<span class="hljs-punctuation">[</span>rownames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> de.results<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">,</span> drop <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>only.pos<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    de.results <span class="hljs-operator">&lt;-</span> de.results<span class="hljs-punctuation">[</span>de.results<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">,</span> drop <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>test.use <span class="hljs-operator">%in%</span> DEmethods_nocorrect<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    de.results <span class="hljs-operator">&lt;-</span> de.results<span class="hljs-punctuation">[</span>order<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span>de.results<span class="hljs-operator">$</span>power<span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span>de.results<span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><br>  <span class="hljs-punctuation">&#125;</span> <span class="hljs-keyword">else</span> <span class="hljs-punctuation">&#123;</span><br>    de.results <span class="hljs-operator">&lt;-</span> de.results<span class="hljs-punctuation">[</span>order<span class="hljs-punctuation">(</span>de.results<span class="hljs-operator">$</span>p_val<span class="hljs-punctuation">,</span> <span class="hljs-operator">-</span><span class="hljs-built_in">abs</span><span class="hljs-punctuation">(</span>de.results<span class="hljs-operator">$</span>pct.1<span class="hljs-operator">-</span>de.results<span class="hljs-operator">$</span>pct.2<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><br>    de.results<span class="hljs-operator">$</span>p_val_adj <span class="hljs-operator">=</span> p.adjust<span class="hljs-punctuation">(</span><br>      p <span class="hljs-operator">=</span> de.results<span class="hljs-operator">$</span>p_val<span class="hljs-punctuation">,</span><br>      method <span class="hljs-operator">=</span> <span class="hljs-string">&quot;bonferroni&quot;</span><span class="hljs-punctuation">,</span><br>      n <span class="hljs-operator">=</span> nrow<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>de.results<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>FindMarkers使用了<code>presto</code>包，presto makes it fast and easy to run Wilcoxon rank sum test and auROC analysis on large datasets.</p><p>DE分析比较慢，如果想要提速度，需要调整的parameter有min.pct和logfc.threshold</p><blockquote><h2 id="Value"><a href="#Value" class="headerlink" title="Value"></a>Value</h2><p>data.frame with a ranked list of putative markers as rows, and associated statistics as columns (p-values, ROC score, etc., depending on the test used ()). The following columns are always present:<code>test.use</code></p><ul><li><code>avg_logFC</code>: log fold-chage of the average expression between the two groups. Positive values indicate that the gene is more highly expressed in the first group</li><li><code>pct.1</code>: The percentage of cells where the gene is detected in the first group</li><li><code>pct.2</code>: The percentage of cells where the gene is detected in the second group</li><li><code>p_val_adj</code>: Adjusted p-value, based on bonferroni correction using all genes in the dataset</li></ul></blockquote><p><img src="/../image/Seuratpictures%5Clog2FoldChange.png" alt="log2FoldChange"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># find all markers distinguishing cluster 5 from clusters 0 and 3</span><br>cluster5.markers <span class="hljs-operator">&lt;-</span> FindMarkers<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> ident.1 <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> ident.2 <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>head<span class="hljs-punctuation">(</span>cluster5.markers<span class="hljs-punctuation">,</span> n <span class="hljs-operator">=</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># find markers for every cluster compared to all remaining cells, report only the positive</span><br><span class="hljs-comment"># ones</span><br>pbmc.markers <span class="hljs-operator">&lt;-</span> FindAllMarkers<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> only.pos <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>pbmc.markers <span class="hljs-operator">%&gt;%</span><br>    group_by<span class="hljs-punctuation">(</span>cluster<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>avg_log2FC <span class="hljs-operator">&gt;</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>We include several tools for visualizing marker expression. <code>VlnPlot()</code> (shows expression probability distributions across clusters), and <code>FeaturePlot()</code> (visualizes feature expression on a tSNE or PCA plot) are our most commonly used visualizations. We also suggest exploring <code>RidgePlot()</code>, <code>CellScatter()</code>, and <code>DotPlot()</code> as additional methods to view your dataset.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># you can plot raw counts as well</span><br>VlnPlot<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> features <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;NKG7&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;PF4&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> slot <span class="hljs-operator">=</span> <span class="hljs-string">&quot;counts&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">log</span> <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><strong><code>slot = &quot;counts&quot;</code></strong>: 这个参数指定了从Seurat对象中提取原始计数数据。在这个例子中，我们想要绘制基因的原始计数数据，因此设置为”counts”。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">FeaturePlot<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> features <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;MS4A1&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;GNLY&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;CD3E&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;CD14&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;FCER1A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;FCGR3A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;LYZ&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;PPBP&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;CD8A&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/../image/Seuratpictures%5Cunnamed-chunk-3-1.png" alt="unnamed-chunk-3-1"></p><p><code>DoHeatmap()</code> generates an expression heatmap for given cells and features. In this case, we are plotting the top 20 markers (or all markers if less than 20) for each cluster.我怀疑这里写错了，应该是top 10 markers。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">pbmc.markers <span class="hljs-operator">%&gt;%</span><br>    group_by<span class="hljs-punctuation">(</span>cluster<span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    dplyr<span class="hljs-operator">::</span>filter<span class="hljs-punctuation">(</span>avg_log2FC <span class="hljs-operator">&gt;</span> <span class="hljs-number">1</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    slice_head<span class="hljs-punctuation">(</span>n <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">%&gt;%</span><br>    ungroup<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">-&gt;</span> top10<br>DoHeatmap<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> features <span class="hljs-operator">=</span> top10<span class="hljs-operator">$</span>gene<span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> NoLegend<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/../image/Seuratpictures%5CclusterHeatmap-1.png" alt="clusterHeatmap-1"></p><h2 id="六、细胞聚类注释"><a href="#六、细胞聚类注释" class="headerlink" title="六、细胞聚类注释"></a>六、细胞聚类注释</h2><p>seurat guide clusting tutorial写的比较简略。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">new.cluster.ids <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Naive CD4 T&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;CD14+ Mono&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Memory CD4 T&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;CD8 T&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;FCGR3A+ Mono&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;NK&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;DC&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Platelet&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>new.cluster.ids<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> levels<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">)</span><br>pbmc <span class="hljs-operator">&lt;-</span> RenameIdents<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> new.cluster.ids<span class="hljs-punctuation">)</span><br>DimPlot<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> reduction <span class="hljs-operator">=</span> <span class="hljs-string">&quot;umap&quot;</span><span class="hljs-punctuation">,</span> label <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> pt.size <span class="hljs-operator">=</span> <span class="hljs-number">0.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> NoLegend<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ggplot2<span class="hljs-punctuation">)</span><br>plot <span class="hljs-operator">&lt;-</span> DimPlot<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> reduction <span class="hljs-operator">=</span> <span class="hljs-string">&quot;umap&quot;</span><span class="hljs-punctuation">,</span> label <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> label.size <span class="hljs-operator">=</span> <span class="hljs-number">4.5</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> xlab<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;UMAP 1&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> ylab<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;UMAP 2&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span><br>    theme<span class="hljs-punctuation">(</span>axis.title <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">18</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> legend.text <span class="hljs-operator">=</span> element_text<span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">18</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> guides<span class="hljs-punctuation">(</span>colour <span class="hljs-operator">=</span> guide_legend<span class="hljs-punctuation">(</span>override.aes <span class="hljs-operator">=</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>size <span class="hljs-operator">=</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>ggsave<span class="hljs-punctuation">(</span>filename <span class="hljs-operator">=</span> <span class="hljs-string">&quot;../output/images/pbmc3k_umap.jpg&quot;</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">7</span><span class="hljs-punctuation">,</span> width <span class="hljs-operator">=</span> <span class="hljs-number">12</span><span class="hljs-punctuation">,</span> plot <span class="hljs-operator">=</span> plot<span class="hljs-punctuation">,</span> quality <span class="hljs-operator">=</span> <span class="hljs-number">50</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/../image/Seuratpictures%5Clabelplot-1.png" alt="labelplot-1"></p>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
      <tag>Seurat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Learning Seurat - 预处理</title>
    <link href="/2024/09/03/20240903Seurat%E9%A2%84%E5%A4%84%E7%90%86/"/>
    <url>/2024/09/03/20240903Seurat%E9%A2%84%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="标准预处理工作流"><a href="#标准预处理工作流" class="headerlink" title="标准预处理工作流"></a>标准预处理工作流</h1><p>预处理工作流包括：</p><ul><li>根据QC指标（quality control）选择和过滤细胞</li><li>规范化数据（normalizing data）</li><li>缩放</li></ul><h3 id="1-质量控制QC和为进一步分析选择细胞"><a href="#1-质量控制QC和为进一步分析选择细胞" class="headerlink" title="1.质量控制QC和为进一步分析选择细胞"></a>1.质量控制QC和为进一步分析选择细胞</h3><p>scRNA-seq关键一步是确保在下游分析中只包括单个活细胞。在单个基因中量化基因表达促进了对全基因组中转录波动（噪音）的研究。</p><p>微流控或液滴技术，一次运行中对数以万计的细胞进行测序。现有的scRNA-seq方案导致细胞受到压力、破坏、死亡，或者有空的捕获——低质量的细胞。</p><p>与细胞质相关的基因在破碎的细胞中强烈下调，（双侧配对t检验），与高质量细胞相比，破碎的细胞在转录组范围内的噪声水平增加，<strong>含有多个细胞的孔显示出与破碎细胞相似的表达和噪声模式</strong>，这表明多个细胞包含破碎细胞和高质量细胞的混合物。</p><ul><li>The number of unique genes detected in each cell.<ul><li><strong>Low-quality cells</strong> or <strong>empty droplets</strong> will often have very few genes</li><li><strong>Cell doublets</strong> or <strong>multiplets</strong> may exhibit an aberrantly high gene count（高了不好，而且不仅仅是高，多个细胞在一个孔里往往存在细胞破坏）</li></ul></li><li>Similarly, the total number of molecules detected within a cell (correlates strongly with unique genes)</li><li>The percentage of reads that map to the mitochondrial genome<ul><li>Low-quality &#x2F; dying cells often exhibit extensive mitochondrial contamination（有些细胞在镜下和正常可能没有明显不同，但是也有mRNA的泄露，线粒体RNA表达上调。破碎细胞中 mtDNA 的 RNA 水平上调表明细胞质含量丢失。在细胞膜破裂的情况下，细胞质RNA会丢失，但线粒体中封闭的RNA会保留）</li><li>We calculate <strong>mitochondrial QC metrics</strong> with the function, which calculates the percentage of counts originating from a set of features<code>PercentageFeatureSet()</code></li><li>We use the set of all genes starting with <code>MT-</code>as a set of mitochondrial genes</li></ul></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># The [[ operator can add columns to object metadata. This is a great place to stash QC stats</span><br>pbmc<span class="hljs-punctuation">[[</span><span class="hljs-string">&quot;percent.mt&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> PercentageFeatureSet<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> pattern <span class="hljs-operator">=</span> <span class="hljs-string">&quot;^MT-&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><code>计算给定特征的计数所占的比例：PercentageFeatureSet</code>为每个细胞计算符合某种特征的总数的百分比，比如计算细胞中映射到线粒体转录本中的基因比例。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">PercentageFeatureSet<span class="hljs-punctuation">(</span><br>  object<span class="hljs-punctuation">,</span><br>  <span class="hljs-comment"># 正则用于匹配</span><br>  pattern <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>  features <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>  col.name <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span><br>  assay <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><br><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>QC 标准在Seurat中在<code>CreateSeuratObject()</code>时就已经计算过并保存了，通过meta.data查看</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># Show QC metrics for the first 5 cells</span><br>head<span class="hljs-punctuation">(</span>pbmc<span class="hljs-operator">@</span>meta.data<span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment">##                  orig.ident nCount_RNA nFeature_RNA percent.mt</span><br><span class="hljs-comment">## AAACATACAACCAC-1     pbmc3k       2419          779  3.0177759</span><br><span class="hljs-comment">## AAACATTGAGCTAC-1     pbmc3k       4903         1352  3.7935958</span><br><span class="hljs-comment">## AAACATTGATCAGC-1     pbmc3k       3147         1129  0.8897363</span><br><span class="hljs-comment">## AAACCGTGCTTCCG-1     pbmc3k       2639          960  1.7430845</span><br><span class="hljs-comment">## AAACCGTGTATGCG-1     pbmc3k        980          521  1.2244898</span><br></code></pre></td></tr></table></figure><p>可视化QC标准，<strong>quality control只是通过计算表示细胞质量，质控，但不筛选！</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># Visualize QC metrics as a violin plot</span><br>VlnPlot<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> features <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;nFeature_RNA&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;nCount_RNA&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;percent.mt&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/../image/Seuratpictures/qc2-1.png" alt="qc2-1"></p><p>这里Count就是所有的RNA计数，Feature就是特征的RNA表达，这里的坐标轴不同，但是能看出nCountRNA分布更广泛，而mtRNA占比大多数都在2%附近。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># FeatureScatter is typically used to visualize feature-feature relationships, </span><br><span class="hljs-comment"># but can be used for anything calculated by the object, i.e. columns in object metadata, PC scores etc.</span><br><br>plot1 <span class="hljs-operator">&lt;-</span> FeatureScatter<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> feature1 <span class="hljs-operator">=</span> <span class="hljs-string">&quot;nCount_RNA&quot;</span><span class="hljs-punctuation">,</span> feature2 <span class="hljs-operator">=</span> <span class="hljs-string">&quot;percent.mt&quot;</span><span class="hljs-punctuation">)</span><br>plot2 <span class="hljs-operator">&lt;-</span> FeatureScatter<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> feature1 <span class="hljs-operator">=</span> <span class="hljs-string">&quot;nCount_RNA&quot;</span><span class="hljs-punctuation">,</span> feature2 <span class="hljs-operator">=</span> <span class="hljs-string">&quot;nFeature_RNA&quot;</span><span class="hljs-punctuation">)</span><br>plot1 <span class="hljs-operator">+</span> plot2<br></code></pre></td></tr></table></figure><p><img src="/../image/Seuratpictures/qc2-2.png" alt="qc2-2"></p><p>这两张图说明，特征RNA和总RNA是线性关系，但是mtRNA在总RNA多的时候往往少，总RNA少的时候往往多，不是线性关系，可能是总RNA多的时候往往细胞完整，RNA没有泄露，mtRNA占比少，总RNA少的时候往往细胞RNA丢失，线粒体中RNA保留，占比增加。<strong>图上方的是Pearson correlation</strong>。</p><blockquote><p>皮尔逊积矩相关系数（Pearson product-moment correlation coefficient， PPMCC），又叫样本相关系数。</p><p><img src="/../image/Seuratpictures/1.png" alt="1"></p><p>Cov(X,Y)为X与Y的协方差，Var[X]为X的方差，Var[Y]为Y的方差。r的取值范围为-1≤r≤1，当r接近±1时表明观察的数据线性相关较强，当r接近0时表明观察数据无线性相关。当用样本相关系数来反映总体的变量之间是否相关，在样本容量比较小时通常需要进行相关系数的检验。</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">pbmc <span class="hljs-operator">&lt;-</span> subset<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> subset <span class="hljs-operator">=</span> nFeature_RNA <span class="hljs-operator">&gt;</span> <span class="hljs-number">200</span> <span class="hljs-operator">&amp;</span> nFeature_RNA <span class="hljs-operator">&lt;</span> <span class="hljs-number">2500</span> <span class="hljs-operator">&amp;</span> percent.mt <span class="hljs-operator">&lt;</span> <span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>nFeature小于200说明质量不高，数量太少，可能是因为细胞破碎或死亡导致的RNA减少或者是空细胞槽，大于2500说明可能是多细胞，多细胞也不好，上文提到了。</p><h3 id="2-规范化细胞Normalizing-the-data"><a href="#2-规范化细胞Normalizing-the-data" class="headerlink" title="2.规范化细胞Normalizing the data"></a>2.规范化细胞Normalizing the data</h3><p>采用全局缩放归一化方法：LogNormalize。NormalizeData函数默认就是用LogNormalize。<br><strong>LogNormalize</strong>：对每个细胞的总表达量（total expression）乘以比例因子（scale factor），默认10000，然后取log。<strong>Normalized values are stored in .<code>pbmc[[&quot;RNA&quot;]]$data</code></strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">pbmc <span class="hljs-operator">&lt;-</span> NormalizeData<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> normalization.method <span class="hljs-operator">=</span> <span class="hljs-string">&quot;LogNormalize&quot;</span><span class="hljs-punctuation">,</span> scale.factor <span class="hljs-operator">=</span> <span class="hljs-number">10000</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>全局扩展依赖于假设：每个细胞最初包含相同数量的总RNA。解决这个问题可以用ScTransform，后文补充。</p><h3 id="3-特征选择"><a href="#3-特征选择" class="headerlink" title="3.特征选择"></a>3.特征选择</h3><p>计算在数据集中表现出高细胞间变异的特征子集（即，它们在某些细胞中高表达，而在其他细胞中低表达），利用了<strong>标准差，越大说明变异越大</strong>。但是还不能完全理解在vst方法中要用到局部加权回归来取代方差。目前的理解：对于一种featureRNA，在有些细胞中高表达，有些细胞中低表达，还在大部分细胞中没有表达，局部方差回归想要找到存在于平均值和方差的关系，当平均值能够在一定程度上预测方差时，其比值更稳健。如果不用vst，用分箱，也是想说明标准差在不同的均值和方差的线性取值范围内，其关系不是恒定的，至少在分箱后不同箱内存在不同。通过局部加权回归和分箱，解决局部数据分布不均的问题。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">pbmc <span class="hljs-operator">&lt;-</span> FindVariableFeatures<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> selection.method <span class="hljs-operator">=</span> <span class="hljs-string">&quot;vst&quot;</span><span class="hljs-punctuation">,</span> nfeatures <span class="hljs-operator">=</span> <span class="hljs-number">2000</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># Identify the 10 most highly variable genes</span><br>top10 <span class="hljs-operator">&lt;-</span> head<span class="hljs-punctuation">(</span>VariableFeatures<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># plot variable features with and without labels</span><br>plot1 <span class="hljs-operator">&lt;-</span> VariableFeaturePlot<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">)</span><br>plot2 <span class="hljs-operator">&lt;-</span> LabelPoints<span class="hljs-punctuation">(</span>plot <span class="hljs-operator">=</span> plot1<span class="hljs-punctuation">,</span> points <span class="hljs-operator">=</span> top10<span class="hljs-punctuation">,</span> repel <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>plot1 <span class="hljs-operator">+</span> plot2<br></code></pre></td></tr></table></figure><p><img src="/../image/Seuratpictures/var_features-1.png" alt="var_features-1"></p><p>选了2000个特征，然后标出了前十个。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs R">FindVariableFeatures.V3Matrix <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span><br>  object<span class="hljs-punctuation">,</span><br>  selection.method <span class="hljs-operator">=</span> <span class="hljs-string">&quot;vst&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#选择方法，vst或mvp</span><br>  loess.span <span class="hljs-operator">=</span> <span class="hljs-number">0.3</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#局部加权回归平滑度</span><br>  clip.max <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;auto&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#最大截断值</span><br>  mean.function <span class="hljs-operator">=</span> FastExpMean<span class="hljs-punctuation">,</span> <span class="hljs-comment">#均值计算</span><br>  dispersion.function <span class="hljs-operator">=</span> FastLogVMR<span class="hljs-punctuation">,</span> <span class="hljs-comment">#离散度计算</span><br>  num.bin <span class="hljs-operator">=</span> <span class="hljs-number">20</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#分箱数量</span><br>  binning.method <span class="hljs-operator">=</span> <span class="hljs-string">&quot;equal_width&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#分箱方法</span><br>  verbose <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <span class="hljs-comment">#是否显示进度</span><br>  ...<br><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  CheckDots<span class="hljs-punctuation">(</span>...<span class="hljs-punctuation">)</span><br>    <span class="hljs-comment">#不是矩阵的转为矩阵，不是压缩稀疏矩阵的转</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>inherits<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;Matrix&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    object <span class="hljs-operator">&lt;-</span> as<span class="hljs-punctuation">(</span>object <span class="hljs-operator">=</span> as.matrix<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> Class <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;Matrix&#x27;</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>inherits<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">,</span> what <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;dgCMatrix&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    object <span class="hljs-operator">&lt;-</span> as.sparse<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-comment">#检查方法是否为vst</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>selection.method <span class="hljs-operator">==</span> <span class="hljs-string">&quot;vst&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>clip.max <span class="hljs-operator">==</span> <span class="hljs-string">&#x27;auto&#x27;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>        <span class="hljs-comment">#clip.max参数为auto，设置为数据对象列数的平方根</span><br>      clip.max <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> ncol<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>      <span class="hljs-comment">#创建一个包换行均值的数据框</span><br>    hvf.info <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>mean <span class="hljs-operator">=</span> rowMeans<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#SparseRowVar2函数的作用是针对稀疏矩阵中的每一行，以每行的均值信息作为输入，计算该行数据的方差</span><br>      hvf.info<span class="hljs-operator">$</span>variance <span class="hljs-operator">&lt;-</span> SparseRowVar2<span class="hljs-punctuation">(</span><br>      mat <span class="hljs-operator">=</span> object<span class="hljs-punctuation">,</span><br>      mu <span class="hljs-operator">=</span> hvf.info<span class="hljs-operator">$</span>mean<span class="hljs-punctuation">,</span><br>      display_progress <span class="hljs-operator">=</span> verbose<br>    <span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#初始化预期方差和标准化后的方差</span><br>    hvf.info<span class="hljs-operator">$</span>variance.expected <span class="hljs-operator">&lt;-</span> 0<br>    hvf.info<span class="hljs-operator">$</span>variance.standardized <span class="hljs-operator">&lt;-</span> 0<br>      <span class="hljs-comment">#创建逻辑向量，指示哪些行的方差大于0</span><br>    not.const <span class="hljs-operator">&lt;-</span> hvf.info<span class="hljs-operator">$</span>variance <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span><br>      <span class="hljs-comment">#局部加权回归（Locally Weighted Scatterplot Smoothing，Loess）是一种非参数的回归方法，用于拟合数据的非线性关系。</span><br>      <span class="hljs-comment">#与线性回归不同，Loess 使用局部加权的方式，对于每个数据点都赋予不同的权重，以适应数据的局部特征。</span><br>      <span class="hljs-comment"># Loess 的基本思想是对于每个数据点，利用附近的数据点进行局部的线性或多项式回归</span><br>      <span class="hljs-comment">#然后通过加权平均的方式来获得最终的拟合曲线。这种加权平均使得拟合更加灵活，能够更好地适应数据的非线性关系。</span><br>      <span class="hljs-comment"># Loess 方法的一个重要参数是平滑度参数（span），它决定了用于拟合的局部数据点的数量，即局部拟合的程度。</span><br>      <span class="hljs-comment">#一般情况下，其取值范围通常在 0.1 到 0.5 之间。较小的平滑度参数会导致拟合曲线更接近原始数据，但也更容易受到噪声的影响；</span><br>      <span class="hljs-comment">#而较大的平滑度参数会导致更平滑的拟合曲线，但可能会忽略一些数据的局部特征</span><br>    fit <span class="hljs-operator">&lt;-</span> loess<span class="hljs-punctuation">(</span><br>        <span class="hljs-comment">#使用对数变换后的方差作为因变量，对数变换后的均值作为自变量进行拟合</span><br>      formula <span class="hljs-operator">=</span> log10<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> variance<span class="hljs-punctuation">)</span> <span class="hljs-operator">~</span> log10<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-comment">#用于筛选出方差大于零的数据点</span><br>      data <span class="hljs-operator">=</span> hvf.info<span class="hljs-punctuation">[</span>not.const<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-comment">#平滑度参数，控制了局部拟合的程度</span><br>      span <span class="hljs-operator">=</span> loess.span<br>    <span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#将局部加权回归（Loess）得到的拟合值赋给 hvf.info 数据框中的 variance.expected 列中方差大于0的行，</span><br>      <span class="hljs-comment">#这里用指数变换还原原始数据比例，loess中是用的log10(x=variance)</span><br>    hvf.info<span class="hljs-operator">$</span>variance.expected<span class="hljs-punctuation">[</span>not.const<span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-number">10</span> <span class="hljs-operator">^</span> fit<span class="hljs-operator">$</span>fitted<br>    <span class="hljs-comment"># use c function to get variance after feature standardization</span><br>    <span class="hljs-comment"># 计算稀疏矩阵每行的标准化后的方差（方差/期望（平均值）），消除尺度影响</span><br>    hvf.info<span class="hljs-operator">$</span>variance.standardized <span class="hljs-operator">&lt;-</span> SparseRowVarStd<span class="hljs-punctuation">(</span><br>      mat <span class="hljs-operator">=</span> object<span class="hljs-punctuation">,</span><br>        <span class="hljs-comment">#计算每行平均值</span><br>      mu <span class="hljs-operator">=</span> hvf.info<span class="hljs-operator">$</span>mean<span class="hljs-punctuation">,</span><br>        <span class="hljs-comment">#期望方差的平方根</span><br>      sd <span class="hljs-operator">=</span> <span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span>hvf.info<span class="hljs-operator">$</span>variance.expected<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-comment">#控制方差上线，最大截断值</span><br>      vmax <span class="hljs-operator">=</span> clip.max<span class="hljs-punctuation">,</span><br>      display_progress <span class="hljs-operator">=</span> verbose<br>    <span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#使用 paste0 函数给每个列名添加前缀 vst.</span><br>    colnames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> hvf.info<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;vst.&#x27;</span><span class="hljs-punctuation">,</span> colnames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> hvf.info<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span> <span class="hljs-keyword">else</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>inherits<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> mean.function<span class="hljs-punctuation">,</span> what <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;function&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>      stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;&#x27;mean.function&#x27; must be a function&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>inherits<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> dispersion.function<span class="hljs-punctuation">,</span> what <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;function&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>      stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;&#x27;dispersion.function&#x27; must be a function&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>    feature.mean <span class="hljs-operator">&lt;-</span> mean.function<span class="hljs-punctuation">(</span>object<span class="hljs-punctuation">,</span> verbose<span class="hljs-punctuation">)</span><br>    feature.dispersion <span class="hljs-operator">&lt;-</span> dispersion.function<span class="hljs-punctuation">(</span>object<span class="hljs-punctuation">,</span> verbose<span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#链式赋值</span><br>    <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.dispersion<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> rownames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#将缺失值替换为0</span><br>    feature.dispersion<span class="hljs-punctuation">[</span><span class="hljs-built_in">is.na</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.dispersion<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-number">0</span><br>    feature.mean<span class="hljs-punctuation">[</span><span class="hljs-built_in">is.na</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-number">0</span><br>      <span class="hljs-comment">#条件语句switch根据binning.method的取值选择不同的分箱方法，这里不是equal_width，就是equal_frequency</span><br>    data.x.breaks <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">switch</span><span class="hljs-punctuation">(</span><br>      EXPR <span class="hljs-operator">=</span> binning.method<span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&#x27;equal_width&#x27;</span> <span class="hljs-operator">=</span> num.bin<span class="hljs-punctuation">,</span><br>      <span class="hljs-string">&#x27;equal_frequency&#x27;</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><br>        <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>          <span class="hljs-comment">#利用 quantile 函数计算等频率分箱的分位数</span><br>        quantile<span class="hljs-punctuation">(</span><br>          x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">[</span>feature.mean <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-comment">#seq.int从0到1生成等间隔分位数</span><br>          probs <span class="hljs-operator">=</span> <span class="hljs-built_in">seq.int</span><span class="hljs-punctuation">(</span>from <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span> to <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> length.out <span class="hljs-operator">=</span> num.bin<span class="hljs-punctuation">)</span><br>        <span class="hljs-punctuation">)</span><br>      <span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br>      stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Unknown binning method: &quot;</span><span class="hljs-punctuation">,</span> binning.method<span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">)</span><br>    data.x.bin <span class="hljs-operator">&lt;-</span> cut<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">,</span> breaks <span class="hljs-operator">=</span> data.x.breaks<span class="hljs-punctuation">)</span><br>    <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> data.x.bin<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">)</span><br>    mean.y <span class="hljs-operator">&lt;-</span> tapply<span class="hljs-punctuation">(</span>X <span class="hljs-operator">=</span> feature.dispersion<span class="hljs-punctuation">,</span> INDEX <span class="hljs-operator">=</span> data.x.bin<span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> mean<span class="hljs-punctuation">)</span><br>    sd.y <span class="hljs-operator">&lt;-</span> tapply<span class="hljs-punctuation">(</span>X <span class="hljs-operator">=</span> feature.dispersion<span class="hljs-punctuation">,</span> INDEX <span class="hljs-operator">=</span> data.x.bin<span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> sd<span class="hljs-punctuation">)</span><br>      <span class="hljs-comment">#每个特征的离散度减去对应分箱的均值，并除以标准差。</span><br>    feature.dispersion.scaled <span class="hljs-operator">&lt;-</span> <span class="hljs-punctuation">(</span>feature.dispersion <span class="hljs-operator">-</span> mean.y<span class="hljs-punctuation">[</span><span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> data.x.bin<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">/</span><br>      sd.y<span class="hljs-punctuation">[</span><span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> data.x.bin<span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br>    <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.dispersion.scaled<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> feature.mean<span class="hljs-punctuation">)</span><br>    hvf.info <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>feature.mean<span class="hljs-punctuation">,</span> feature.dispersion<span class="hljs-punctuation">,</span> feature.dispersion.scaled<span class="hljs-punctuation">)</span><br>    rownames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> hvf.info<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> rownames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> object<span class="hljs-punctuation">)</span><br>    colnames<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> hvf.info<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;mvp.&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;mean&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;dispersion&#x27;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&#x27;dispersion.scaled&#x27;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span>hvf.info<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h3 id="4-缩放数据Scaling-data"><a href="#4-缩放数据Scaling-data" class="headerlink" title="4.缩放数据Scaling data"></a>4.缩放数据Scaling data</h3><p>是PCA等降维技术之前的预处理步骤，前面的LogNormalize是对列和列之间处理，让每列的细胞的表达RNA数量相同，基于前提假设。现在是对每行进行处理，让每行的RNA在所有细胞中的表达进行缩放。每行基因的在细胞中表达平均为0，方差为1，平均为0就是对表达水平进行标准化，方差为1是对离散程度进行标准化。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">all</span><span class="hljs-selector-class">.genes</span> &lt;- <span class="hljs-built_in">rownames</span>(pbmc)<br>pbmc &lt;- <span class="hljs-built_in">ScaleData</span>(pbmc, features = all.genes)<br></code></pre></td></tr></table></figure><p>这里挖个坑，如果要去除细胞周期影响和mtRNA影响，最好用sctransform</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">pbmc <span class="hljs-operator">&lt;-</span> ScaleData<span class="hljs-punctuation">(</span>pbmc<span class="hljs-punctuation">,</span> vars.to.regress <span class="hljs-operator">=</span> <span class="hljs-string">&quot;percent.mt&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
      <tag>Seurat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R作图系统</title>
    <link href="/2024/09/02/20240902R%E4%BD%9C%E5%9B%BE/"/>
    <url>/2024/09/02/20240902R%E4%BD%9C%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<h2 id="图形布局"><a href="#图形布局" class="headerlink" title="图形布局"></a>图形布局</h2><p><img src="/../image/plot.png" alt="plot"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs R">png<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;plot.png&quot;</span><span class="hljs-punctuation">)</span><br>set.seed<span class="hljs-punctuation">(</span><span class="hljs-number">123</span><span class="hljs-punctuation">)</span><br>x <span class="hljs-operator">&lt;-</span> runif<span class="hljs-punctuation">(</span><span class="hljs-number">50</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>y <span class="hljs-operator">&lt;-</span> runif<span class="hljs-punctuation">(</span><span class="hljs-number">50</span><span class="hljs-punctuation">,</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>plot<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">,</span> main <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Main title&quot;</span><span class="hljs-punctuation">,</span> sub <span class="hljs-operator">=</span> <span class="hljs-string">&quot;subtitle&quot;</span><span class="hljs-punctuation">,</span> xlab <span class="hljs-operator">=</span> <span class="hljs-string">&quot;x-label&quot;</span><span class="hljs-punctuation">,</span><br>     ylab <span class="hljs-operator">=</span> <span class="hljs-string">&quot;y-label&quot;</span><span class="hljs-punctuation">)</span><br>text<span class="hljs-punctuation">(</span><span class="hljs-number">0.6</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0.6</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;text at (0.6,0.6)&quot;</span><span class="hljs-punctuation">)</span><br>abline<span class="hljs-punctuation">(</span>h <span class="hljs-operator">=</span> <span class="hljs-number">.6</span><span class="hljs-punctuation">,</span>col <span class="hljs-operator">=</span> <span class="hljs-string">&quot;red&quot;</span><span class="hljs-punctuation">)</span><br>abline<span class="hljs-punctuation">(</span>v <span class="hljs-operator">=</span> <span class="hljs-number">.6</span><span class="hljs-punctuation">,</span>col <span class="hljs-operator">=</span> <span class="hljs-string">&quot;blue&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>side <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span> mtext<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> side <span class="hljs-operator">=</span> side<span class="hljs-punctuation">,</span> at <span class="hljs-operator">=</span> <span class="hljs-number">.7</span><span class="hljs-punctuation">,</span> line <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">4</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> col <span class="hljs-operator">=</span> <span class="hljs-string">&quot;purple&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>side <span class="hljs-keyword">in</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span> mtext<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> side <span class="hljs-operator">=</span> side<span class="hljs-punctuation">,</span> at <span class="hljs-operator">=</span> <span class="hljs-number">.7</span><span class="hljs-punctuation">,</span> line <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> col <span class="hljs-operator">=</span> <span class="hljs-string">&quot;yellow&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>side <span class="hljs-keyword">in</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span> mtext<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> side <span class="hljs-operator">=</span> side<span class="hljs-punctuation">,</span> at <span class="hljs-operator">=</span> <span class="hljs-number">.7</span><span class="hljs-punctuation">,</span> line <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> col <span class="hljs-operator">=</span> <span class="hljs-string">&quot;orange&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>side <span class="hljs-keyword">in</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span> mtext<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> side <span class="hljs-operator">=</span> side<span class="hljs-punctuation">,</span> at <span class="hljs-operator">=</span> <span class="hljs-number">.7</span><span class="hljs-punctuation">,</span> line <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span> col <span class="hljs-operator">=</span> <span class="hljs-string">&quot;green&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">25</span><span class="hljs-punctuation">)</span> mtext<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;side&quot;</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> side <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> at <span class="hljs-operator">=</span> <span class="hljs-number">1.5</span><span class="hljs-punctuation">,</span> line <span class="hljs-operator">=</span> <span class="hljs-operator">-</span>i<span class="hljs-operator">+</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span>font <span class="hljs-operator">=</span> i<span class="hljs-punctuation">,</span> col <span class="hljs-operator">=</span> <span class="hljs-punctuation">(</span><span class="hljs-string">&quot;purple&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>注意：</p><ul><li>for (side in 1:4) metext( side &#x3D; side) 和 metext(side &#x3D; 1:4) 意义是一样的</li><li>font 从1到19</li><li><code>par(mar = c(4,4,2,2)+0.1)</code> 下，左，上，右的顺序</li></ul><blockquote><p>args(abline)<br>function (a &#x3D; NULL, b &#x3D; NULL, h &#x3D; NULL, v &#x3D; NULL, reg &#x3D; NULL,<br>coef &#x3D; NULL, untf &#x3D; FALSE, …) </p></blockquote><h2 id="利用部分构造图形"><a href="#利用部分构造图形" class="headerlink" title="利用部分构造图形"></a>利用部分构造图形</h2><p><img src="/../image/plot_by_element.png" alt="plot_by_element"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">png<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;plot_by_element.png&quot;</span><span class="hljs-punctuation">)</span><br>plot<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;n&quot;</span><span class="hljs-punctuation">,</span> xlab <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span> ylab <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span> axes <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span><br>points<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span>y<span class="hljs-punctuation">)</span><br>axis<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>axis<span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br>axis<span class="hljs-punctuation">(</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> at <span class="hljs-operator">=</span> seq<span class="hljs-punctuation">(</span><span class="hljs-number">.2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1.8</span><span class="hljs-punctuation">,</span> <span class="hljs-number">.2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> pos <span class="hljs-operator">=</span> <span class="hljs-number">.3</span><span class="hljs-punctuation">)</span><br>box<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>title<span class="hljs-punctuation">(</span>main <span class="hljs-operator">=</span> <span class="hljs-string">&quot;Main title&quot;</span><span class="hljs-punctuation">,</span> sub <span class="hljs-operator">=</span> <span class="hljs-string">&quot;subtitle&quot;</span><span class="hljs-punctuation">,</span> xlab <span class="hljs-operator">=</span> <span class="hljs-string">&quot;x-label&quot;</span><span class="hljs-punctuation">,</span> ylab <span class="hljs-operator">=</span> <span class="hljs-string">&quot;y-label&quot;</span><span class="hljs-punctuation">)</span><br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>注意：</p><ul><li><p><code>type = &quot;n&quot;</code> 使得点不被绘制。<code>axes = F</code> 删掉坐标轴以及图周围的方框，x和y的标题标签被设置为空字符串</p></li><li><p>axis 调整参数可以构建特殊坐标轴，如非等间距坐标轴以及非数字标签坐标轴</p><blockquote><p>args(axis)<br>function (side, at &#x3D; NULL, labels &#x3D; TRUE, tick &#x3D; TRUE, line &#x3D; NA,<br>pos &#x3D; NA, outer &#x3D; FALSE, font &#x3D; NA, lty &#x3D; “solid”, lwd &#x3D; 1,<br>lwd.ticks &#x3D; lwd, col &#x3D; NULL, col.ticks &#x3D; NULL, hadj &#x3D; NA,<br>padj &#x3D; NA, gap.axis &#x3D; NA, …)</p></blockquote></li></ul><blockquote><p>用<code>type = &quot;n&quot;</code>绘图，有在作图区域标出尺寸的作用。</p><p>用points对每一组添加点，col传递矢量参数</p></blockquote><h2 id="par的使用"><a href="#par的使用" class="headerlink" title="par的使用"></a>par的使用</h2><p>如果一个参数可以通过两种方式设置，差别在于如果是通过par设置的，那么将在其后保持这个设置。</p><p>par设置允许控制线宽和类型、字符大小和字体、颜色、坐标轴的类型、图形图标区域的大小、图形的裁剪等。利用mfrow 和 mfcol 参数可以把一个图形分成几个子图。</p><h2 id="组合图形"><a href="#组合图形" class="headerlink" title="组合图形"></a>组合图形</h2><p><img src="/../image/combine.png" alt="combine"></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> png<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;combine.png&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> x <span class="hljs-operator">&lt;-</span> rnorm<span class="hljs-punctuation">(</span><span class="hljs-number">100</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> h <span class="hljs-operator">&lt;-</span> hist<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> plot <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> h<br><span class="hljs-operator">$</span>breaks<br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span><span class="hljs-number">3.0</span> <span class="hljs-operator">-</span><span class="hljs-number">2.5</span> <span class="hljs-operator">-</span><span class="hljs-number">2.0</span> <span class="hljs-operator">-</span><span class="hljs-number">1.5</span> <span class="hljs-operator">-</span><span class="hljs-number">1.0</span> <span class="hljs-operator">-</span><span class="hljs-number">0.5</span>  <span class="hljs-number">0.0</span>  <span class="hljs-number">0.5</span>  <span class="hljs-number">1.0</span>  <span class="hljs-number">1.5</span>  <span class="hljs-number">2.0</span>  <span class="hljs-number">2.5</span>  <span class="hljs-number">3.0</span><br><br><span class="hljs-operator">$</span>counts<br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">1</span>  <span class="hljs-number">1</span>  <span class="hljs-number">4</span> <span class="hljs-number">17</span>  <span class="hljs-number">7</span> <span class="hljs-number">18</span> <span class="hljs-number">27</span> <span class="hljs-number">10</span>  <span class="hljs-number">4</span>  <span class="hljs-number">6</span>  <span class="hljs-number">3</span>  <span class="hljs-number">2</span><br><br><span class="hljs-operator">$</span>density<br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">0.02</span> <span class="hljs-number">0.02</span> <span class="hljs-number">0.08</span> <span class="hljs-number">0.34</span> <span class="hljs-number">0.14</span> <span class="hljs-number">0.36</span> <span class="hljs-number">0.54</span> <span class="hljs-number">0.20</span> <span class="hljs-number">0.08</span> <span class="hljs-number">0.12</span> <span class="hljs-number">0.06</span> <span class="hljs-number">0.04</span><br><br><span class="hljs-operator">$</span>mids<br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span><span class="hljs-number">2.75</span> <span class="hljs-operator">-</span><span class="hljs-number">2.25</span> <span class="hljs-operator">-</span><span class="hljs-number">1.75</span> <span class="hljs-operator">-</span><span class="hljs-number">1.25</span> <span class="hljs-operator">-</span><span class="hljs-number">0.75</span> <span class="hljs-operator">-</span><span class="hljs-number">0.25</span>  <span class="hljs-number">0.25</span>  <span class="hljs-number">0.75</span>  <span class="hljs-number">1.25</span>  <span class="hljs-number">1.75</span>  <span class="hljs-number">2.25</span>  <span class="hljs-number">2.75</span><br><br><span class="hljs-operator">$</span>xname<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;x&quot;</span><br><br><span class="hljs-operator">$</span>equidist<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-literal">TRUE</span><br><br><span class="hljs-built_in">attr</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;class&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;histogram&quot;</span><br><span class="hljs-operator">&gt;</span> ylim <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">range</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> h<span class="hljs-operator">$</span>density<span class="hljs-punctuation">,</span> dnorm<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> ylim<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">0.00</span> <span class="hljs-number">0.54</span><br><span class="hljs-operator">&gt;</span> hist<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> freq <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">,</span> ylim <span class="hljs-operator">=</span> ylim<span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> curve<span class="hljs-punctuation">(</span>dnorm<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> add <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>RStudioGD <br>        <span class="hljs-number">2</span> <br></code></pre></td></tr></table></figure><p>hist 中 <code>freq = F</code> 参数保证了直方图是根据比例而不是绝对值画出来的。<br>curve 画了一个表达式，<code>add = T</code> 允许它叠加到已有的图上。<br>但有时候正太密度函数的高度没有发挥作用。<br>调用 hist 时，<code>plot = F</code> 将不会画出任何图形。</p><h1 id="不要在markdown的-后面接-代码"><a href="#不要在markdown的-后面接-代码" class="headerlink" title="不要在markdown的*后面接```代码"></a><strong>不要在markdown的*后面接```代码</strong></h1>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Fight Club 观感</title>
    <link href="/2024/09/01/20240901%E6%9C%89%E6%84%9F/"/>
    <url>/2024/09/01/20240901%E6%9C%89%E6%84%9F/</url>
    
    <content type="html"><![CDATA[<p>到底想要什么，想要什么生活，到底做什么样子的人，明不明白？</p><blockquote><p>Goddamn it, an entire generation pumping gas, waiting tables, slaves with white collars, advertising has us chasing cars and clothes, working jobs we hate, so we can buy shit we don’t need. We’re the middle children of history, man. No purpose or place. We have no Great War. No Great Depression. Our great war is a spiritual war. Our Great Depression is our lives. We’ve all been raised on television to believe that one day we’d all be millionaires and movie gods and rock stars. But we won’t. We’re slowly learning that fact. And we’re very, very pissed off.</p><p>—-Fight Club</p></blockquote><p>我现在非常相信恐怖分子的洗脑视频是存在的。电影通过画面的快速闪动，不断地吸引注意力，达到诱导思维认同的目的。在开头的模拟神经的画面，不停地灯光闪动，就是在做这件事。但是一次不会成功，中间多次的闪动，加上情节，台词，对我刺激太强了。它的刺激不是看了血，也不是看了爆头的画面，也没有恐怖，是这种精神上的，它让我意识到spiritual war的存在。</p><p>两个自己，是分裂的吗？精神病学里的界定，所谓症状和体征，在精神领域，能够被医学定义的界限，已经是病的很重了，我认为能被定义的，一定都有病理改变了，只不过有的没被发现。但是，还有些人，是分裂的。这就要回到人之初性本善的概念了。为了适应社会，而把从本真分裂出的自己，和本来要做的自己，就是两个了，这不是分裂吗。而且所谓的适应，是主动的吗，我觉得被动更多些。</p><p>现在这么多广告，这么多推送，我知道它们有算法。算法是没有主观意愿的，但是使用它的人有。现在的自己已经不是任其自然发展的自己了。成为自己想要成为的自己，真的想吗，那个想法，真的是从自己脑海里生产出的吗，我说未必。我从来没有想过我要成为什么人，我就是我，我不想成为别人。如果我生在深山，我不会突然想到我要成为成功人，而且我对什么是成功也没有概念，但我肯定知道口渴后喝到清水是快乐的，好好睡一觉也是快乐的，吃好吃的也是。如果没有外界的信息，不会从脑海里蹦出来一个独立于自己的，想要成为的人。鲁迅认为所有的神话想象，山海经里的怪物，都是来源于真实存在的东西，没有现实就没有想象。乔布斯也说，消费者不知道他们想要什么，你要把把东西拿给他们看，他们才知道他们想要的就是这个。</p><p>当然人不会这么闲，不会满足于生理的需求。总要克服什么，生活中的矛盾总是存在的，这样才能激励生命的存在，否则一切都是熵增，那就没意义了。</p><p>写这些的时候，突然停下来思考我写了些什么，我本来的思路不是这样的，我好像是从青海长江的发源地一路往东流，越流越宽，但是在豁口分出去了，又越来越细， 成了一条小溪。行到水穷处，坐看云起时。的确是快到水穷处了，但是我在这里没这个闲心。又想到了散文，形散神聚，随便怎么写，自己要对自己的思维有约束。</p><p>其实精神病人和正常人，最大的区别，就是能不能约束自己。约束是自身的，不是外界的。这是种动力，让你把自己有限的时间和精力，投入真正想要做的事情上。这才是真的约束。外界的那叫阻碍，是限制。我认识约束是褒义词。</p><p>最后，电影的中译太差了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Python数据输入</title>
    <link href="/2024/09/01/20240902R%E6%95%B0%E6%8D%AE%E8%BE%93%E5%85%A5/"/>
    <url>/2024/09/01/20240902R%E6%95%B0%E6%8D%AE%E8%BE%93%E5%85%A5/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>健身-胸</title>
    <link href="/2024/09/01/20240901%E7%BB%83%E8%83%B8/"/>
    <url>/2024/09/01/20240901%E7%BB%83%E8%83%B8/</url>
    
    <content type="html"><![CDATA[<p>今天昊川教了我怎么练胸，记录下，以后按照这个流程。</p><p>哑铃推举，10*4，今天是5kg</p><blockquote><p>要点：</p><p>挺胸，不塌腰，在胸前推，一个面上，沉肩</p></blockquote><p>小杠铃推举，10*4，今天是10kg</p><p>固定器械，调整座椅高度到胸前，45kg（不是最大重量）<br>下次第二组就可以上45kg，每组多加一片，每组至少8个</p><p>龙门架练下胸</p><p>俯卧撑</p><p>跪姿俯卧撑</p><p>拉伸</p>]]></content>
    
    
    
    <tags>
      
      <tag>锻炼</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>sink函数</title>
    <link href="/2024/09/01/20240901sink%E5%87%BD%E6%95%B0/"/>
    <url>/2024/09/01/20240901sink%E5%87%BD%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>sink函数只有标准输出，但是没有把代码也附上，所以想要看原函数，看改动哪里可以添加。但是发现sink的功能部分是内置功能，无法修改。但是函数参数的判断和file函数的用法值得记录下。</p><h2 id="sink原函数"><a href="#sink原函数" class="headerlink" title="sink原函数"></a>sink原函数</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-keyword">function</span> <span class="hljs-punctuation">(</span>file <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> append <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;output&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;message&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>          split <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <br><span class="hljs-punctuation">&#123;</span><br>  type <span class="hljs-operator">&lt;-</span> match.arg<span class="hljs-punctuation">(</span>type<span class="hljs-punctuation">)</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>type <span class="hljs-operator">==</span> <span class="hljs-string">&quot;message&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>      file <span class="hljs-operator">&lt;-</span> stderr<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>inherits<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;connection&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">||</span> <span class="hljs-operator">!</span>isOpen<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>      stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;&#x27;file&#x27; must be NULL or an already open connection&quot;</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>split<span class="hljs-punctuation">)</span> <br>      stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;cannot split the message connection&quot;</span><span class="hljs-punctuation">)</span><br>    .Internal<span class="hljs-punctuation">(</span>sink<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br>  <span class="hljs-keyword">else</span> <span class="hljs-punctuation">&#123;</span><br>    closeOnExit <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">FALSE</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>      file <span class="hljs-operator">&lt;-</span> <span class="hljs-operator">-</span><span class="hljs-number">1L</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-built_in">is.character</span><span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>      file <span class="hljs-operator">&lt;-</span> file<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>append<span class="hljs-punctuation">)</span> <br>        <span class="hljs-string">&quot;a&quot;</span><br>        <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;w&quot;</span><span class="hljs-punctuation">)</span><br>      closeOnExit <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">TRUE</span><br>    <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>inherits<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;connection&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>      stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;&#x27;file&#x27; must be NULL, a connection or a character string&quot;</span><span class="hljs-punctuation">)</span><br>    .Internal<span class="hljs-punctuation">(</span>sink<span class="hljs-punctuation">(</span>file<span class="hljs-punctuation">,</span> closeOnExit<span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> split<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="match-arg"><a href="#match-arg" class="headerlink" title="match.arg"></a>match.arg</h2><p><code>match.arg</code> 的主要功能是：</p><ol><li><strong>参数匹配</strong>：将函数的参数值与一个预定义的字符向量进行匹配，确保该参数值是有效的。</li><li><strong>规范化输入</strong>：将参数值转换为一致的形式，即标准化为预定义选项中的某一个。</li></ol><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>假设你有一个函数，其参数 <code>method</code> 可以取值 “lm”、”glm” 或 “loess”，你可以使用 <code>match.arg</code> 来确保 <code>method</code> 的值是这三者之一，并且返回这个值的标准形式。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs R">my_function <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>method <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;lm&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;glm&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;loess&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-comment"># 使用 match.arg 确保 method 是有效的选项</span><br>  method <span class="hljs-operator">&lt;-</span> match.arg<span class="hljs-punctuation">(</span>method<span class="hljs-punctuation">)</span><br>  <br>  <span class="hljs-comment"># 根据选择的 method 执行不同的操作</span><br>  <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>method <span class="hljs-operator">==</span> <span class="hljs-string">&quot;lm&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    cat<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Using linear model.\n&quot;</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>method <span class="hljs-operator">==</span> <span class="hljs-string">&quot;glm&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    cat<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Using generalized linear model.\n&quot;</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span> <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>method <span class="hljs-operator">==</span> <span class="hljs-string">&quot;loess&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    cat<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Using local regression (loess).\n&quot;</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">&#125;</span><br><span class="hljs-punctuation">&#125;</span><br><br><span class="hljs-comment"># 调用函数时使用合法选项</span><br>my_function<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;lm&quot;</span><span class="hljs-punctuation">)</span>    <span class="hljs-comment"># 输出: Using linear model.</span><br>my_function<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;loess&quot;</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 输出: Using local regression (loess).</span><br><br><span class="hljs-comment"># 调用函数时使用不合法选项（会报错）</span><br>my_function<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;tree&quot;</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 错误: &#x27;arg&#x27; should be one of “lm”, “glm”, “loess”</span><br></code></pre></td></tr></table></figure><p>如果不给参数，<code>match.arg</code>默认第一个参数。</p><h2 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h2><ul><li><code>match.arg</code> 限制了type 只能是message和output其中之一</li><li>如果type 是message<ul><li>判断file<ul><li>如果file是空的<ul><li>file被设置为 <code>stderr()</code>，即标准错误输出。</li></ul></li><li>如果file非空<ul><li>它必须是一个打开的连接（即 <code>inherits(file, &quot;connection&quot;)</code> 和 <code>isOpen(file)</code> 都需要为真），否则报错</li></ul></li></ul></li><li>判断split<ul><li>对于消息连接不支持分割</li></ul></li></ul></li><li>如果type 是output<ul><li>判断file<ul><li>如果file是空的<ul><li>file它被设置为 <code>-1L</code>，表示不重定向（即默认输出）。</li></ul></li><li>如果file非空<ul><li>判断file是否为字符串<ul><li>若是，设置file的读写方式<ul><li>append为真：a，追加</li><li>append为假：w，写入，覆盖</li></ul></li></ul></li><li>判断如果不是connection类<ul><li>报错</li></ul></li></ul></li></ul></li></ul></li></ul><p>里面closeOnExit的功能应该是在.Internal sink里。能看到的部分就是判断，决定读写方式，但是真正的功能怎么实现的看不到。</p><blockquote><p>在R语言中，<code>!inherits(file, &quot;connection&quot;)</code> 是一个用于检查对象类型的表达式。这里是对这个表达式的解释：</p><ol><li><p><strong><code>inherits()</code> 函数</strong>：</p><ul><li><code>inherits()</code> 是一个用于检查一个对象是否继承了某个类（或类的集合）的函数。</li><li>语法是 <code>inherits(x, &quot;class&quot;)</code>，其中 <code>x</code> 是要检查的对象，<code>&quot;class&quot;</code> 是要检查的类名。</li></ul></li><li><p><strong><code>&quot;connection&quot;</code> 类</strong>：</p><ul><li><code>&quot;connection&quot;</code> 是 R 中用于表示数据流（如文件、网络连接等）的一个类。</li><li>如果一个对象是连接对象，它就会被标记为 <code>&quot;connection&quot;</code> 类。</li></ul></li><li><p><strong><code>!</code> 操作符</strong>：</p><ul><li><code>!</code> 是逻辑非操作符，用于取反。</li></ul></li><li><p>**<code>!inherits(file, &quot;connection&quot;)</code>**：</p><ul><li>这个表达式的作用是检查 <code>file</code> 对象是否<strong>不</strong>是 <code>&quot;connection&quot;</code> 类的实例。</li><li>换句话说，它会返回 <code>TRUE</code> 如果 <code>file</code> 不是一个连接对象，否则返回 <code>FALSE</code>。</li></ul></li></ol><p>例如，如果你有一个变量 <code>file</code>，并且你想确认它是否不是一个连接对象，你可以使用这个表达式。如果 <code>file</code> 是一个连接对象（比如一个打开的文件连接），<code>inherits(file, &quot;connection&quot;)</code> 会返回 <code>TRUE</code>，而 <code>!inherits(file, &quot;connection&quot;)</code> 就会返回 <code>FALSE</code>。相反，如果 <code>file</code> 不是连接对象，<code>inherits(file, &quot;connection&quot;)</code> 会返回 <code>FALSE</code>，<code>!inherits(file, &quot;connection&quot;)</code> 会返回 <code>TRUE</code>。</p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R语言环境(2)</title>
    <link href="/2024/09/01/20240901R%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83(2)/"/>
    <url>/2024/09/01/20240901R%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83(2)/</url>
    
    <content type="html"><![CDATA[<h2 id="内置数据"><a href="#内置数据" class="headerlink" title="内置数据"></a>内置数据</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># lazy loading 加载数据</span><br><span class="hljs-comment"># 加载内置数据</span><br>data<span class="hljs-punctuation">(</span>thuesen<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>data 所做的检查与每一个包相关的数据地址并寻找那些地址名与给定名称匹配的文档。用read.table 读取.tab 为拓展名的文档，其中.R 为拓展名的文档作为源文件执行。</p><h2 id="attach-detach"><a href="#attach-detach" class="headerlink" title="attach &amp; detach"></a>attach &amp; detach</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 在给定的thuesen数据框中寻找目标</span><br>attach<span class="hljs-punctuation">(</span>thuesen<span class="hljs-punctuation">)</span><br>search<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> lentils <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>u <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">11</span><span class="hljs-punctuation">,</span> <span class="hljs-number">12</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> lentils<span class="hljs-operator">$</span>v <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> lentils<span class="hljs-operator">$</span>w <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> lentils<br>   u v w<br><span class="hljs-number">1</span> <span class="hljs-number">10</span> <span class="hljs-number">1</span> <span class="hljs-number">4</span><br><span class="hljs-number">2</span> <span class="hljs-number">11</span> <span class="hljs-number">2</span> <span class="hljs-number">5</span><br><span class="hljs-number">3</span> <span class="hljs-number">12</span> <span class="hljs-number">3</span> <span class="hljs-number">6</span><br><span class="hljs-operator">&gt;</span> attach<span class="hljs-punctuation">(</span>lentils<span class="hljs-punctuation">)</span><br><span class="hljs-comment"># lentils 被放在搜索路径中的第二位，.GlobalEnv是工作空间，package:base 是定义了所有标准函数的系统库，package:stats 包含了一些基本的统计程序。新的数据框被默认插入第二个位置。</span><br><span class="hljs-operator">&gt;</span> search<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;.GlobalEnv&quot;</span>        <span class="hljs-string">&quot;lentils&quot;</span>           <span class="hljs-string">&quot;tools:rstudio&quot;</span>     <span class="hljs-string">&quot;package:stats&quot;</span>    <br> <span class="hljs-punctuation">[</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;package:graphics&quot;</span>  <span class="hljs-string">&quot;package:grDevices&quot;</span> <span class="hljs-string">&quot;package:utils&quot;</span>     <span class="hljs-string">&quot;package:datasets&quot;</span> <br> <span class="hljs-punctuation">[</span><span class="hljs-number">9</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;package:methods&quot;</span>   <span class="hljs-string">&quot;Autoloads&quot;</span>         <span class="hljs-string">&quot;package:base&quot;</span>     <br><span class="hljs-operator">&gt;</span> u <span class="hljs-operator">&lt;-</span> v<span class="hljs-operator">+</span>w<br><span class="hljs-operator">&gt;</span> u<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">5</span> <span class="hljs-number">7</span> <span class="hljs-number">9</span><br><span class="hljs-comment"># attach 包含了数据框的(虚拟)复制操作，所以在attach的数据框的操作不会影响原数据框</span><br><span class="hljs-operator">&gt;</span> lentils<br>   u v w<br><span class="hljs-number">1</span> <span class="hljs-number">10</span> <span class="hljs-number">1</span> <span class="hljs-number">4</span><br><span class="hljs-number">2</span> <span class="hljs-number">11</span> <span class="hljs-number">2</span> <span class="hljs-number">5</span><br><span class="hljs-number">3</span> <span class="hljs-number">12</span> <span class="hljs-number">3</span> <span class="hljs-number">6</span><br><span class="hljs-comment"># detach 默认删除第二位置的数据框，.GlobalEnv和 package:base 不能被 detach 删除，如果这么做，不报错，但也不会删除</span><br><span class="hljs-operator">&gt;</span> detach<span class="hljs-punctuation">(</span>lentils<span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> search<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;.GlobalEnv&quot;</span>        <span class="hljs-string">&quot;tools:rstudio&quot;</span>     <span class="hljs-string">&quot;package:stats&quot;</span>     <span class="hljs-string">&quot;package:graphics&quot;</span> <br> <span class="hljs-punctuation">[</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;package:grDevices&quot;</span> <span class="hljs-string">&quot;package:utils&quot;</span>     <span class="hljs-string">&quot;package:datasets&quot;</span>  <span class="hljs-string">&quot;package:methods&quot;</span>  <br> <span class="hljs-punctuation">[</span><span class="hljs-number">9</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Autoloads&quot;</span>         <span class="hljs-string">&quot;package:base&quot;</span>     <br><span class="hljs-operator">&gt;</span> u<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">5</span> <span class="hljs-number">7</span> <span class="hljs-number">9</span><br><span class="hljs-operator">&gt;</span> lentils<span class="hljs-operator">$</span>u<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">10</span> <span class="hljs-number">11</span> <span class="hljs-number">12</span><br></code></pre></td></tr></table></figure><p>通过<code>with</code>函数可以设置一个数据框在<code>.GlobalEnv</code>之前被搜索到：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span>ISwR<span class="hljs-punctuation">)</span><br>data<span class="hljs-punctuation">(</span>thuesen<span class="hljs-punctuation">)</span><br>with<span class="hljs-punctuation">(</span>thuesen<span class="hljs-punctuation">,</span> plot<span class="hljs-punctuation">(</span>blood.glucose<span class="hljs-punctuation">,</span> short.velocity<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>但是这样做的时候，<code>blood.glucose</code>和<code>short.velocity</code>不会被RStudio提示，除非attach，但那就没意义了，总之要知道数据框的列名。</p><h2 id="subset-transform-和-within"><a href="#subset-transform-和-within" class="headerlink" title="subset, transform 和 within"></a>subset, transform 和 within</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> thue2 <span class="hljs-operator">&lt;-</span> subset<span class="hljs-punctuation">(</span>thuesen<span class="hljs-punctuation">,</span> blood.glucose<span class="hljs-operator">&lt;</span><span class="hljs-number">7</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> thue2 <span class="hljs-operator">&lt;-</span> subset<span class="hljs-punctuation">(</span>thuesen<span class="hljs-punctuation">,</span> blood.glucose<span class="hljs-operator">&lt;</span><span class="hljs-number">7</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> thue2<br>   blood.glucose short.velocity<br><span class="hljs-number">6</span>            <span class="hljs-number">5.3</span>           <span class="hljs-number">1.49</span><br><span class="hljs-number">11</span>           <span class="hljs-number">6.7</span>           <span class="hljs-number">1.25</span><br><span class="hljs-number">12</span>           <span class="hljs-number">5.2</span>           <span class="hljs-number">1.19</span><br><span class="hljs-number">15</span>           <span class="hljs-number">6.7</span>           <span class="hljs-number">1.52</span><br><span class="hljs-number">17</span>           <span class="hljs-number">4.2</span>           <span class="hljs-number">1.12</span><br><span class="hljs-number">22</span>           <span class="hljs-number">4.9</span>           <span class="hljs-number">1.03</span><br><span class="hljs-operator">&gt;</span> thue3 <span class="hljs-operator">&lt;-</span> transform<span class="hljs-punctuation">(</span>thuesen<span class="hljs-punctuation">,</span> log.gluc<span class="hljs-operator">=</span><span class="hljs-built_in">log</span><span class="hljs-punctuation">(</span>blood.glucose<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> head<span class="hljs-punctuation">(</span>thue3<span class="hljs-punctuation">)</span><br>  blood.glucose short.velocity log.gluc<br><span class="hljs-number">1</span>          <span class="hljs-number">15.3</span>           <span class="hljs-number">1.76</span> <span class="hljs-number">2.727853</span><br><span class="hljs-number">2</span>          <span class="hljs-number">10.8</span>           <span class="hljs-number">1.34</span> <span class="hljs-number">2.379546</span><br><span class="hljs-number">3</span>           <span class="hljs-number">8.1</span>           <span class="hljs-number">1.27</span> <span class="hljs-number">2.091864</span><br><span class="hljs-number">4</span>          <span class="hljs-number">19.5</span>           <span class="hljs-number">1.47</span> <span class="hljs-number">2.970414</span><br><span class="hljs-number">5</span>           <span class="hljs-number">7.2</span>           <span class="hljs-number">1.27</span> <span class="hljs-number">1.974081</span><br><span class="hljs-number">6</span>           <span class="hljs-number">5.3</span>           <span class="hljs-number">1.49</span> <span class="hljs-number">1.667707</span><br></code></pre></td></tr></table></figure><p>subset 也作用于单个向量，但要排除掉那些在选择标准中有缺失值的观测。</p><p>链式计算是指将多个操作链接在一起逐步处理数据，比如 <code>df %&gt;% transform() %&gt;% other_function()</code>。<code>transform()</code> 函数本身不支持链式计算，因为它需要在单独的调用中处理数据。这限制了代码的可读性和简洁性，因为每一步都需要单独调用，不像链式计算那样直观。可以考虑使用 <code>dplyr</code> 包中的 <code>mutate()</code>，它支持链式计算，使代码更清晰易读。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> thue4 <span class="hljs-operator">&lt;-</span> within<span class="hljs-punctuation">(</span>thuesen<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">&#123;</span><br><span class="hljs-operator">+</span>   log.gluc <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">log</span><span class="hljs-punctuation">(</span>blood.glucose<span class="hljs-punctuation">)</span><br><span class="hljs-operator">+</span>   m <span class="hljs-operator">&lt;-</span> mean<span class="hljs-punctuation">(</span>log.gluc<span class="hljs-punctuation">)</span><br><span class="hljs-operator">+</span>   centered.log.gluc <span class="hljs-operator">&lt;-</span> log.gluc <span class="hljs-operator">-</span> m<br><span class="hljs-operator">+</span>   rm<span class="hljs-punctuation">(</span>m<span class="hljs-punctuation">)</span><br><span class="hljs-operator">+</span> <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> head<span class="hljs-punctuation">(</span>thue4<span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br>  blood.glucose short.velocity centered.log.gluc log.gluc<br><span class="hljs-number">1</span>          <span class="hljs-number">15.3</span>           <span class="hljs-number">1.76</span>         <span class="hljs-number">0.4818798</span> <span class="hljs-number">2.727853</span><br></code></pre></td></tr></table></figure><p><code>within</code>的第二个参数是一个任意表达式（此处是compound）表达式。它返回了所有新的和修改过的变量到更新过的数据框中，然后返回。中间变量可以用rm清除，尤其是内容与数据框不兼容的时候。</p><h2 id="with-within"><a href="#with-within" class="headerlink" title="with, within"></a>with, within</h2><blockquote><p>来自chatgpt</p></blockquote><p>在 R 语言中，<code>with</code> 和 <code>within</code> 函数用于数据框（data frame）内的操作，但它们的用途和行为有所不同。以下是它们的区别及各自用法的详细说明：</p><h3 id="with-函数"><a href="#with-函数" class="headerlink" title="with 函数"></a><code>with</code> 函数</h3><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p><code>with</code> 函数用于在指定的数据框或列表环境中执行表达式，以便在这个环境中引用变量时无需重复指定数据框名称。</p><h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">with<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> <span class="hljs-built_in">expression</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><ul><li><code>data</code>：数据框或列表。</li><li><code>expression</code>：在 <code>data</code> 环境中评估的表达式。</li></ul><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>假设有一个数据框 <code>df</code>，如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">df <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>a <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> b <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>你可以使用 <code>with</code> 函数计算 <code>a</code> 和 <code>b</code> 列的和：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">with<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> a <span class="hljs-operator">+</span> b<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>这会输出：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">7</span>  <span class="hljs-number">9</span> <span class="hljs-number">11</span> <span class="hljs-number">13</span> <span class="hljs-number">15</span><br></code></pre></td></tr></table></figure><p>在这个例子中，你可以直接引用 <code>a</code> 和 <code>b</code> 而不需要每次都写 <code>df$a</code> 和 <code>df$b</code>。</p><h3 id="within-函数"><a href="#within-函数" class="headerlink" title="within 函数"></a><code>within</code> 函数</h3><h4 id="作用-1"><a href="#作用-1" class="headerlink" title="作用"></a>作用</h4><p><code>within</code> 函数用于在数据框中修改或添加变量。它允许你在数据框的环境中进行操作，并返回一个修改后的数据框。</p><h4 id="用法-1"><a href="#用法-1" class="headerlink" title="用法"></a>用法</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">within<span class="hljs-punctuation">(</span>data<span class="hljs-punctuation">,</span> <span class="hljs-built_in">expression</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><ul><li><code>data</code>：数据框。</li><li><code>expression</code>：在 <code>data</code> 环境中执行的表达式，用于修改数据框。</li></ul><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><p>假设有一个数据框 <code>df</code>，如下所示：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">df <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>a <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span> b <span class="hljs-operator">=</span> <span class="hljs-number">6</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>你可以使用 <code>within</code> 函数添加一列 <code>c</code>，它是 <code>a</code> 和 <code>b</code> 的和：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs r">df_new <span class="hljs-operator">&lt;-</span> within<span class="hljs-punctuation">(</span>df<span class="hljs-punctuation">,</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-built_in">c</span> <span class="hljs-operator">&lt;-</span> a <span class="hljs-operator">+</span> b<br><span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>这会生成一个新的数据框 <code>df_new</code>：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs r">  a  b  <span class="hljs-built_in">c</span><br><span class="hljs-number">1</span> <span class="hljs-number">1</span>  <span class="hljs-number">6</span>  <span class="hljs-number">7</span><br><span class="hljs-number">2</span> <span class="hljs-number">2</span>  <span class="hljs-number">7</span>  <span class="hljs-number">9</span><br><span class="hljs-number">3</span> <span class="hljs-number">3</span>  <span class="hljs-number">8</span> <span class="hljs-number">11</span><br><span class="hljs-number">4</span> <span class="hljs-number">4</span>  <span class="hljs-number">9</span> <span class="hljs-number">13</span><br><span class="hljs-number">5</span> <span class="hljs-number">5</span> <span class="hljs-number">10</span> <span class="hljs-number">15</span><br></code></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><code>with</code> 用于在数据框的环境中执行一个表达式，而不修改数据框本身。它适用于那些不需要改变数据框内容的计算任务。</li><li><code>within</code> 用于修改数据框或添加新变量，并返回一个新的数据框。它适用于需要在数据框中进行变更的场景。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>复习《中国大陆医学生誓言》</title>
    <link href="/2024/08/31/20240831%E5%8C%BB%E5%AD%A6%E7%94%9F%E8%AA%93%E8%A8%80/"/>
    <url>/2024/08/31/20240831%E5%8C%BB%E5%AD%A6%E7%94%9F%E8%AA%93%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="中国大陆医学生誓言"><a href="#中国大陆医学生誓言" class="headerlink" title="中国大陆医学生誓言"></a>中国大陆医学生誓言</h1><p><strong>健康所系，性命相托。</strong></p><p>当我步入神圣医学学府的时刻，谨庄严宣誓：</p><p>我志愿献身医学，热爱祖国，忠于人民，恪守医德，尊师守纪，刻苦钻研，孜孜不倦，精益求精，全面发展。</p><p>我决心竭尽全力除人类之病痛，助健康之完美，维护医术的圣洁和荣誉，救死扶伤，不辞艰辛，执着追求，为祖国医药卫生事业的发展和人类身心健康奋斗终生。</p><p>——国家教委高教司[1991]106号 附件四</p>]]></content>
    
    
    
    <tags>
      
      <tag>医学</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R语言环境(1)</title>
    <link href="/2024/08/31/20240831R%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83(1)/"/>
    <url>/2024/08/31/20240831R%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83(1)/</url>
    
    <content type="html"><![CDATA[<h2 id="会话管理"><a href="#会话管理" class="headerlink" title="会话管理"></a>会话管理</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>rm<span class="hljs-punctuation">(</span>height<span class="hljs-punctuation">,</span> weight<span class="hljs-punctuation">)</span><br>rm<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-operator">=</span>ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># rm function(..., list = character(), pos = -s, envir = as.environment(pos), inherits = FALSE)</span><br>save.image<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>不会删除以点号开头的向量，因为<code>ls()</code>不能列出它们，需要用<code>ls(all = T)</code>，但这种名称都为系统本身所使用。</p><h3 id="文本输出"><a href="#文本输出" class="headerlink" title="文本输出"></a>文本输出</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">getwd<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>setwd<span class="hljs-punctuation">(</span>mydir<span class="hljs-punctuation">)</span><br>sink<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;myfile&quot;</span><span class="hljs-punctuation">)</span><br>ls<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>sink<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>在R中，<code>sink</code>函数通常用于重定向输出，主要有以下几种情况适合用于批量处理：</p><ol><li><p><strong>日志记录</strong>： 如果你在运行一段代码时希望将控制台输出保存到文件中，以便后续查看或分析，可以使用<code>sink</code>函数。例如，在执行复杂的分析或长时间运行的任务时，你可以将所有的输出信息保存到一个文件中，以便调试和记录。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> sink<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;output_log.txt&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 这里放置你的代码</span><br><span class="hljs-operator">&gt;</span> summary<span class="hljs-punctuation">(</span>titanic_long<span class="hljs-punctuation">)</span><br> Survived      Freq           alluvium     Demographic    stratum  <br> No <span class="hljs-operator">:</span><span class="hljs-number">48</span>   Min.   <span class="hljs-operator">:</span>  <span class="hljs-number">0.00</span>   Min.   <span class="hljs-operator">:</span> <span class="hljs-number">1.00</span>   Class<span class="hljs-operator">:</span><span class="hljs-number">32</span>    Male   <span class="hljs-operator">:</span><span class="hljs-number">16</span>  <br> Yes<span class="hljs-operator">:</span><span class="hljs-number">48</span>   <span class="hljs-number">1</span>st Qu.<span class="hljs-operator">:</span>  <span class="hljs-number">0.75</span>   <span class="hljs-number">1</span>st Qu.<span class="hljs-operator">:</span> <span class="hljs-number">8.75</span>   Sex  <span class="hljs-operator">:</span><span class="hljs-number">32</span>    Female <span class="hljs-operator">:</span><span class="hljs-number">16</span>  <br>          Median <span class="hljs-operator">:</span> <span class="hljs-number">13.50</span>   Median <span class="hljs-operator">:</span><span class="hljs-number">16.50</span>   Age  <span class="hljs-operator">:</span><span class="hljs-number">32</span>    Child  <span class="hljs-operator">:</span><span class="hljs-number">16</span>  <br>          Mean   <span class="hljs-operator">:</span> <span class="hljs-number">68.78</span>   Mean   <span class="hljs-operator">:</span><span class="hljs-number">16.50</span>               Adult  <span class="hljs-operator">:</span><span class="hljs-number">16</span>  <br>          <span class="hljs-number">3</span>rd Qu.<span class="hljs-operator">:</span> <span class="hljs-number">77.00</span>   <span class="hljs-number">3</span>rd Qu.<span class="hljs-operator">:</span><span class="hljs-number">24.25</span>               <span class="hljs-number">1</span>st    <span class="hljs-operator">:</span> <span class="hljs-number">8</span>  <br>          Max.   <span class="hljs-operator">:</span><span class="hljs-number">670.00</span>   Max.   <span class="hljs-operator">:</span><span class="hljs-number">32.00</span>               <span class="hljs-number">2</span>nd    <span class="hljs-operator">:</span> <span class="hljs-number">8</span>  <br>                                                       <span class="hljs-punctuation">(</span>Other<span class="hljs-punctuation">)</span><span class="hljs-operator">:</span><span class="hljs-number">16</span>  <br><span class="hljs-operator">&gt;</span> head<span class="hljs-punctuation">(</span>titanic_long<span class="hljs-punctuation">)</span><br>  Survived Freq alluvium Demographic stratum<br><span class="hljs-number">1</span>       No    <span class="hljs-number">0</span>        <span class="hljs-number">1</span>       Class     <span class="hljs-number">1</span>st<br><span class="hljs-number">2</span>       No    <span class="hljs-number">0</span>        <span class="hljs-number">2</span>       Class     <span class="hljs-number">2</span>nd<br><span class="hljs-number">3</span>       No   <span class="hljs-number">35</span>        <span class="hljs-number">3</span>       Class     <span class="hljs-number">3</span>rd<br><span class="hljs-number">4</span>       No    <span class="hljs-number">0</span>        <span class="hljs-number">4</span>       Class    Crew<br><span class="hljs-number">5</span>       No    <span class="hljs-number">0</span>        <span class="hljs-number">5</span>       Class     <span class="hljs-number">1</span>st<br><span class="hljs-number">6</span>       No    <span class="hljs-number">0</span>        <span class="hljs-number">6</span>       Class     <span class="hljs-number">2</span>nd<br><span class="hljs-operator">&gt;</span> print<span class="hljs-punctuation">(</span>my_data<span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> sink<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 关闭重定向</span><br></code></pre></td></tr></table></figure></li><li><p><strong>保存多个输出</strong>： 如果你需要同时保存多个分析结果，可以使用<code>sink</code>函数将这些结果输出到不同的文件中。这在进行批量处理时特别有用，比如在执行循环时，每次迭代都将结果写入不同的文件。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  sink<span class="hljs-punctuation">(</span>paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;output_&quot;</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;.txt&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-comment"># 这里放置你的代码</span><br>  print<span class="hljs-punctuation">(</span>paste<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Result for iteration&quot;</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  sink<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 关闭重定向</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li><li><p><strong>捕获警告和错误信息</strong>： 在进行批量处理时，可能需要捕获和记录警告或错误信息，以便后续处理。<code>sink</code>可以用来重定向这些信息到日志文件中。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">sink<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;warnings_and_errors.txt&quot;</span><span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;message&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 这里放置你的代码</span><br>some_function_that_might_warn_or_error<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>sink<span class="hljs-punctuation">(</span>type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;message&quot;</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 关闭重定向</span><br></code></pre></td></tr></table></figure></li><li><p><strong>批量生成报告</strong>： 当你需要生成批量报告时，可以结合<code>sink</code>函数来保存每个报告的内容到不同的文件。例如，当你对多个数据集进行分析时，可以为每个数据集生成一个报告，并将其保存到单独的文件中。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">datasets <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>dataset1<span class="hljs-punctuation">,</span> dataset2<span class="hljs-punctuation">,</span> dataset3<span class="hljs-punctuation">)</span><br><span class="hljs-keyword">for</span> <span class="hljs-punctuation">(</span>i <span class="hljs-keyword">in</span> <span class="hljs-built_in">seq_along</span><span class="hljs-punctuation">(</span>datasets<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  sink<span class="hljs-punctuation">(</span>paste0<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;report_&quot;</span><span class="hljs-punctuation">,</span> i<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;.txt&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-comment"># 这里放置你的分析代码</span><br>  print<span class="hljs-punctuation">(</span>summary<span class="hljs-punctuation">(</span>datasets<span class="hljs-punctuation">[[</span>i<span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>  sink<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span>  <span class="hljs-comment"># 关闭重定向</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure></li></ol><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><p>在R中，<code>source</code>函数用于从文件中读取和执行R代码。当使用<code>source</code>函数时，可以通过设置参数<code>echo = TRUE</code>来控制是否将执行的代码及其结果打印到控制台。这对于调试和理解代码的执行过程非常有用。</p><h3 id="source函数及其参数"><a href="#source函数及其参数" class="headerlink" title="source函数及其参数"></a><code>source</code>函数及其参数</h3><ul><li><strong><code>file</code></strong>: 指定要执行的R脚本文件的路径。</li><li><strong><code>local</code></strong>: 如果为<code>TRUE</code>，则脚本将在当前环境中执行。如果为<code>FALSE</code>，则在新环境中执行。</li><li><strong><code>echo</code></strong>: 如果为<code>TRUE</code>，则在执行脚本时会打印代码到控制台（默认为<code>FALSE</code>）。这对于调试或理解代码的执行流程很有帮助。</li><li><strong><code>print.eval</code></strong>: 如果为<code>TRUE</code>，则打印评估结果（默认为<code>TRUE</code>）。</li><li><strong><code>prompt</code></strong>: 自定义打印代码的前缀。</li></ul><ol><li><p><strong>基本用法</strong>：<br>假设你有一个脚本文件 <code>script.R</code>，内容如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-comment"># script.R</span><br>x <span class="hljs-operator">&lt;-</span> 10<br>y <span class="hljs-operator">&lt;-</span> 20<br>z <span class="hljs-operator">&lt;-</span> x <span class="hljs-operator">+</span> y<br>print<span class="hljs-punctuation">(</span>z<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>你可以通过以下方式执行这个脚本并打印代码和结果：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">source<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;script.R&quot;</span><span class="hljs-punctuation">,</span> echo <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>执行时，控制台将显示：</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">x</span> &lt;- <span class="hljs-number">10</span><br><span class="hljs-attribute">y</span> &lt;- <span class="hljs-number">20</span><br>z &lt;- <span class="hljs-attribute">x</span> + <span class="hljs-attribute">y</span><br><span class="hljs-built_in">print</span>(z)<br><span class="hljs-selector-attr">[1]</span> <span class="hljs-number">30</span><br></code></pre></td></tr></table></figure></li><li><p><strong>在调试时使用</strong>：<br>如果你正在调试脚本，并希望查看每一步代码的执行情况，<code>echo = TRUE</code>可以帮助你了解脚本的运行情况。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">source<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;script.R&quot;</span><span class="hljs-punctuation">,</span> echo <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> print.eval <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>这会将每行代码打印到控制台，并显示评估结果。</p></li><li><p><strong>与自定义提示结合使用</strong>：<br>你还可以自定义每行代码打印时的提示前缀。例如：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">source<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;script.R&quot;</span><span class="hljs-punctuation">,</span> echo <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> prompt <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&gt;&gt; &quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>这会将每行代码以<code>&gt;&gt;</code>作为前缀打印到控制台。</p></li></ol><h3 id="获取帮助"><a href="#获取帮助" class="headerlink" title="获取帮助"></a>获取帮助</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># A introduction to R</span><br>help.start<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>help<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">?</span>help<br><span class="hljs-comment"># 模糊匹配，搜索更深</span><br>help.search<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h3 id="包"><a href="#包" class="headerlink" title="包"></a>包</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">library<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 移除已library的包</span><br>detach<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;package:survival&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>碎金-R基础(3)</title>
    <link href="/2024/08/30/20240830%E7%A2%8E%E9%87%91-R%E5%9F%BA%E7%A1%80(3)/"/>
    <url>/2024/08/30/20240830%E7%A2%8E%E9%87%91-R%E5%9F%BA%E7%A1%80(3)/</url>
    
    <content type="html"><![CDATA[<h2 id="列表、数据框、索引"><a href="#列表、数据框、索引" class="headerlink" title="列表、数据框、索引"></a>列表、数据框、索引</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">mylist <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>before <span class="hljs-operator">=</span> intake.pre<span class="hljs-punctuation">,</span> after <span class="hljs-operator">=</span> intake.post<span class="hljs-punctuation">)</span><br>d <span class="hljs-operator">&lt;-</span> data.frame<span class="hljs-punctuation">(</span>intake.pre<span class="hljs-punctuation">,</span> intake.post<span class="hljs-punctuation">)</span><br>d<span class="hljs-operator">$</span>intake.pre<br>intake.pre<span class="hljs-punctuation">[</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span><span class="hljs-number">7</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br><span class="hljs-comment"># 为了得到一列元素，前5个</span><br>intake.pre<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span><br>intake.pre<span class="hljs-punctuation">[</span><span class="hljs-operator">-</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span><span class="hljs-number">7</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><p><code>intake.pre[3,5,7]</code> 是指定一个三维阵列。</p><h2 id="条件选择、dataframe索引、分组数据和数据框"><a href="#条件选择、dataframe索引、分组数据和数据框" class="headerlink" title="条件选择、dataframe索引、分组数据和数据框"></a>条件选择、dataframe索引、分组数据和数据框</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs R">intake.post<span class="hljs-punctuation">[</span>intake.pre <span class="hljs-operator">&gt;</span> <span class="hljs-number">7000</span><span class="hljs-punctuation">]</span><br>intake.post<span class="hljs-punctuation">[</span>intake.pre <span class="hljs-operator">&gt;</span> <span class="hljs-number">7000</span> <span class="hljs-operator">&amp;</span> intake.pre <span class="hljs-operator">&lt;=</span> <span class="hljs-number">8000</span><span class="hljs-punctuation">]</span><br><span class="hljs-built_in">is.na</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><br>d<span class="hljs-punctuation">[</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><br>d<span class="hljs-punctuation">[</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>d<span class="hljs-punctuation">[</span>d<span class="hljs-operator">$</span>intake.pre<span class="hljs-operator">&gt;</span><span class="hljs-number">7000</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br><span class="hljs-comment"># head,tail分别看前6行、后6行，但是有些数据一行就显示很多了，所以用索引有时候更好看</span><br>d<span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br>head<span class="hljs-punctuation">(</span>d<span class="hljs-punctuation">)</span><br>taid<span class="hljs-punctuation">(</span>d<span class="hljs-punctuation">)</span><br><span class="hljs-comment"># split根据分组生成一系列向量</span><br>exp.lean <span class="hljs-operator">&lt;-</span> energy<span class="hljs-operator">$</span>expend<span class="hljs-punctuation">[</span>energy<span class="hljs-operator">$</span>stature<span class="hljs-operator">==</span><span class="hljs-string">&quot;lean&quot;</span><span class="hljs-punctuation">]</span><br>exp.obese <span class="hljs-operator">&lt;-</span> energy<span class="hljs-operator">$</span>expend<span class="hljs-punctuation">[</span>energy<span class="hljs-operator">$</span>stature<span class="hljs-operator">==</span><span class="hljs-string">&quot;obese&quot;</span><span class="hljs-punctuation">]</span><br>l <span class="hljs-operator">&lt;-</span> split<span class="hljs-punctuation">(</span>energy<span class="hljs-operator">$</span>expend<span class="hljs-punctuation">,</span> energy<span class="hljs-operator">$</span>stature<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h2 id="隐式循环"><a href="#隐式循环" class="headerlink" title="隐式循环"></a>隐式循环</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R">lapply<span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">,</span> FUN<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">)</span><br><br>sapply<span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">,</span> FUN<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">,</span> simplify <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> USE.NAMES <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br>vapply<span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">,</span> FUN<span class="hljs-punctuation">,</span> FUN.VALUE<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">,</span> USE.NAMES <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br>replicate<span class="hljs-punctuation">(</span>n<span class="hljs-punctuation">,</span> expr<span class="hljs-punctuation">,</span> simplify <span class="hljs-operator">=</span> <span class="hljs-string">&quot;array&quot;</span><span class="hljs-punctuation">)</span><br><br>simplify2array<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> higher <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> except <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0L</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1L</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h3 id="lapply"><a href="#lapply" class="headerlink" title="lapply"></a>lapply</h3><p>总是返回一个列表list</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">lapply<span class="hljs-punctuation">(</span>thuesen<span class="hljs-punctuation">,</span> mean<span class="hljs-punctuation">,</span> na.rm<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h3 id="sapply"><a href="#sapply" class="headerlink" title="sapply"></a>sapply</h3><p>尽可能把结果简化为矢量或矩阵，s</p><h3 id="replicate"><a href="#replicate" class="headerlink" title="replicate"></a>replicate</h3><p><code>replicate</code> is a wrapper for the common use of <code>sapply</code> for repeated evaluation of an expression (which will usually involve random number generation).</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">replicate<span class="hljs-punctuation">(</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span> mean<span class="hljs-punctuation">(</span>rexp<span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">hist<span class="hljs-punctuation">(</span>replicate<span class="hljs-punctuation">(</span><span class="hljs-number">100</span><span class="hljs-punctuation">,</span> mean<span class="hljs-punctuation">(</span>rexp<span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/../image/hist.png" alt="hist"></p><h3 id="apply"><a href="#apply" class="headerlink" title="apply"></a>apply</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> args<span class="hljs-punctuation">(</span>apply<span class="hljs-punctuation">)</span><br><span class="hljs-keyword">function</span> <span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">,</span> MARGIN<span class="hljs-punctuation">,</span> FUN<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">,</span> simplify <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <br><span class="hljs-literal">NULL</span><br><span class="hljs-operator">&gt;</span> a <span class="hljs-operator">&lt;-</span> matrix<span class="hljs-punctuation">(</span>rnorm<span class="hljs-punctuation">(</span><span class="hljs-number">12</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> a<br>            <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span>       <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span>       <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span>       <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">0.05989430</span> <span class="hljs-operator">-</span><span class="hljs-number">1.9742683</span>  <span class="hljs-number">0.3055981</span> <span class="hljs-number">0.09329195</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span><span class="hljs-number">0.02776955</span> <span class="hljs-operator">-</span><span class="hljs-number">0.5145057</span> <span class="hljs-operator">-</span><span class="hljs-number">1.0739063</span> <span class="hljs-number">0.38565814</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">0.87636509</span>  <span class="hljs-number">0.9361427</span> <span class="hljs-operator">-</span><span class="hljs-number">0.8130423</span> <span class="hljs-number">1.05371669</span><br><span class="hljs-operator">&gt;</span> apply<span class="hljs-punctuation">(</span>a<span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">min</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span><span class="hljs-number">0.02776955</span> <span class="hljs-operator">-</span><span class="hljs-number">1.97426825</span> <span class="hljs-operator">-</span><span class="hljs-number">1.07390630</span>  <span class="hljs-number">0.09329195</span><br></code></pre></td></tr></table></figure><h3 id="tapply"><a href="#tapply" class="headerlink" title="tapply"></a>tapply</h3><p>原函数复杂。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">tapply</span><span class="hljs-params">(energy<span class="hljs-variable">$expend</span>, energy<span class="hljs-variable">$stature</span>, median)</span></span><br></code></pre></td></tr></table></figure><p>留个坑，明天填</p><h2 id="matrix"><a href="#matrix" class="headerlink" title="matrix"></a>matrix</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> rnorm<span class="hljs-punctuation">(</span><span class="hljs-number">12</span><span class="hljs-punctuation">)</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">0.10700263</span>  <span class="hljs-number">1.00670621</span>  <span class="hljs-number">0.95424255</span>  <span class="hljs-number">1.25678424</span> <span class="hljs-operator">-</span><span class="hljs-number">1.03494506</span> <span class="hljs-operator">-</span><span class="hljs-number">0.03080209</span> <span class="hljs-operator">-</span><span class="hljs-number">0.37540645</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">8</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">0.19333902</span> <span class="hljs-operator">-</span><span class="hljs-number">0.46068014</span> <span class="hljs-operator">-</span><span class="hljs-number">0.73324494</span> <span class="hljs-operator">-</span><span class="hljs-number">0.47054238</span>  <span class="hljs-number">0.27832456</span><br><span class="hljs-operator">&gt;</span> matrix<span class="hljs-punctuation">(</span>rnorm<span class="hljs-punctuation">(</span><span class="hljs-number">12</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br>            <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span>       <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span>       <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">0.19537621</span> <span class="hljs-operator">-</span><span class="hljs-number">0.4741858</span> <span class="hljs-operator">-</span><span class="hljs-number">1.5256267</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span><span class="hljs-number">2.62273301</span>  <span class="hljs-number">0.1724706</span> <span class="hljs-operator">-</span><span class="hljs-number">1.5558049</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span><span class="hljs-number">0.09622635</span> <span class="hljs-operator">-</span><span class="hljs-number">0.4325424</span>  <span class="hljs-number">0.7909691</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span><span class="hljs-number">0.68626223</span>  <span class="hljs-number">1.4428984</span>  <span class="hljs-number">0.3787396</span><br><span class="hljs-operator">&gt;</span> matrix<span class="hljs-punctuation">(</span>rnorm<span class="hljs-punctuation">(</span><span class="hljs-number">12</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br>          <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span>       <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span>       <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span>      <span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">1.192492</span> <span class="hljs-operator">-</span><span class="hljs-number">0.7622937</span> <span class="hljs-operator">-</span><span class="hljs-number">2.6369124</span> <span class="hljs-number">0.2271874</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span><span class="hljs-number">1.748089</span> <span class="hljs-operator">-</span><span class="hljs-number">0.2029010</span> <span class="hljs-operator">-</span><span class="hljs-number">0.4671013</span> <span class="hljs-number">0.5578554</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">-</span><span class="hljs-number">1.015322</span>  <span class="hljs-number">1.6526016</span> <span class="hljs-operator">-</span><span class="hljs-number">0.3449991</span> <span class="hljs-number">1.5391723</span><br><span class="hljs-operator">&gt;</span> args<span class="hljs-punctuation">(</span>matrix<span class="hljs-punctuation">)</span><br><span class="hljs-keyword">function</span> <span class="hljs-punctuation">(</span>data <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> nrow <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> ncol <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> byrow <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">dimnames</span> <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span> <br><span class="hljs-literal">NULL</span><br></code></pre></td></tr></table></figure><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R">sort<span class="hljs-punctuation">(</span>intake<span class="hljs-operator">$</span>post<span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 和sort效果一样</span><br>o <span class="hljs-operator">&lt;-</span> order<span class="hljs-punctuation">(</span>intake<span class="hljs-operator">$</span>post<span class="hljs-punctuation">)</span><br>intake<span class="hljs-operator">$</span>post<span class="hljs-punctuation">[</span>o<span class="hljs-punctuation">]</span><br>intake<span class="hljs-operator">$</span>pre<span class="hljs-punctuation">[</span>o<span class="hljs-punctuation">]</span><br><span class="hljs-comment"># 对整个数据框排序</span><br>intake.sorted <span class="hljs-operator">&lt;-</span> intake<span class="hljs-punctuation">[</span>o<span class="hljs-punctuation">,</span><span class="hljs-punctuation">]</span><br></code></pre></td></tr></table></figure><h2 id="练习题"><a href="#练习题" class="headerlink" title="练习题"></a>练习题</h2><h3 id="1-2-如果x是一个水平为n的因子，y是一个长度为n的向量，计算y-x-的结果是什么"><a href="#1-2-如果x是一个水平为n的因子，y是一个长度为n的向量，计算y-x-的结果是什么" class="headerlink" title="1.2 如果x是一个水平为n的因子，y是一个长度为n的向量，计算y[x]的结果是什么"></a>1.2 如果x是一个水平为n的因子，y是一个长度为n的向量，计算y[x]的结果是什么</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> y <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> x <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> x.1 <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;one&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;two&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;three&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> x<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> A B A C B C<br>Levels<span class="hljs-operator">:</span> A B C<br><span class="hljs-operator">&gt;</span> x.1 <br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span><br>Levels<span class="hljs-operator">:</span> one two three<br><span class="hljs-operator">&gt;</span> z <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> y<span class="hljs-punctuation">[</span>x<span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><br><span class="hljs-operator">&gt;</span> y<span class="hljs-punctuation">[</span>x.1<span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span><br><span class="hljs-operator">&gt;</span> y<span class="hljs-punctuation">[</span>z<span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> y <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> x <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> x.1 <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;one&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;two&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;three&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> x<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> A B A C B C<br>Levels<span class="hljs-operator">:</span> A B C<br><span class="hljs-operator">&gt;</span> x.1 <br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span><br>Levels<span class="hljs-operator">:</span> one two three<br><span class="hljs-operator">&gt;</span> z <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> y<span class="hljs-punctuation">[</span>x<span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><br><span class="hljs-operator">&gt;</span> y<span class="hljs-punctuation">[</span>x.1<span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span><br><span class="hljs-operator">&gt;</span> y<span class="hljs-punctuation">[</span>z<span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> y <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> x <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;D&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;E&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;D&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;E&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> x.1 <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;one&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;two&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;three&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> x<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> A B A C B C D E<br>Levels<span class="hljs-operator">:</span> A B C D E<br><span class="hljs-operator">&gt;</span> x.1 <br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span> <span class="hljs-operator">&lt;</span><span class="hljs-literal">NA</span><span class="hljs-operator">&gt;</span><br>Levels<span class="hljs-operator">:</span> one two three<br><span class="hljs-operator">&gt;</span> z <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;A&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;B&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;C&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> y<span class="hljs-punctuation">[</span>x<span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">1</span>  <span class="hljs-number">2</span>  <span class="hljs-number">1</span>  <span class="hljs-number">3</span>  <span class="hljs-number">2</span>  <span class="hljs-number">3</span>  <span class="hljs-number">4</span> <span class="hljs-literal">NA</span><br><span class="hljs-operator">&gt;</span> y<span class="hljs-punctuation">[</span>x.1<span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span><br><span class="hljs-operator">&gt;</span> y<span class="hljs-punctuation">[</span>z<span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span> <span class="hljs-literal">NA</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R可视化-元素</title>
    <link href="/2024/08/30/20240830%E5%85%83%E7%B4%A0-%E3%80%8A%E7%8E%B0%E4%BB%A3%E7%BB%9F%E8%AE%A1%E5%9B%BE%E5%BD%A2%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <url>/2024/08/30/20240830%E5%85%83%E7%B4%A0-%E3%80%8A%E7%8E%B0%E4%BB%A3%E7%BB%9F%E8%AE%A1%E5%9B%BE%E5%BD%A2%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="3-1-颜色"><a href="#3-1-颜色" class="headerlink" title="3.1 颜色"></a>3.1 颜色</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> pdf<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;colors-bar.pdf&quot;</span><span class="hljs-punctuation">,</span> height <span class="hljs-operator">=</span> <span class="hljs-number">120</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> par<span class="hljs-punctuation">(</span>mar <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span> <span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">+</span> <span class="hljs-number">0.1</span><span class="hljs-punctuation">,</span> yaxs <span class="hljs-operator">=</span> <span class="hljs-string">&quot;i&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> barplot<span class="hljs-punctuation">(</span><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>colors<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><br><span class="hljs-operator">+</span>         col <span class="hljs-operator">=</span> rev<span class="hljs-punctuation">(</span>colors<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> names.arg <span class="hljs-operator">=</span> rev<span class="hljs-punctuation">(</span>colors<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> horiz <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span><br><span class="hljs-operator">+</span>         las <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> xaxt <span class="hljs-operator">=</span> <span class="hljs-string">&quot;n&quot;</span><span class="hljs-punctuation">,</span> main <span class="hljs-operator">=</span> <span class="hljs-built_in">expression</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Bars of colors in&quot;</span> <span class="hljs-operator">~</span> italic<span class="hljs-punctuation">(</span>colors<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">+</span> <span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>这里会在工作目录下生成pdf，运行第一行就生成pdf文件，如果这时候打开，会报错访问pdf时遇到共享冲突。而且画图后，文件大小也为空。必须<code>dev.off()</code></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> weight <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">60</span><span class="hljs-punctuation">,</span><span class="hljs-number">72</span><span class="hljs-punctuation">,</span><span class="hljs-number">57</span><span class="hljs-punctuation">,</span><span class="hljs-number">90</span><span class="hljs-punctuation">,</span><span class="hljs-number">95</span><span class="hljs-punctuation">,</span><span class="hljs-number">72</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> height <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1.75</span><span class="hljs-punctuation">,</span><span class="hljs-number">1.80</span><span class="hljs-punctuation">,</span><span class="hljs-number">1.65</span><span class="hljs-punctuation">,</span><span class="hljs-number">1.90</span><span class="hljs-punctuation">,</span><span class="hljs-number">1.74</span><span class="hljs-punctuation">,</span><span class="hljs-number">1.91</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> plot<span class="hljs-punctuation">(</span>height<span class="hljs-punctuation">,</span> weight<span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> height<span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-operator">*</span>rnorm<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>height<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span>  <span class="hljs-number">8.8910368</span>  <span class="hljs-number">4.1141213</span> <span class="hljs-operator">-</span><span class="hljs-number">0.6139926</span> <span class="hljs-operator">-</span><span class="hljs-number">3.7001999</span>  <span class="hljs-number">1.0091345</span>  <span class="hljs-number">2.0395394</span><br><span class="hljs-operator">&gt;</span> hh <span class="hljs-operator">&lt;-</span> sort<span class="hljs-punctuation">(</span>height<span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> hh<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">1.65</span> <span class="hljs-number">1.74</span> <span class="hljs-number">1.75</span> <span class="hljs-number">1.80</span> <span class="hljs-number">1.90</span> <span class="hljs-number">1.91</span><br><span class="hljs-operator">&gt;</span> palette<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 默认的调色板颜色</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;black&quot;</span>   <span class="hljs-string">&quot;#DF536B&quot;</span> <span class="hljs-string">&quot;#61D04F&quot;</span> <span class="hljs-string">&quot;#2297E6&quot;</span> <span class="hljs-string">&quot;#28E2E5&quot;</span> <span class="hljs-string">&quot;#CD0BBC&quot;</span> <span class="hljs-string">&quot;#F5C710&quot;</span> <span class="hljs-string">&quot;gray62&quot;</span> <br><span class="hljs-operator">&gt;</span> palette<span class="hljs-punctuation">(</span>colors<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 重新设置调色板为 colors() 的前 10 种颜色</span><br><span class="hljs-operator">&gt;</span> palette<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span> <span class="hljs-comment"># 更改后的调色板颜色</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;white&quot;</span>         <span class="hljs-string">&quot;aliceblue&quot;</span>     <span class="hljs-string">&quot;antiquewhite&quot;</span>  <span class="hljs-string">&quot;antiquewhite1&quot;</span> <span class="hljs-string">&quot;antiquewhite2&quot;</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">6</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;antiquewhite3&quot;</span> <span class="hljs-string">&quot;antiquewhite4&quot;</span> <span class="hljs-string">&quot;aquamarine&quot;</span>    <span class="hljs-string">&quot;aquamarine&quot;</span>    <span class="hljs-string">&quot;aquamarine2&quot;</span>  <br><span class="hljs-operator">&gt;</span> palette<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;default&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> lines<span class="hljs-punctuation">(</span>hh<span class="hljs-punctuation">,</span> <span class="hljs-number">22.5</span> <span class="hljs-operator">*</span> hh<span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>col <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/..%5Cimage%5C3.1.1.png" alt="3.1.1"></p><p>调色板的好处在于，我们可以在 R 中使用一个整数来表示颜色，而这个整数对应的颜色就是调色板中相应位置的颜色，比如在某作图函数中调用参数 <code>col = 2</code> 表示取调色板中第 2 种颜色。 若整数值超过了调色板颜色向量的长度，那么 R 会自动取该整数除以调色板颜色向量长度的余数。</p>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>碎金-R基础(2)</title>
    <link href="/2024/08/29/20240829%E7%A2%8E%E9%87%91-R%E5%9F%BA%E7%A1%80(2)/"/>
    <url>/2024/08/29/20240829%E7%A2%8E%E9%87%91-R%E5%9F%BA%E7%A1%80(2)/</url>
    
    <content type="html"><![CDATA[<h2 id="c-seq-rep"><a href="#c-seq-rep" class="headerlink" title="c, seq, rep"></a>c, seq, rep</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span>red <span class="hljs-operator">=</span> <span class="hljs-string">&quot;apple&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># 连接，转换不同类型向量</span><br><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-literal">FALSE</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;abc&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>seq<span class="hljs-punctuation">(</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span><span class="hljs-number">9</span><span class="hljs-punctuation">)</span><br>seq<span class="hljs-punctuation">(</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">rep</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span><span class="hljs-number">15</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-comment"># rep(1:2, c(10,10)) same as rep(1:2, each = 10)</span><br></code></pre></td></tr></table></figure><h2 id="dim-matrix-rownames-colnames-t"><a href="#dim-matrix-rownames-colnames-t" class="headerlink" title="dim, matrix, rownames, colnames, t"></a>dim, matrix, rownames, colnames, t</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R">x <span class="hljs-operator">&lt;-</span> 1<span class="hljs-operator">:</span><span class="hljs-number">12</span><br><span class="hljs-built_in">dim</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br>x <span class="hljs-operator">&lt;-</span> matrix<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> nrow<span class="hljs-operator">=</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span> byrow<span class="hljs-operator">=</span><span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><br>rownames<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">LETTERS</span><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span><br>t<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>矩阵以列存储，byrow按照行存储。t转置。</p><p>内置变量</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">month.abb</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Jan&quot;</span> <span class="hljs-string">&quot;Feb&quot;</span> <span class="hljs-string">&quot;Mar&quot;</span> <span class="hljs-string">&quot;Apr&quot;</span> <span class="hljs-string">&quot;May&quot;</span> <span class="hljs-string">&quot;Jun&quot;</span> <span class="hljs-string">&quot;Jul&quot;</span> <span class="hljs-string">&quot;Aug&quot;</span> <span class="hljs-string">&quot;Sep&quot;</span> <span class="hljs-string">&quot;Oct&quot;</span> <span class="hljs-string">&quot;Nov&quot;</span> <span class="hljs-string">&quot;Dec&quot;</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">month.name</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;January&quot;</span>   <span class="hljs-string">&quot;February&quot;</span>  <span class="hljs-string">&quot;March&quot;</span>     <span class="hljs-string">&quot;April&quot;</span>     <span class="hljs-string">&quot;May&quot;</span>       <span class="hljs-string">&quot;June&quot;</span>      <span class="hljs-string">&quot;July&quot;</span>     <br> <span class="hljs-punctuation">[</span><span class="hljs-number">8</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;August&quot;</span>    <span class="hljs-string">&quot;September&quot;</span> <span class="hljs-string">&quot;October&quot;</span>   <span class="hljs-string">&quot;November&quot;</span>  <span class="hljs-string">&quot;December&quot;</span> <br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">letters</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;a&quot;</span> <span class="hljs-string">&quot;b&quot;</span> <span class="hljs-string">&quot;c&quot;</span> <span class="hljs-string">&quot;d&quot;</span> <span class="hljs-string">&quot;e&quot;</span> <span class="hljs-string">&quot;f&quot;</span> <span class="hljs-string">&quot;g&quot;</span> <span class="hljs-string">&quot;h&quot;</span> <span class="hljs-string">&quot;i&quot;</span> <span class="hljs-string">&quot;j&quot;</span> <span class="hljs-string">&quot;k&quot;</span> <span class="hljs-string">&quot;l&quot;</span> <span class="hljs-string">&quot;m&quot;</span> <span class="hljs-string">&quot;n&quot;</span> <span class="hljs-string">&quot;o&quot;</span> <span class="hljs-string">&quot;p&quot;</span> <span class="hljs-string">&quot;q&quot;</span> <span class="hljs-string">&quot;r&quot;</span> <span class="hljs-string">&quot;s&quot;</span> <span class="hljs-string">&quot;t&quot;</span> <span class="hljs-string">&quot;u&quot;</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">22</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;v&quot;</span> <span class="hljs-string">&quot;w&quot;</span> <span class="hljs-string">&quot;x&quot;</span> <span class="hljs-string">&quot;y&quot;</span> <span class="hljs-string">&quot;z&quot;</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">LETTERS</span><br> <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;A&quot;</span> <span class="hljs-string">&quot;B&quot;</span> <span class="hljs-string">&quot;C&quot;</span> <span class="hljs-string">&quot;D&quot;</span> <span class="hljs-string">&quot;E&quot;</span> <span class="hljs-string">&quot;F&quot;</span> <span class="hljs-string">&quot;G&quot;</span> <span class="hljs-string">&quot;H&quot;</span> <span class="hljs-string">&quot;I&quot;</span> <span class="hljs-string">&quot;J&quot;</span> <span class="hljs-string">&quot;K&quot;</span> <span class="hljs-string">&quot;L&quot;</span> <span class="hljs-string">&quot;M&quot;</span> <span class="hljs-string">&quot;N&quot;</span> <span class="hljs-string">&quot;O&quot;</span> <span class="hljs-string">&quot;P&quot;</span> <span class="hljs-string">&quot;Q&quot;</span> <span class="hljs-string">&quot;R&quot;</span> <span class="hljs-string">&quot;S&quot;</span> <span class="hljs-string">&quot;T&quot;</span> <span class="hljs-string">&quot;U&quot;</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">22</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;V&quot;</span> <span class="hljs-string">&quot;W&quot;</span> <span class="hljs-string">&quot;X&quot;</span> <span class="hljs-string">&quot;Y&quot;</span> <span class="hljs-string">&quot;Z&quot;</span><br></code></pre></td></tr></table></figure><h2 id="因子"><a href="#因子" class="headerlink" title="因子"></a>因子</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> pain <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> fpain <span class="hljs-operator">&lt;-</span> factor<span class="hljs-punctuation">(</span>pain<span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> <span class="hljs-number">0</span><span class="hljs-operator">:</span><span class="hljs-number">3</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> fpain<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">0</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span> <span class="hljs-number">2</span> <span class="hljs-number">1</span><br>Levels<span class="hljs-operator">:</span> <span class="hljs-number">0</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><br><span class="hljs-operator">&gt;</span> levels<span class="hljs-punctuation">(</span>fpain<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;none&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;mild&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;medium&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;severe&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> fpain<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> none   severe medium medium mild  <br>Levels<span class="hljs-operator">:</span> none mild medium severe<br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>fpain<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">1</span> <span class="hljs-number">4</span> <span class="hljs-number">3</span> <span class="hljs-number">3</span> <span class="hljs-number">2</span><br><span class="hljs-operator">&gt;</span> levels<span class="hljs-punctuation">(</span>fpain<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;none&quot;</span>   <span class="hljs-string">&quot;mild&quot;</span>   <span class="hljs-string">&quot;medium&quot;</span> <span class="hljs-string">&quot;severe&quot;</span><br></code></pre></td></tr></table></figure><p>R默认用排序的值， 一个因子的内置表达方式始终是从1开始的数字。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> ordered_x <span class="hljs-operator">&lt;-</span> ordered<span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> levels <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;low&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;medium&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;high&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> ordered_x<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> low    medium high  <br>Levels<span class="hljs-operator">:</span> low <span class="hljs-operator">&lt;</span> medium <span class="hljs-operator">&lt;</span> high<br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">as.numeric</span><span class="hljs-punctuation">(</span>ordered_x<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">1</span> <span class="hljs-number">2</span> <span class="hljs-number">3</span><br><span class="hljs-operator">&gt;</span> levels<span class="hljs-punctuation">(</span>ordered_x<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;low&quot;</span>    <span class="hljs-string">&quot;medium&quot;</span> <span class="hljs-string">&quot;high&quot;</span>  <br></code></pre></td></tr></table></figure><p><strong>在R中，默认因子水平是等距离的（通过生成多项式对照）</strong></p><h2 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> contrasts<span class="hljs-punctuation">(</span><br><span class="hljs-operator">+</span><br></code></pre></td></tr></table></figure><p>windows和macintosh下用esc，unix下用Ctrl+c，windows中RStudio不能用Ctrl+c，书上写错了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>碎金-R基础</title>
    <link href="/2024/08/28/20240828%E7%A2%8E%E9%87%91-R%E5%9F%BA%E7%A1%80(1)/"/>
    <url>/2024/08/28/20240828%E7%A2%8E%E9%87%91-R%E5%9F%BA%E7%A1%80(1)/</url>
    
    <content type="html"><![CDATA[<h2 id="lines"><a href="#lines" class="headerlink" title="lines()"></a>lines()</h2><p>如果没有对数值进行排序，线段不会自动连接相邻的点，而是会在相隔很远的点间来回连接</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R">weight <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">60</span><span class="hljs-punctuation">,</span><span class="hljs-number">72</span><span class="hljs-punctuation">,</span><span class="hljs-number">57</span><span class="hljs-punctuation">,</span><span class="hljs-number">90</span><span class="hljs-punctuation">,</span><span class="hljs-number">95</span><span class="hljs-punctuation">,</span><span class="hljs-number">72</span><span class="hljs-punctuation">)</span><br>height <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1.75</span><span class="hljs-punctuation">,</span><span class="hljs-number">1.80</span><span class="hljs-punctuation">,</span><span class="hljs-number">1.65</span><span class="hljs-punctuation">,</span><span class="hljs-number">1.90</span><span class="hljs-punctuation">,</span><span class="hljs-number">1.74</span><span class="hljs-punctuation">,</span><span class="hljs-number">1.91</span><span class="hljs-punctuation">)</span><br>plot<span class="hljs-punctuation">(</span>height<span class="hljs-punctuation">,</span> weight<span class="hljs-punctuation">)</span><br><span class="hljs-number">22.5</span><span class="hljs-operator">*</span>height<span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-operator">*</span>rnorm<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>height<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>lines<span class="hljs-punctuation">(</span>height<span class="hljs-punctuation">,</span> <span class="hljs-number">22.5</span><span class="hljs-operator">*</span>height<span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-operator">*</span>rnorm<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>height<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>dev.off<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>height<span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-operator">*</span>rnorm<span class="hljs-punctuation">(</span><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>height<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>hh <span class="hljs-operator">&lt;-</span> sort<span class="hljs-punctuation">(</span>height<span class="hljs-punctuation">)</span><br>hh<br>lines<span class="hljs-punctuation">(</span>hh<span class="hljs-punctuation">,</span> <span class="hljs-number">22.5</span> <span class="hljs-operator">*</span> hh<span class="hljs-operator">^</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span>col <span class="hljs-operator">=</span> <span class="hljs-string">&quot;blue&quot;</span><span class="hljs-punctuation">)</span><br>save.image<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;F:/Web/Hexo_Blog/source/image/lines.png&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><img src="/../image/lines.png" alt="lines"></p><p>里面从左下向右上的蓝色直线是sort后的height值画出的。</p><p>根据lines的这个特点，可以自己来控制连线顺序，实现绘画。</p><h2 id="plot"><a href="#plot" class="headerlink" title="plot()"></a>plot()</h2><p>在<code>plot</code>函数中，未命名的参数使你能够灵活地传递额外的绘图参数。例如，你可以传递图形的颜色、类型、符号等选项：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">plot<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> <span class="hljs-number">1</span><span class="hljs-operator">:</span><span class="hljs-number">10</span><span class="hljs-punctuation">,</span> col<span class="hljs-operator">=</span><span class="hljs-string">&quot;blue&quot;</span><span class="hljs-punctuation">,</span> pch<span class="hljs-operator">=</span><span class="hljs-number">19</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>在这个例子中，<code>col</code>和<code>pch</code>是<code>plot</code>函数的附加参数，指定点的颜色和符号。<code>plot</code>函数利用<code>...</code>来接受这些参数，使得它可以接受并处理不同类型的绘图设置，增加了灵活性。</p><p>…<br>arguments to be passed to methods, such as graphical parameters (see par).</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> plot.default<br><span class="hljs-keyword">function</span> <span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> type <span class="hljs-operator">=</span> <span class="hljs-string">&quot;p&quot;</span><span class="hljs-punctuation">,</span> xlim <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> ylim <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> <br>    <span class="hljs-built_in">log</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">,</span> main <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> sub <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> xlab <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> ylab <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> <br>    ann <span class="hljs-operator">=</span> par<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;ann&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> axes <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> frame.plot <span class="hljs-operator">=</span> axes<span class="hljs-punctuation">,</span> panel.first <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> <br>    panel.last <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">,</span> asp <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> xgap.axis <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> ygap.axis <span class="hljs-operator">=</span> <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> <br>    ...<span class="hljs-punctuation">)</span> <br></code></pre></td></tr></table></figure><h2 id="cat-print"><a href="#cat-print" class="headerlink" title="cat() &amp; print()"></a>cat() &amp; print()</h2><p>cat 适合用于创建格式化的输出，并且你可以精确控制输出格式，比如输出到文件或用户消息。print 更适合于查看对象的标准表示，调试时用于展示数据的结构和内容。</p><p>使用cat时，输出更“干净”且更具格式控制，而使用print时，输出更多信息且适合调试和查看对象内容。</p><p><code>cat</code> 函数在 R 中没有返回值。它的主要功能是将指定的文本直接打印到控制台或者写入文件，而不是返回任何数据或结果。<code>cat</code> 函数用于生成格式化的输出，但它不返回任何值，因此其返回值总是 <code>NULL</code>。但是<code>print</code>有返回值。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs R">read.1 <span class="hljs-operator">&lt;-</span> cat<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Apple&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Bus&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Cats&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>read.2 <span class="hljs-operator">&lt;-</span> cat<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Apple Bus Cats&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>identical<span class="hljs-punctuation">(</span>read.1<span class="hljs-punctuation">,</span> read.2<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>read.1<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>read.2<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">class</span><span class="hljs-punctuation">(</span>read.1<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">class</span><span class="hljs-punctuation">(</span>read.2<span class="hljs-punctuation">)</span><br>read.3 <span class="hljs-operator">&lt;-</span> print<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Apple&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Bus&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Cats&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>read.4 <span class="hljs-operator">&lt;-</span> print<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Apple Bus Cats&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>read.3<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>read.4<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">class</span><span class="hljs-punctuation">(</span>read.3<span class="hljs-punctuation">)</span><br><span class="hljs-built_in">class</span><span class="hljs-punctuation">(</span>read.4<span class="hljs-punctuation">)</span><br>identical<span class="hljs-punctuation">(</span>read.3<span class="hljs-punctuation">,</span>read.4<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>这里identical比较的时候我以为cat有返回值，其实并不是，是null在比较。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> read.1 <span class="hljs-operator">==</span> read.2<br>logical<span class="hljs-punctuation">(</span><span class="hljs-number">0</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> identical<span class="hljs-punctuation">(</span>read.1<span class="hljs-punctuation">,</span> read.2<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-literal">TRUE</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>read.1<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">0</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>read.2<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">0</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">class</span><span class="hljs-punctuation">(</span>read.1<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;NULL&quot;</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">class</span><span class="hljs-punctuation">(</span>read.2<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;NULL&quot;</span><br><span class="hljs-operator">&gt;</span> print<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Apple&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Bus&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Cats&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Apple&quot;</span> <span class="hljs-string">&quot;Bus&quot;</span>   <span class="hljs-string">&quot;Cats&quot;</span> <br><span class="hljs-operator">&gt;</span> print<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Apple&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Bus&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Cats&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Apple&quot;</span> <span class="hljs-string">&quot;Bus&quot;</span>   <span class="hljs-string">&quot;Cats&quot;</span> <br><span class="hljs-operator">&gt;</span> print<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Apple Bus Cats&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Apple Bus Cats&quot;</span><br><span class="hljs-operator">&gt;</span> read.3 <span class="hljs-operator">&lt;-</span> print<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Apple&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Bus&quot;</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Cats&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Apple&quot;</span> <span class="hljs-string">&quot;Bus&quot;</span>   <span class="hljs-string">&quot;Cats&quot;</span> <br><span class="hljs-operator">&gt;</span> read.4 <span class="hljs-operator">&lt;-</span> print<span class="hljs-punctuation">(</span><span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Apple Bus Cats&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Apple Bus Cats&quot;</span><br><span class="hljs-operator">&gt;</span> read.3<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;Apple&quot;</span> <span class="hljs-string">&quot;Bus&quot;</span>   <span class="hljs-string">&quot;Cats&quot;</span> <br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>read.3<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">3</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">length</span><span class="hljs-punctuation">(</span>read.4<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">1</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">class</span><span class="hljs-punctuation">(</span>read.3<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;character&quot;</span><br><span class="hljs-operator">&gt;</span> <span class="hljs-built_in">class</span><span class="hljs-punctuation">(</span>read.4<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;character&quot;</span><br><span class="hljs-operator">&gt;</span> identical<span class="hljs-punctuation">(</span>read.3<span class="hljs-punctuation">,</span>read.4<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-literal">FALSE</span><br></code></pre></td></tr></table></figure><p>这里想说，cat输出的时候字符向量不会有引号，而且”Apple”,”Bus”,”Cats”的输出不能和”Apple Bus Cats”区分。但是print可以。cat为了更美观的输出减少了信息。</p><h2 id="换行符"><a href="#换行符" class="headerlink" title="换行符"></a>换行符</h2><p>\n，用法</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">cat<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;Huey&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Dewey&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Louie&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;\n&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R更新后迁移R包,unname原函数解读</title>
    <link href="/2024/08/27/20240827R%E6%9B%B4%E6%96%B0%E5%90%8ER%E5%8C%85%E7%9A%84%E8%BF%81%E7%A7%BB/"/>
    <url>/2024/08/27/20240827R%E6%9B%B4%E6%96%B0%E5%90%8ER%E5%8C%85%E7%9A%84%E8%BF%81%E7%A7%BB/</url>
    
    <content type="html"><![CDATA[<p><strong>Important: don’t do this on a production machine</strong></p><blockquote><p>What is the danger of copy-pasting packages to a new library location?</p></blockquote><p>For individual work, the risk of doing this is quite low. As already mentioned, some packages will need recompilation due to the internal changes in R-3.5.0. This may lead to runtime errors - so this is the risk you take.</p><p>But one strategy is to copy-paste, then run</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r">update.packages<span class="hljs-punctuation">(</span>ask <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>Your second question is:</p><blockquote><p>How can I script the installation of all my packages?</p></blockquote><p>Try something like this, where points to the library of your previous release of R<code>lib_loc</code></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs r">lib_loc <span class="hljs-operator">&lt;-</span> <span class="hljs-string">&quot;C:/Users/apdev/Documents/R/win-library/3.3&quot;</span><br>to_install <span class="hljs-operator">&lt;-</span> unname<span class="hljs-punctuation">(</span>installed.packages<span class="hljs-punctuation">(</span>lib.loc <span class="hljs-operator">=</span> lib_loc<span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;Package&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>to_install<br>install.packages<span class="hljs-punctuation">(</span>pkgs <span class="hljs-operator">=</span> to_install<span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> head<span class="hljs-punctuation">(</span>installed.packages<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>           Package      LibPath                        Version <br>abind      <span class="hljs-string">&quot;abind&quot;</span>      <span class="hljs-string">&quot;E:/R/R-4.4.1/R-4.4.1/library&quot;</span> <span class="hljs-string">&quot;1.4-5&quot;</span> <br>admisc     <span class="hljs-string">&quot;admisc&quot;</span>     <span class="hljs-string">&quot;E:/R/R-4.4.1/R-4.4.1/library&quot;</span> <span class="hljs-string">&quot;0.35&quot;</span>  <br>ADPclust   <span class="hljs-string">&quot;ADPclust&quot;</span>   <span class="hljs-string">&quot;E:/R/R-4.4.1/R-4.4.1/library&quot;</span> <span class="hljs-string">&quot;0.7&quot;</span>   <br>affxparser <span class="hljs-string">&quot;affxparser&quot;</span> <span class="hljs-string">&quot;E:/R/R-4.4.1/R-4.4.1/library&quot;</span> <span class="hljs-string">&quot;1.76.0&quot;</span><br>affy       <span class="hljs-string">&quot;affy&quot;</span>       <span class="hljs-string">&quot;E:/R/R-4.4.1/R-4.4.1/library&quot;</span> <span class="hljs-string">&quot;1.82.0&quot;</span><br>affyio     <span class="hljs-string">&quot;affyio&quot;</span>     <span class="hljs-string">&quot;E:/R/R-4.4.1/R-4.4.1/library&quot;</span> <span class="hljs-string">&quot;1.74.0&quot;</span><br>           Priority<br>abind      <span class="hljs-literal">NA</span>      <br>admisc     <span class="hljs-literal">NA</span>      <br>ADPclust   <span class="hljs-literal">NA</span>      <br>affxparser <span class="hljs-literal">NA</span>      <br>affy       <span class="hljs-literal">NA</span>      <br>affyio     <span class="hljs-literal">NA</span>      <br>           Depends                                                     <br>abind      <span class="hljs-string">&quot;R (&gt;= 1.5.0)&quot;</span>                                              <br>admisc     <span class="hljs-string">&quot;R (&gt;= 3.5.0)&quot;</span>                                              <br>ADPclust   <span class="hljs-string">&quot;R (&gt;= 3.0.0),&quot;</span>                                             <br>affxparser <span class="hljs-string">&quot;R (&gt;= 2.14.0)&quot;</span>                                             <br>affy       <span class="hljs-string">&quot;R (&gt;= 2.8.0), BiocGenerics (&gt;= 0.1.12), Biobase (&gt;= 2.5.5)&quot;</span><br>affyio     <span class="hljs-string">&quot;R (&gt;= 2.6.0)&quot;</span>                                              <br>           Imports                                                                                                 <br>abind      <span class="hljs-string">&quot;methods, utils&quot;</span>                                                                                        <br>admisc     <span class="hljs-string">&quot;methods&quot;</span>                                                                                               <br>ADPclust   <span class="hljs-string">&quot;dplyr, cluster, fields, knitr&quot;</span>                                                                         <br>affxparser <span class="hljs-literal">NA</span>                                                                                                      <br>affy       <span class="hljs-string">&quot;affyio (&gt;= 1.13.3), BiocManager, graphics, grDevices, methods,\npreprocessCore, stats, utils, zlibbioc&quot;</span><br>affyio     <span class="hljs-string">&quot;zlibbioc, methods&quot;</span>                                                                                     <br>           LinkingTo       <br>abind      <span class="hljs-literal">NA</span>              <br>admisc     <span class="hljs-literal">NA</span>              <br>ADPclust   <span class="hljs-literal">NA</span>              <br>affxparser <span class="hljs-literal">NA</span>              <br>affy       <span class="hljs-string">&quot;preprocessCore&quot;</span><br>affyio     <span class="hljs-literal">NA</span>              <br>           Suggests                                                       <br>abind      <span class="hljs-literal">NA</span>                                                             <br>admisc     <span class="hljs-string">&quot;QCA (&gt;= 3.7)&quot;</span>                                                 <br>ADPclust   <span class="hljs-string">&quot;rmarkdown, testthat&quot;</span>                                          <br>affxparser <span class="hljs-string">&quot;R.oo (&gt;= 1.22.0), R.utils (&gt;= 2.7.0), AffymetrixDataTestFiles&quot;</span><br>affy       <span class="hljs-string">&quot;tkWidgets (&gt;= 1.19.0), affydata, widgetTools, hgu95av2cdf&quot;</span>    <br>affyio     <span class="hljs-literal">NA</span>                                                             <br>           Enhances License         License_is_FOSS<br>abind      <span class="hljs-literal">NA</span>       <span class="hljs-string">&quot;LGPL (&gt;= 2)&quot;</span>   <span class="hljs-literal">NA</span>             <br>admisc     <span class="hljs-literal">NA</span>       <span class="hljs-string">&quot;GPL (&gt;= 3)&quot;</span>    <span class="hljs-literal">NA</span>             <br>ADPclust   <span class="hljs-literal">NA</span>       <span class="hljs-string">&quot;GPL (&gt;= 2)&quot;</span>    <span class="hljs-literal">NA</span>             <br>affxparser <span class="hljs-literal">NA</span>       <span class="hljs-string">&quot;LGPL (&gt;= 2)&quot;</span>   <span class="hljs-literal">NA</span>             <br>affy       <span class="hljs-literal">NA</span>       <span class="hljs-string">&quot;LGPL (&gt;= 2.0)&quot;</span> <span class="hljs-literal">NA</span>             <br>affyio     <span class="hljs-literal">NA</span>       <span class="hljs-string">&quot;LGPL (&gt;= 2)&quot;</span>   <span class="hljs-literal">NA</span>             <br>           License_restricts_use OS_type MD5sum NeedsCompilation<br>abind      <span class="hljs-literal">NA</span>                    <span class="hljs-literal">NA</span>      <span class="hljs-literal">NA</span>     <span class="hljs-string">&quot;no&quot;</span>            <br>admisc     <span class="hljs-literal">NA</span>                    <span class="hljs-literal">NA</span>      <span class="hljs-literal">NA</span>     <span class="hljs-string">&quot;yes&quot;</span>           <br>ADPclust   <span class="hljs-literal">NA</span>                    <span class="hljs-literal">NA</span>      <span class="hljs-literal">NA</span>     <span class="hljs-string">&quot;no&quot;</span>            <br>affxparser <span class="hljs-literal">NA</span>                    <span class="hljs-literal">NA</span>      <span class="hljs-literal">NA</span>     <span class="hljs-string">&quot;yes&quot;</span>           <br>affy       <span class="hljs-literal">NA</span>                    <span class="hljs-literal">NA</span>      <span class="hljs-literal">NA</span>     <span class="hljs-string">&quot;yes&quot;</span>           <br>affyio     <span class="hljs-literal">NA</span>                    <span class="hljs-literal">NA</span>      <span class="hljs-literal">NA</span>     <span class="hljs-string">&quot;yes&quot;</span>           <br>           Built  <br>abind      <span class="hljs-string">&quot;4.3.1&quot;</span><br>admisc     <span class="hljs-string">&quot;4.3.3&quot;</span><br>ADPclust   <span class="hljs-string">&quot;4.3.3&quot;</span><br>affxparser <span class="hljs-string">&quot;4.3.2&quot;</span><br>affy       <span class="hljs-string">&quot;4.3.2&quot;</span><br>affyio     <span class="hljs-string">&quot;4.3.2&quot;</span><br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> head<span class="hljs-punctuation">(</span>installed.packages<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Package&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>       abind       admisc     ADPclust   affxparser         affy <br>     <span class="hljs-string">&quot;abind&quot;</span>     <span class="hljs-string">&quot;admisc&quot;</span>   <span class="hljs-string">&quot;ADPclust&quot;</span> <span class="hljs-string">&quot;affxparser&quot;</span>       <span class="hljs-string">&quot;affy&quot;</span> <br>      affyio <br>    <span class="hljs-string">&quot;affyio&quot;</span> <br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-operator">&gt;</span> unname<span class="hljs-punctuation">(</span>installed.packages<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">[</span><span class="hljs-punctuation">,</span><span class="hljs-string">&quot;Package&quot;</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">)</span><br>  <span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;abind&quot;</span>                               <br>  <span class="hljs-punctuation">[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;admisc&quot;</span>                              <br>  <span class="hljs-punctuation">[</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;ADPclust&quot;</span>                            <br>  <span class="hljs-punctuation">[</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;affxparser&quot;</span>                          <br>  <span class="hljs-punctuation">[</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;affy&quot;</span>                                <br>  <span class="hljs-punctuation">[</span><span class="hljs-number">6</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;affyio&quot;</span>                              <br>  <span class="hljs-punctuation">[</span><span class="hljs-number">7</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;airway&quot;</span>  <br></code></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> unname<br><span class="hljs-keyword">function</span> <span class="hljs-punctuation">(</span>obj<span class="hljs-punctuation">,</span> force <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <br><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span><span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>obj<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>        <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>obj<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span><span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">dimnames</span><span class="hljs-punctuation">(</span>obj<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-operator">&amp;&amp;</span> <span class="hljs-punctuation">(</span>force <span class="hljs-operator">||</span> <span class="hljs-operator">!</span>is.data.frame<span class="hljs-punctuation">(</span>obj<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>        <span class="hljs-built_in">dimnames</span><span class="hljs-punctuation">(</span>obj<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">NULL</span><br>    obj<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><code>if (!is.null(dimnames(obj)) &amp;&amp; (force || !is.data.frame(obj)))          dimnames(obj) &lt;- NULL</code></p><p>这段代码的意思是：如果 <code>obj</code> 对象的维度名称（<code>dimnames</code>）不为空，并且 <code>force</code> 为真或者 <code>obj</code> 不是数据框（<code>data.frame</code>），那么就将 <code>obj</code> 的维度名称设为 <code>NULL</code>。换句话说，如果 <code>obj</code> 有维度名称，并且满足条件，就移除这些维度名称。</p><p><code>dimnames()</code> 用于获取或设置数据结构（如矩阵或数组）的维度名称（行名和列名）。<code>names()</code> 则用于获取或设置向量、列表、数据框的元素名称。简单来说，<code>dimnames()</code> 处理的是多维数据的维度标签，而 <code>names()</code> 处理的是单维数据的元素标签。</p>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>rm()原函数代码解读（下）</title>
    <link href="/2024/08/26/rm(2)/"/>
    <url>/2024/08/26/rm(2)/</url>
    
    <content type="html"><![CDATA[<h2 id="一、原函数"><a href="#一、原函数" class="headerlink" title="一、原函数"></a>一、原函数</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-keyword">function</span> <span class="hljs-punctuation">(</span>...<span class="hljs-punctuation">,</span> <span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> character<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> pos <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> envir <span class="hljs-operator">=</span> <span class="hljs-built_in">as.environment</span><span class="hljs-punctuation">(</span>pos<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>    inherits <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <br><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>...length<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>        dots <span class="hljs-operator">&lt;-</span> match.call<span class="hljs-punctuation">(</span>expand.dots <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>...<br>        <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span><span class="hljs-built_in">all</span><span class="hljs-punctuation">(</span>vapply<span class="hljs-punctuation">(</span>dots<span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-built_in">is.symbol</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">||</span> <span class="hljs-built_in">is.character</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>            <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> USE.NAMES <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>            stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;... must contain names or character strings&quot;</span><span class="hljs-punctuation">)</span><br>        <span class="hljs-built_in">list</span> <span class="hljs-operator">&lt;-</span> .Primitive<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;c&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">,</span> vapply<span class="hljs-punctuation">(</span>dots<span class="hljs-punctuation">,</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">,</span> <br>            <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>    .Internal<span class="hljs-punctuation">(</span>remove<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">,</span> envir<span class="hljs-punctuation">,</span> inherits<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>我现在发现，rm和vapply等等函数其实都是R的内置函数，前面的判断条件都是为了保证函数能够正常运行的。内置函数的源代码不能直接在控制台查看。</p><p>但是前面的这些控制条件的代码也是非常值得学习的。</p><h2 id="二、-逻辑运算符"><a href="#二、-逻辑运算符" class="headerlink" title="二、|| 逻辑运算符"></a>二、|| 逻辑运算符</h2><p>在 R 语言中，<code>||</code> 是逻辑运算符，用于执行逻辑“或”操作。与 <code>|</code>（元素级逻辑或）不同，<code>||</code> 是短路运算符，只用于处理长度为 1 的逻辑值，并在第一个条件为 <code>TRUE</code> 时停止评估后续条件。</p><p>具体来说：</p><ul><li><code>||</code> 会首先评估左边的条件。如果左边的条件为 <code>TRUE</code>，则整个表达式的结果为 <code>TRUE</code>，并且右边的条件不会被评估。这称为“短路”行为。</li><li>如果左边的条件为 <code>FALSE</code>，才会评估右边的条件。</li></ul><p>这种短路行为对于提高计算效率很有用，特别是在右边的条件可能涉及到昂贵或不必要的计算时。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R">x <span class="hljs-operator">&lt;-</span> <span class="hljs-literal">TRUE</span><br>y <span class="hljs-operator">&lt;-</span> stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;This will not be executed&quot;</span><span class="hljs-punctuation">)</span><br>result <span class="hljs-operator">&lt;-</span> x <span class="hljs-operator">||</span> y  <span class="hljs-comment"># 由于 x 为 TRUE，y 不会被评估，结果为 TRUE</span><br></code></pre></td></tr></table></figure><h2 id="三、vapply"><a href="#三、vapply" class="headerlink" title="三、vapply"></a>三、vapply</h2><p>vapply是将指定函数用在list中每一个元素上的函数。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> vapply<br><span class="hljs-keyword">function</span> <span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">,</span> FUN<span class="hljs-punctuation">,</span> FUN.VALUE<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">,</span> USE.NAMES <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <br><span class="hljs-punctuation">&#123;</span><br>    FUN <span class="hljs-operator">&lt;-</span> match.fun<span class="hljs-punctuation">(</span>FUN<span class="hljs-punctuation">)</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>is.vector<span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">)</span> <span class="hljs-operator">||</span> <span class="hljs-built_in">is.object</span><span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>        X <span class="hljs-operator">&lt;-</span> as.list<span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">)</span><br>    .Internal<span class="hljs-punctuation">(</span>vapply<span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">,</span> FUN<span class="hljs-punctuation">,</span> FUN.VALUE<span class="hljs-punctuation">,</span> USE.NAMES<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><code>lapply</code> returns a list of the same length as <code>X</code>, each element of which is the result of applying <code>FUN</code> to the corresponding element of <code>X</code>.</p><p><code>sapply</code> is a user-friendly version and wrapper of <code>lapply</code> by default returning a vector, matrix or, if <code>simplify = &quot;array&quot;</code>, an array if appropriate, by applying <code>simplify2array()</code>. <code>sapply(x, f, simplify = FALSE, USE.NAMES = FALSE)</code> is the same as <code>lapply(x, f)</code>.</p><p><code>vapply</code> is similar to <code>sapply</code>, but has a pre-specified type of return value, so it can be safer (and sometimes faster) to use.</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> lapply<br><span class="hljs-keyword">function</span> <span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">,</span> FUN<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">)</span> <br><span class="hljs-punctuation">&#123;</span><br>    FUN <span class="hljs-operator">&lt;-</span> match.fun<span class="hljs-punctuation">(</span>FUN<span class="hljs-punctuation">)</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>is.vector<span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">)</span> <span class="hljs-operator">||</span> <span class="hljs-built_in">is.object</span><span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>        X <span class="hljs-operator">&lt;-</span> as.list<span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">)</span><br>    .Internal<span class="hljs-punctuation">(</span>lapply<span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">,</span> FUN<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h2 id="四、sapply"><a href="#四、sapply" class="headerlink" title="四、sapply"></a>四、sapply</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> sapply<br><span class="hljs-keyword">function</span> <span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">,</span> FUN<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">,</span> simplify <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> USE.NAMES <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span> <br><span class="hljs-punctuation">&#123;</span><br>    FUN <span class="hljs-operator">&lt;-</span> match.fun<span class="hljs-punctuation">(</span>FUN<span class="hljs-punctuation">)</span><br>    answer <span class="hljs-operator">&lt;-</span> lapply<span class="hljs-punctuation">(</span>X <span class="hljs-operator">=</span> X<span class="hljs-punctuation">,</span> FUN <span class="hljs-operator">=</span> FUN<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">)</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>USE.NAMES <span class="hljs-operator">&amp;&amp;</span> <span class="hljs-built_in">is.character</span><span class="hljs-punctuation">(</span>X<span class="hljs-punctuation">)</span> <span class="hljs-operator">&amp;&amp;</span> <span class="hljs-built_in">is.null</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>answer<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>        <span class="hljs-built_in">names</span><span class="hljs-punctuation">(</span>answer<span class="hljs-punctuation">)</span> <span class="hljs-operator">&lt;-</span> X<br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span>isFALSE<span class="hljs-punctuation">(</span>simplify<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>        simplify2array<span class="hljs-punctuation">(</span>answer<span class="hljs-punctuation">,</span> higher <span class="hljs-operator">=</span> <span class="hljs-punctuation">(</span>simplify <span class="hljs-operator">==</span> <span class="hljs-string">&quot;array&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-keyword">else</span> answer<br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong><code>FUN &lt;- match.fun(FUN)</code></strong><br>将 <code>FUN</code> 转换为实际的函数对象。如果 <code>FUN</code> 是函数名（字符串），它会被转换为对应的函数。</p><p><strong><code>answer &lt;- lapply(X = X, FUN = FUN, ...)</code></strong><br>使用 <code>lapply</code> 对 <code>X</code> 的每个元素应用 <code>FUN</code>。<code>...</code> 表示可以传递额外的参数给 <code>FUN</code>。</p><p><strong><code>if (USE.NAMES &amp;&amp; is.character(X) &amp;&amp; is.null(names(answer))) names(answer) &lt;- X</code></strong><br>如果 <code>USE.NAMES</code> 为 <code>TRUE</code>，<code>X</code> 是字符型，并且 <code>answer</code> 还没有名称，则将 <code>X</code> 作为 <code>answer</code> 的名字。</p><p><strong><code>if (!isFALSE(simplify)) simplify2array(answer, higher = (simplify == &quot;array&quot;))</code></strong><br>如果 <code>simplify</code> 不是 <code>FALSE</code>，则使用 <code>simplify2array</code> 来简化结果为数组或矩阵。<code>simplify == &quot;array&quot;</code> 确定是否将结果简化为数组（当 <code>simplify</code> 等于 <code>&quot;array&quot;</code> 时）。</p><p><strong><code>else answer</code></strong><br>如果 <code>simplify</code> 为 <code>FALSE</code>，则返回原始的列表 <code>answer</code>。</p><h2 id="五、-和-逻辑运算符"><a href="#五、-和-逻辑运算符" class="headerlink" title="五、&amp;和&amp;&amp; 逻辑运算符"></a>五、&amp;和&amp;&amp; 逻辑运算符</h2><p>在 R 语言中，<code>&amp;&amp;</code> 是逻辑运算符，用于执行逻辑“与”操作（AND）。</p><p><code>&amp;&amp;</code> 用于逻辑“与”操作的短路版本，适用于单一的逻辑比较。</p><p><code>&amp;</code> 是元素级逻辑“与”操作，适用于向量化的逻辑比较，并且不会短路，即它会逐个元素进行比较。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-comment"># 使用 &amp;&amp;（短路运算）</span><br>x <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>y <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br><br>result <span class="hljs-operator">&lt;-</span> x <span class="hljs-operator">&amp;&amp;</span> y<br><span class="hljs-comment"># result 为 TRUE，因为 &amp;&amp; 只取第一个元素进行逻辑比较</span><br><br><span class="hljs-comment"># 使用 &amp;（元素级运算）</span><br>result <span class="hljs-operator">&lt;-</span> x <span class="hljs-operator">&amp;</span> y<br><span class="hljs-comment"># result 为 c(TRUE, FALSE)，逐元素比较 x 和 y</span><br></code></pre></td></tr></table></figure><h2 id="六、vapply-中-FUN-VALUE-为-NA"><a href="#六、vapply-中-FUN-VALUE-为-NA" class="headerlink" title="六、vapply 中 FUN.VALUE 为 NA"></a>六、vapply 中 FUN.VALUE 为 NA</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">vapply<span class="hljs-punctuation">(</span>dots<span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-built_in">is.symbol</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">||</span> <span class="hljs-built_in">is.character</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>       <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> USE.NAMES <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h3 id="参数解释"><a href="#参数解释" class="headerlink" title="参数解释"></a>参数解释</h3><ul><li>**<code>NA</code>**：这是 <code>vapply</code> 的 <code>FUN.VALUE</code> 参数，指定了函数返回值的预期类型。这里的 <code>NA</code> 表示一个缺失值（通常用于表示未指定或未知的值类型）。</li></ul><h3 id="FUN-VALUE-的作用"><a href="#FUN-VALUE-的作用" class="headerlink" title="FUN.VALUE 的作用"></a><code>FUN.VALUE</code> 的作用</h3><p>在 <code>vapply</code> 中，<code>FUN.VALUE</code> 是一个示例值，定义了 <code>vapply</code> 期望函数 <code>FUN</code> 返回的结果的类型。<code>vapply</code> 使用 <code>FUN.VALUE</code> 来确定最终结果的结构。<code>NA</code> 在这种情况下通常用于表示期望的结果类型为逻辑型向量，因为函数 <code>is.symbol</code> 和 <code>is.character</code> 都返回逻辑值。</p><h3 id="为什么使用-NA"><a href="#为什么使用-NA" class="headerlink" title="为什么使用 NA"></a>为什么使用 <code>NA</code></h3><p>在 <code>vapply</code> 中使用 <code>NA</code> 来指定返回值的类型可以用于省略对具体类型的明确定义。如果你确定函数的返回值是逻辑型的，那么可以使用 <code>logical(1)</code> 来明确指定。例如：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">vapply<span class="hljs-punctuation">(</span>dots<span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-built_in">is.symbol</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">||</span> <span class="hljs-built_in">is.character</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> logical<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> USE.NAMES <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>这里，<code>logical(1)</code> 指定了返回值的类型为长度为 1 的逻辑向量，而 <code>NA</code> 通常在示例中用来表示未具体化的类型。</p><h2 id="七、rm中的逻辑判断"><a href="#七、rm中的逻辑判断" class="headerlink" title="七、rm中的逻辑判断"></a>七、rm中的逻辑判断</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span><span class="hljs-built_in">all</span><span class="hljs-punctuation">(</span>vapply<span class="hljs-punctuation">(</span>dots<span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-built_in">is.symbol</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">||</span> <span class="hljs-built_in">is.character</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>            <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> USE.NAMES <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>            stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;... must contain names or character strings&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>所有的dots都是symbol或者character，那么all()返回TRUE，!all()为FALSE，stop函数不执行，如果有一个不是symbol或者character，那么all返回F，!all()为T，stop函数执行。</p><h2 id="八、stop函数"><a href="#八、stop函数" class="headerlink" title="八、stop函数"></a>八、stop函数</h2><p>在 R 语言中，<code>stop</code> 函数用于生成错误消息并停止函数的执行。它常用于在检测到问题或不符合条件时，向用户报告错误并终止当前的计算过程。<code>stop</code> 函数是错误处理的核心函数之一，帮助确保代码在遇到问题时能够及时中断，并提供有用的错误信息。</p><h3 id="函数语法"><a href="#函数语法" class="headerlink" title="函数语法"></a>函数语法</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">stop<span class="hljs-punctuation">(</span>...<span class="hljs-punctuation">,</span> call. <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">,</span> domain <span class="hljs-operator">=</span> <span class="hljs-literal">NULL</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><h3 id="参数解释-1"><a href="#参数解释-1" class="headerlink" title="参数解释"></a>参数解释</h3><ul><li>**<code>...</code>**：要传递给 <code>stop</code> 函数的错误消息。可以是字符串或任何其他类型的对象，它们会被转换为字符串并作为错误消息显示。</li><li>**<code>call.</code>**：逻辑值，表示是否在错误消息中显示出错的调用栈。默认值是 <code>TRUE</code>，表示在错误消息中包含函数调用信息，这对于调试非常有用。</li><li>**<code>domain</code>**：用于国际化的参数，通常不需要修改。它指定了错误消息的翻译域，默认是 <code>NULL</code>，表示使用 R 的默认翻译设置。</li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><ol><li><p><strong>基本使用</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs R">x <span class="hljs-operator">&lt;-</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><br><span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>x <span class="hljs-operator">&lt;</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;x cannot be negative&quot;</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>在这个示例中，如果 <code>x</code> 小于 0，<code>stop</code> 会生成一个错误消息 <code>&quot;x cannot be negative&quot;</code> 并终止程序的执行。</p><p>注意，这里没有在错误信息里包含调用堆栈信息，因为这里没有错误，只是停止执行了。</p></li><li><p><strong>带有调试信息的错误</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R">my_function <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>x <span class="hljs-operator">&lt;</span> <span class="hljs-number">0</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>        stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;x cannot be negative&quot;</span><span class="hljs-punctuation">,</span> call. <span class="hljs-operator">=</span> <span class="hljs-literal">TRUE</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>    <span class="hljs-built_in">return</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">sqrt</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br><br>my_function<span class="hljs-punctuation">(</span><span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>这里，<code>call. = TRUE</code> 会在错误消息中包含调用堆栈信息，帮助用户了解错误发生的位置。</p></li><li><p><strong>多参数错误消息</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs R">x <span class="hljs-operator">&lt;-</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><br>stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;The value of x is &quot;</span><span class="hljs-punctuation">,</span> x<span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;. It must be non-negative.&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><code>stop</code> 可以接受多个参数，这些参数会被自动拼接成一个完整的错误消息。</p></li></ol><h2 id="九、调用堆栈信息"><a href="#九、调用堆栈信息" class="headerlink" title="九、调用堆栈信息"></a>九、调用堆栈信息</h2><p>调用堆栈信息（Call Stack Information）是指在程序执行过程中，函数调用的记录。这些记录展示了程序执行时的函数调用路径，从最初的调用到当前的函数。调用堆栈信息对于调试和错误排查非常有用，因为它提供了错误发生时的上下文和函数调用的顺序。</p><h3 id="调用堆栈的基本概念"><a href="#调用堆栈的基本概念" class="headerlink" title="调用堆栈的基本概念"></a>调用堆栈的基本概念</h3><ol><li><strong>调用堆栈的结构</strong>：<ul><li><strong>栈帧</strong>：每个函数调用在调用堆栈中被称为一个“栈帧”或“调用帧”。每个栈帧包含了函数的调用信息，包括参数值、局部变量、返回地址等。</li><li><strong>栈的顺序</strong>：调用堆栈的结构是一个“栈”数据结构，后进先出（LIFO）。这意味着最上面的栈帧是当前正在执行的函数，下面的栈帧是调用该函数的函数，依此类推。</li></ul></li><li><strong>函数调用的顺序</strong>：<ul><li>当函数 A 调用函数 B，函数 B 的栈帧会被推到调用堆栈的顶部。</li><li>当函数 B 执行完成并返回，B 的栈帧会被从堆栈中弹出，控制返回到函数 A。</li></ul></li><li><strong>错误的调用堆栈信息</strong>：<ul><li>当程序遇到错误时，调用堆栈信息可以帮助开发人员理解错误发生的上下文。例如，错误可能发生在某个深层嵌套的函数中，通过调用堆栈可以追溯到最初的函数调用。</li></ul></li></ol><h3 id="在-R-中查看调用堆栈信息"><a href="#在-R-中查看调用堆栈信息" class="headerlink" title="在 R 中查看调用堆栈信息"></a>在 R 中查看调用堆栈信息</h3><p>在 R 中，调用堆栈信息可以通过几个方法查看：</p><ol><li><p>**使用 <code>traceback()</code>**：</p><ul><li><code>traceback()</code> 函数显示最近发生的错误的调用堆栈。它可以帮助你查看错误发生时的函数调用路径。</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-attribute">r</span>复制代码my_function &lt;- <span class="hljs-built_in">function</span>(x) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-attribute">x</span> &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-selector-tag">stop</span>(<span class="hljs-string">&quot;x cannot be negative&quot;</span>)<br>    &#125;<br>    <span class="hljs-built_in">sqrt</span>(<span class="hljs-attribute">x</span>)<br>&#125;<br><br><span class="hljs-built_in">tryCatch</span>(&#123;<br>    <span class="hljs-built_in">my_function</span>(-<span class="hljs-number">1</span>)<br>&#125;, error = <span class="hljs-built_in">function</span>(e) &#123;<br>    <span class="hljs-built_in">traceback</span>()<br>&#125;)<br></code></pre></td></tr></table></figure><p>在这个例子中，<code>traceback()</code> 会显示 <code>my_function</code> 调用的堆栈信息，帮助了解错误发生的上下文。</p></li><li><p><strong>在错误消息中</strong>：</p><ul><li>默认情况下，R 的 <code>stop</code> 函数在错误消息中包含调用堆栈信息。如果你没有设置 <code>call. = FALSE</code>，调用堆栈信息会自动包含在错误输出中。</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-attribute">r</span>复制代码my_function &lt;- <span class="hljs-built_in">function</span>(x) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-attribute">x</span> &lt; <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-selector-tag">stop</span>(<span class="hljs-string">&quot;x cannot be negative&quot;</span>)<br>    &#125;<br>    <span class="hljs-built_in">sqrt</span>(<span class="hljs-attribute">x</span>)<br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">my_function</span><span class="hljs-params">(-<span class="hljs-number">1</span>)</span></span><br></code></pre></td></tr></table></figure><p>如果你直接在控制台运行 <code>my_function(-1)</code>，R 会显示错误消息和调用堆栈信息。</p></li><li><p><strong>使用调试工具</strong>：</p><ul><li>调试工具（如 <code>debug()</code>, <code>trace()</code> 和 <code>browser()</code>）可以提供更详细的调用堆栈信息，在调试复杂问题时非常有用。</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">r</span>复制代码<span class="hljs-built_in">debug</span>(my_function)<br><span class="hljs-built_in">my_function</span>(-<span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p><code>debug()</code> 会进入调试模式，逐步执行函数并显示调用堆栈信息。</p></li></ol><h2 id="十、倒数第二行"><a href="#十、倒数第二行" class="headerlink" title="十、倒数第二行"></a>十、倒数第二行</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-built_in">list</span> <span class="hljs-operator">&lt;-</span> .Primitive<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;c&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">,</span> vapply<span class="hljs-punctuation">(</span>dots<span class="hljs-punctuation">,</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><ol><li><p><strong><code>.Primitive(&quot;c&quot;)</code></strong>:</p><ul><li><code>.Primitive</code> 是 R 中的一个内部函数，用于表示 R 语言的原始（基础）函数。</li><li><code>&quot;c&quot;</code> 是 <code>c()</code> 函数的名字。<code>c()</code> 函数在 R 中用于将多个元素合并成一个向量。通过 <code>.Primitive(&quot;c&quot;)</code>，你可以直接调用 <code>c()</code> 函数。</li><li>使用 <code>.Primitive(&quot;c&quot;)</code> 可以避免函数的额外包装或附加行为，直接操作底层的函数实现。</li></ul></li><li><p><strong><code>vapply(dots, as.character, &quot;&quot;)</code></strong>:</p><ul><li><code>vapply</code> 是一个 R 函数，用于将函数应用于列表或向量的每个元素，并将结果简化为指定类型的对象。</li><li><code>dots</code> 是要操作的列表或向量。</li><li><code>as.character</code> 是应用于 <code>dots</code> 中每个元素的函数，将每个元素转换为字符型。</li><li><strong><code>&quot;&quot;</code> 是 <code>vapply</code> 的 <code>FUN.VALUE</code> 参数，指定了 <code>as.character</code> 函数返回值的类型（在这里是字符型的空字符串）。它表示 <code>vapply</code> 期望的结果是一个字符型的向量。</strong></li></ul></li><li><p><strong><code>list &lt;- .Primitive(&quot;c&quot;)(list, vapply(dots, as.character, &quot;&quot;))</code></strong>:</p><ul><li>这行代码的目的是将 <code>list</code> 和通过 <code>vapply</code> 转换后的 <code>dots</code> 的结果合并成一个新的列表。</li><li><code>vapply(dots, as.character, &quot;&quot;)</code> 处理了 <code>dots</code> 中的每个元素，并将其转换为字符型向量。</li><li><code>.Primitive(&quot;c&quot;)(list, vapply(dots, as.character, &quot;&quot;))</code> 调用 <code>c()</code> 函数将 <code>list</code> 和转换后的结果连接起来，生成一个新的列表。</li></ul></li></ol><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>假设 <code>dots</code> 是一个包含多个对象的列表，我们想将这些对象转换为字符型并将其附加到现有的 <code>list</code> 中：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-comment"># 示例数据</span><br>dots <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;three&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">)</span><br><span class="hljs-built_in">list</span> <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span><span class="hljs-string">&quot;a&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;b&quot;</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-comment"># 使用 vapply 和 .Primitive(&quot;c&quot;) 进行合并</span><br><span class="hljs-built_in">list</span> <span class="hljs-operator">&lt;-</span> .Primitive<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;c&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">,</span> vapply<span class="hljs-punctuation">(</span>dots<span class="hljs-punctuation">,</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">,</span> <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>print<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p><strong>解释：</strong></p><ul><li><code>vapply(dots, as.character, &quot;&quot;)</code> 将 <code>dots</code> 中的每个元素转换为字符型，并返回一个字符型向量 <code>c(&quot;1&quot;, &quot;2&quot;, &quot;three&quot;, &quot;4&quot;)</code>。</li><li><code>.Primitive(&quot;c&quot;)(list, c(&quot;1&quot;, &quot;2&quot;, &quot;three&quot;, &quot;4&quot;))</code> 将现有的 <code>list</code> 和这个字符型向量合并，生成一个新的列表 <code>list</code>。</li></ul><p><strong>结果：</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs r"><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;a&quot;</span><br><br><span class="hljs-punctuation">[[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;b&quot;</span><br><br><span class="hljs-punctuation">[[</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;1&quot;</span><br><br><span class="hljs-punctuation">[[</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;2&quot;</span><br><br><span class="hljs-punctuation">[[</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;three&quot;</span><br><br><span class="hljs-punctuation">[[</span><span class="hljs-number">6</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;4&quot;</span><br></code></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><code>.Primitive(&quot;c&quot;)</code> 是对基础 <code>c()</code> 函数的直接调用，避免了额外的包装。</li><li><code>vapply(dots, as.character, &quot;&quot;)</code> 将 <code>dots</code> 中的每个元素转换为字符型，并简化为一个字符型向量。</li><li>结合这两个部分，代码实现了将现有列表 <code>list</code> 和转换后的 <code>dots</code> 合并为一个新的列表。</li></ul><h2 id="十一、最后一行"><a href="#十一、最后一行" class="headerlink" title="十一、最后一行"></a>十一、最后一行</h2><p><code>.Internal(remove(list, envir, inherits))</code> 是 <code>remove</code> 函数在底层的实现调用，处理对象的实际删除操作。</p>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/08/25/hello-world/"/>
    <url>/2024/08/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>rm()原函数代码解读（上）</title>
    <link href="/2024/08/25/rm/"/>
    <url>/2024/08/25/rm/</url>
    
    <content type="html"><![CDATA[<h2 id="一、原函数"><a href="#一、原函数" class="headerlink" title="一、原函数"></a>一、原函数</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-keyword">function</span> <span class="hljs-punctuation">(</span>...<span class="hljs-punctuation">,</span> <span class="hljs-built_in">list</span> <span class="hljs-operator">=</span> character<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> pos <span class="hljs-operator">=</span> <span class="hljs-operator">-</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> envir <span class="hljs-operator">=</span> <span class="hljs-built_in">as.environment</span><span class="hljs-punctuation">(</span>pos<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>    inherits <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span> <br><span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span>...length<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>        dots <span class="hljs-operator">&lt;-</span> match.call<span class="hljs-punctuation">(</span>expand.dots <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>...<br>        <span class="hljs-keyword">if</span> <span class="hljs-punctuation">(</span><span class="hljs-operator">!</span><span class="hljs-built_in">all</span><span class="hljs-punctuation">(</span>vapply<span class="hljs-punctuation">(</span>dots<span class="hljs-punctuation">,</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-built_in">is.symbol</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span> <span class="hljs-operator">||</span> <span class="hljs-built_in">is.character</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> <br>            <span class="hljs-literal">NA</span><span class="hljs-punctuation">,</span> USE.NAMES <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span> <br>            stop<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;... must contain names or character strings&quot;</span><span class="hljs-punctuation">)</span><br>        <span class="hljs-built_in">list</span> <span class="hljs-operator">&lt;-</span> .Primitive<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;c&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">,</span> vapply<span class="hljs-punctuation">(</span>dots<span class="hljs-punctuation">,</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">,</span> <br>            <span class="hljs-string">&quot;&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br>    <span class="hljs-punctuation">&#125;</span><br>    .Internal<span class="hljs-punctuation">(</span>remove<span class="hljs-punctuation">(</span><span class="hljs-built_in">list</span><span class="hljs-punctuation">,</span> envir<span class="hljs-punctuation">,</span> inherits<span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p><strong>function (…, list &#x3D; character(), pos &#x3D; -1, envir &#x3D; as.environment(pos), inherits &#x3D; FALSE)</strong>: 这是一个函数定义，有几个参数：</p><ul><li><code>...</code> 允许传递任意数量的参数。</li><li><code>list</code> 被初始化为一个空的字符向量 (<code>character()</code>).</li><li><code>pos</code> 默认为 <code>-1</code>，在 R 中通常表示全局环境。</li><li><code>envir</code> 默认为由 <code>pos</code> 指定的环境，通过 <code>as.environment()</code> 转换为环境对象。</li><li><code>inherits</code> 是一个逻辑参数，指示是否在父环境中进行查找。</li></ul><p><strong>if (…length())</strong>: 这行代码检查是否有传递任何 <code>...</code> 参数。<code>...length()</code> 用于获取传递的参数数量。</p><blockquote><h3 id="参数"><a href="#参数" class="headerlink" title="... 参数"></a><code>...</code> 参数</h3><p><code>...</code> 在 R 函数中用于接收任意数量的参数。这些参数可以是任何类型的对象。</p><h3 id="length"><a href="#length" class="headerlink" title="...length()"></a><code>...length()</code></h3><p><code>...length()</code> 是一个 R 内部的特殊功能，它用来获取 <code>...</code> 中参数的个数。虽然在 R 的标准文档中，通常使用 <code>length(list(...))</code> 来获取 <code>...</code> 参数的数量，但 <code>...length()</code> 是一个内部函数，用于更直接地获取这个数量。</p><p>在正常的函数定义中，<code>...</code> 的参数被视为一个捕获所有附加参数的列表。为了检查 <code>...</code> 中是否有参数，你可以使用 <code>...length()</code> 这个内部函数来直接获得它的长度。</p></blockquote><blockquote><p> <code>if (...length())</code> 的工作方式：</p><ol><li><strong>检查 <code>...</code> 的长度</strong>：<ul><li><code>...length()</code> 返回 <code>...</code> 参数的个数。</li><li>如果返回值大于零，表示 <code>...</code> 中有参数。</li></ul></li><li><strong>条件判断</strong>：<ul><li><code>if (...length())</code> 用来检查 <code>...</code> 中是否有传递的参数。如果 <code>...</code> 中有参数，<code>...length()</code> 将返回一个大于零的值，这样 <code>if</code> 条件成立。</li><li>如果 <code>...</code> 中没有参数，<code>...length()</code> 将返回零，<code>if</code> 条件不成立，程序将跳过相关的代码块。<code>match.call</code> 函数</li></ul></li></ol></blockquote><p><code>match.call</code> 是一个函数，它用于获取当前函数调用的表达式。这个函数返回一个包含函数调用的语言对象（<code>call</code> 对象），这个对象描述了函数的名称、参数及其对应的值。它可以帮助你查看函数是如何被调用的，包括所有传递的参数及其值。</p><h3 id="expand-dots-参数"><a href="#expand-dots-参数" class="headerlink" title="expand.dots 参数"></a><code>expand.dots</code> 参数</h3><p><code>expand.dots</code> 是 <code>match.call</code> 函数的一个参数。它控制 <code>...</code> （省略号）参数的处理方式：</p><ul><li>**<code>expand.dots = TRUE</code>**（默认值）：<code>...</code> 参数会被展开，并被包含在 <code>call</code> 对象中。例如，如果你传递了 <code>a, b</code> 作为 <code>...</code> 的参数，它们会被展开并作为独立的参数显示。</li><li>**<code>expand.dots = FALSE</code>**：<code>...</code> 参数不会被展开，而是作为 <code>...</code> 保持在 <code>call</code> 对象中。这种设置可以让你查看 <code>...</code> 参数的原始形式，作为一个 <code>...</code> 表达式存在于 <code>call</code> 对象中。</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs R">foo <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>x<span class="hljs-punctuation">,</span> y<span class="hljs-punctuation">,</span> ...<span class="hljs-punctuation">)</span> <span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-built_in">call</span> <span class="hljs-operator">&lt;-</span> match.call<span class="hljs-punctuation">(</span>expand.dots <span class="hljs-operator">=</span> <span class="hljs-literal">FALSE</span><span class="hljs-punctuation">)</span><br>  print<span class="hljs-punctuation">(</span><span class="hljs-built_in">call</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br><br>foo<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> a <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> b <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> d <span class="hljs-operator">=</span> <span class="hljs-string">&quot;hello&quot;</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>当调用 <code>foo(1, 2, a = 3, b = 4)</code> 时，<code>match.call(expand.dots = FALSE)</code> 会返回：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs R">foo<span class="hljs-punctuation">(</span>x <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> y <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> ... <span class="hljs-operator">=</span> pairlist<span class="hljs-punctuation">(</span>a <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> b <span class="hljs-operator">=</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">c</span><span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">,</span> d <span class="hljs-operator">=</span> <span class="hljs-string">&quot;hello&quot;</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>这个返回值表示 <code>...</code> 参数在调用中是如何被表达的，即作为一个整体存在。</p><h3 id="list"><a href="#list" class="headerlink" title="list"></a><code>list</code></h3><ul><li><p><strong>结构</strong>：<code>list</code> 是 R 中一个非常灵活的数据结构，可以包含不同类型的元素（如数字、字符、向量、数据框等）。它的元素可以是不同类型的对象，而且可以通过名称访问每个元素。</p></li><li><p><strong>用法</strong>：<code>list</code> 通常用于需要存储不同类型的数据或者复杂数据结构的情况。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-attribute">r</span><br>复制代码<br>my_list &lt;- <span class="hljs-built_in">list</span>(<span class="hljs-selector-tag">a</span> = <span class="hljs-number">1</span>, <span class="hljs-selector-tag">b</span> = <span class="hljs-string">&quot;hello&quot;</span>, c = <span class="hljs-number">3</span>:<span class="hljs-number">5</span>)<br></code></pre></td></tr></table></figure></li></ul><h3 id="pairlist"><a href="#pairlist" class="headerlink" title="pairlist"></a><code>pairlist</code></h3><ul><li><p><strong>结构</strong>：<code>pairlist</code> 是 R 的一个内部数据结构，主要用于存储函数的参数和其他类似的任务。它由一系列的“对”（pair）组成，每对包含一个名字和一个值。这些对连接成一个链表结构。</p></li><li><p><strong>特点</strong>：<code>pairlist</code> 是一个链表，它的每个元素都是一个包含名称和值的对。<code>pairlist</code> 通常用于处理函数调用中的参数，因为它能有效地处理参数的传递和名字。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs scss"><span class="hljs-attribute">r</span>复制代码# pairlist example (conceptual)<br>pairlist_example &lt;- <span class="hljs-built_in">pairlist</span>(a = <span class="hljs-number">1</span>, b = <span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure></li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> my_list <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">list</span><span class="hljs-punctuation">(</span>a <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> b <span class="hljs-operator">=</span> <span class="hljs-string">&quot;hello&quot;</span><span class="hljs-punctuation">,</span> <span class="hljs-built_in">c</span> <span class="hljs-operator">=</span> <span class="hljs-number">3</span><span class="hljs-operator">:</span><span class="hljs-number">5</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> my_list<br><span class="hljs-operator">$</span>a<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">1</span><br><br><span class="hljs-operator">$</span>b<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;hello&quot;</span><br><br><span class="hljs-operator">$</span><span class="hljs-built_in">c</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">3</span> <span class="hljs-number">4</span> <span class="hljs-number">5</span><br><br><span class="hljs-operator">&gt;</span> <span class="hljs-comment"># pairlist example (conceptual)</span><br><span class="hljs-operator">&gt;</span> pairlist_example <span class="hljs-operator">&lt;-</span> pairlist<span class="hljs-punctuation">(</span>a <span class="hljs-operator">=</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span> b <span class="hljs-operator">=</span> <span class="hljs-number">2</span><span class="hljs-punctuation">)</span><br><span class="hljs-operator">&gt;</span> <br><span class="hljs-operator">&gt;</span> pairlist_example<br><span class="hljs-operator">$</span>a<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">1</span><br><br><span class="hljs-operator">$</span>b<br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure><p>这样看着都一样。</p><p>Pairlist objects are similar to Lisp’s dotted-pair lists. They are used extensively in the internals of R, but are rarely visible in interpreted code, although they are returned by formals, and can be created by (e.g.) the pairlist function.</p><p>Pairlists are handled in the R language in exactly the same way as generic vectors (“lists”). In particular, elements are accessed using the same [[]] syntax. The use of pairlists is deprecated since generic vectors are usually more efficient to use. When an internal pairlist is accessed from R it is generally (including when subsetted) converted to a generic vector.</p><p>也就是说pairlist和list在R中的处理方式完全相同，虽然在R的内部被广泛使用，但是这不意味着它在性能上表现更好。stack overflow上说如果不是考虑C语言的话，不需要考虑这个问题。</p><blockquote><ol><li><ul><li></li></ul></li></ol></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs R">test <span class="hljs-operator">&lt;-</span> <span class="hljs-keyword">function</span><span class="hljs-punctuation">(</span>...<span class="hljs-punctuation">)</span><span class="hljs-punctuation">&#123;</span><br>  num <span class="hljs-operator">&lt;-</span> ...length<span class="hljs-punctuation">(</span><span class="hljs-punctuation">)</span><br>  expandF <span class="hljs-operator">&lt;-</span> match.call<span class="hljs-punctuation">(</span>expand.dots <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span><br>  expandF. <span class="hljs-operator">&lt;-</span> match.call<span class="hljs-punctuation">(</span>expand.dots <span class="hljs-operator">=</span> <span class="hljs-built_in">F</span><span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>...<br>  expandF2 <span class="hljs-operator">&lt;-</span> <span class="hljs-built_in">as.character</span><span class="hljs-punctuation">(</span>expandF.<span class="hljs-punctuation">)</span><br>  expandT <span class="hljs-operator">&lt;-</span> match.call<span class="hljs-punctuation">(</span>expand.dots <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><br>  expandT. <span class="hljs-operator">&lt;-</span> match.call<span class="hljs-punctuation">(</span>expand.dots <span class="hljs-operator">=</span> <span class="hljs-built_in">T</span><span class="hljs-punctuation">)</span><span class="hljs-operator">$</span>...<br>  print<span class="hljs-punctuation">(</span>num<span class="hljs-punctuation">)</span><br>  cat<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;\n&quot;</span><span class="hljs-punctuation">)</span><br>  print<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;expand.dots = F&quot;</span><span class="hljs-punctuation">)</span><br>  print<span class="hljs-punctuation">(</span>expandF<span class="hljs-punctuation">)</span><br>  cat<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;\n&quot;</span><span class="hljs-punctuation">)</span> <br>  print<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;(expand.dots = F)$...&quot;</span><span class="hljs-punctuation">)</span><br>  print<span class="hljs-punctuation">(</span>expandF.<span class="hljs-punctuation">)</span><br>  print<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;as.character,expand.dots = F$...&quot;</span><span class="hljs-punctuation">)</span><br>  print<span class="hljs-punctuation">(</span>expandF2<span class="hljs-punctuation">)</span><br>  cat<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;\n&quot;</span><span class="hljs-punctuation">)</span><br>  print<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;expand.dots = T&quot;</span><span class="hljs-punctuation">)</span><br>  print<span class="hljs-punctuation">(</span>expandT<span class="hljs-punctuation">)</span><br>  cat<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;\n&quot;</span><span class="hljs-punctuation">)</span><br>  print<span class="hljs-punctuation">(</span><span class="hljs-string">&quot;(expand.dots = T)$...&quot;</span><span class="hljs-punctuation">)</span><br>  print<span class="hljs-punctuation">(</span>expandT.<span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">&#125;</span><br>test<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br></code></pre></td></tr></table></figure><p>输出</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> test<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span><span class="hljs-number">2</span><span class="hljs-punctuation">,</span><span class="hljs-number">3</span><span class="hljs-punctuation">,</span><span class="hljs-number">4</span><span class="hljs-punctuation">,</span><span class="hljs-number">5</span><span class="hljs-punctuation">,</span><span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">6</span><br><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;expand.dots = F&quot;</span><br>test<span class="hljs-punctuation">(</span>... <span class="hljs-operator">=</span> pairlist<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;(expand.dots = F)$...&quot;</span><br><span class="hljs-punctuation">[[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">1</span><br><br><span class="hljs-punctuation">[[</span><span class="hljs-number">2</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">2</span><br><br><span class="hljs-punctuation">[[</span><span class="hljs-number">3</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">3</span><br><br><span class="hljs-punctuation">[[</span><span class="hljs-number">4</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">4</span><br><br><span class="hljs-punctuation">[[</span><span class="hljs-number">5</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">5</span><br><br><span class="hljs-punctuation">[[</span><span class="hljs-number">6</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-number">6</span><br><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;as.character,expand.dots = F$...&quot;</span><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;1&quot;</span> <span class="hljs-string">&quot;2&quot;</span> <span class="hljs-string">&quot;3&quot;</span> <span class="hljs-string">&quot;4&quot;</span> <span class="hljs-string">&quot;5&quot;</span> <span class="hljs-string">&quot;6&quot;</span><br><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;expand.dots = T&quot;</span><br>test<span class="hljs-punctuation">(</span><span class="hljs-number">1</span><span class="hljs-punctuation">,</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span> <span class="hljs-number">3</span><span class="hljs-punctuation">,</span> <span class="hljs-number">4</span><span class="hljs-punctuation">,</span> <span class="hljs-number">5</span><span class="hljs-punctuation">,</span> <span class="hljs-number">6</span><span class="hljs-punctuation">)</span><br><br><span class="hljs-punctuation">[</span><span class="hljs-number">1</span><span class="hljs-punctuation">]</span> <span class="hljs-string">&quot;(expand.dots = T)$...&quot;</span><br><span class="hljs-literal">NULL</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>设置RStudio语言默认为英文</title>
    <link href="/2024/08/25/20240825%E8%AE%BE%E7%BD%AERStudio%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%B8%BA%E8%8B%B1%E6%96%87/"/>
    <url>/2024/08/25/20240825%E8%AE%BE%E7%BD%AERStudio%E6%8F%90%E7%A4%BA%E8%AF%8D%E4%B8%BA%E8%8B%B1%E6%96%87/</url>
    
    <content type="html"><![CDATA[<ul><li>修改RConsole文件</li><li>找到“R\R-4.4.1\etc\RConsole”文件，修改RConsole这个文件lang 选项为<strong>languange &#x3D; en</strong></li><li>修改后，重新启动RStudio</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>更新Github Personal Access Token</title>
    <link href="/2024/08/25/20240825%E5%9C%A8R%E4%B8%AD%E4%BD%BF%E7%94%A8GitHub%20Personal%20Access%20Token/"/>
    <url>/2024/08/25/20240825%E5%9C%A8R%E4%B8%AD%E4%BD%BF%E7%94%A8GitHub%20Personal%20Access%20Token/</url>
    
    <content type="html"><![CDATA[<p>用R下载github上的R包失败了，是我的令牌过期了。</p><p>报错如下：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs R"><span class="hljs-operator">&gt;</span> remotes<span class="hljs-operator">::</span>install_github<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;chris-mcginnis-ucsf/DoubletFinder&#x27;</span><span class="hljs-punctuation">)</span><br>Using github PAT from envvar GITHUB_PAT. Use `gitcreds::gitcreds_set()` and unset GITHUB_PAT <span class="hljs-keyword">in</span> .Renviron <span class="hljs-punctuation">(</span>or elsewhere<span class="hljs-punctuation">)</span> <span class="hljs-keyword">if</span> you want to use the more secure git credential store instead.<br>Error<span class="hljs-operator">:</span> Failed to install <span class="hljs-string">&#x27;unknown package&#x27;</span> from GitHub<span class="hljs-operator">:</span><br>  HTTP error <span class="hljs-number">401.</span><br>  Bad credentials<br><br>  Rate limit remaining<span class="hljs-operator">:</span> <span class="hljs-number">51</span><span class="hljs-operator">/</span><span class="hljs-number">60</span><br>  Rate limit reset at<span class="hljs-operator">:</span> <span class="hljs-number">2024</span><span class="hljs-operator">-</span><span class="hljs-number">08</span><span class="hljs-operator">-</span><span class="hljs-number">25</span> <span class="hljs-number">14</span><span class="hljs-operator">:</span><span class="hljs-number">46</span><span class="hljs-operator">:</span><span class="hljs-number">14</span> UTC<br></code></pre></td></tr></table></figure><p>然后去github，Developer Settings, Personal access tokens, Tokens (classic)。发现我的tooken已经过期了。重新生成令牌，选择repo权限。</p><p>一开始去R包etc下新建.Renviron，但也没用，这里应该是没有把R加入环境变量。</p><p>然后我按照报错信息里的，用Sys.getenv(“GITHUB_PAT”)看了下，还是老的令牌，然后用Sys.setenv()，根据提示，选择GITHUB_PAT，Sys.setenv(“GITHUB_PAT” &#x3D; “my_token”)，就可以了，不放心又用Sys.getenv看了下，确实改好了。</p><p>再去github下载就没问题了。然后运行结果的开头如下，后面就是正常的安装了</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs R">remotes<span class="hljs-operator">::</span>install_github<span class="hljs-punctuation">(</span><span class="hljs-string">&#x27;chris-mcginnis-ucsf/DoubletFinder&#x27;</span><span class="hljs-punctuation">)</span><br>Using github PAT from envvar GITHUB_PAT. Use `gitcreds::gitcreds_set()` and unset GITHUB_PAT <span class="hljs-keyword">in</span> .Renviron <span class="hljs-punctuation">(</span>or elsewhere<span class="hljs-punctuation">)</span> <span class="hljs-keyword">if</span> you want to use the more secure git credential store instead.<br>Downloading GitHub repo chris<span class="hljs-operator">-</span>mcginnis<span class="hljs-operator">-</span>ucsf<span class="hljs-operator">/</span>DoubletFinder<span class="hljs-operator">@</span>HEAD<br>These packages have more recent versions available.<br>It is recommended to update <span class="hljs-built_in">all</span> of them.<br>Which would you like to update<span class="hljs-operator">?</span><br><br><span class="hljs-number">1</span><span class="hljs-operator">:</span> All                           <br><span class="hljs-number">2</span><span class="hljs-operator">:</span> CRAN packages only            <br><span class="hljs-number">3</span><span class="hljs-operator">:</span> None                          <br><span class="hljs-number">4</span><span class="hljs-operator">:</span> bitops <span class="hljs-punctuation">(</span><span class="hljs-number">1.0</span><span class="hljs-operator">-</span><span class="hljs-number">7</span> <span class="hljs-operator">-&gt;</span> <span class="hljs-number">1.0</span><span class="hljs-operator">-</span><span class="hljs-number">8</span><span class="hljs-punctuation">)</span> <span class="hljs-punctuation">[</span>CRAN<span class="hljs-punctuation">]</span><br><br>Enter one or more numbers<span class="hljs-punctuation">,</span> or an empty line to skip updates<span class="hljs-operator">:</span> <br></code></pre></td></tr></table></figure><p>所以前面的提示并不是问题所在，设置好系统环境里的GITHUB令牌才是关键。</p>]]></content>
    
    
    
    <tags>
      
      <tag>R</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+Github 搭建网站</title>
    <link href="/2024/08/23/Hexo%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"/>
    <url>/2024/08/23/Hexo%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<p>依旧是遵循这篇知乎：<a href="[使用 Hexo+GitHub 搭建个人免费博客教程（小白向） - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/60578464)" title="使用 Hexo+GitHub 搭建个人免费博客教程（小白向）">使用 Hexo+GitHub 搭建个人免费博客教程（小白向）</a>的流程，但是我要补充一些我遇到的问题和解决方案。</p><h2 id="一、准备"><a href="#一、准备" class="headerlink" title="一、准备"></a>一、准备</h2><h3 id="注册github账号"><a href="#注册github账号" class="headerlink" title="注册github账号"></a>注册github账号</h3><h3 id="下载nodejs。https-nodejs-org-zh-cn"><a href="#下载nodejs。https-nodejs-org-zh-cn" class="headerlink" title="下载nodejs。https://nodejs.org/zh-cn"></a>下载nodejs。<a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></h3><ul><li>我是windows系统，在官网下载安装包</li><li>我没有装在C盘，装在E:&#x2F;Web文件夹下了，所以要改环境变量，加入nodejs，链接到根目录npm</li><li>nodejs可能还是在C盘方便，但是我不知道为什么删不了Web文件夹下的nodejs</li></ul><h3 id="下载Git。https-git-scm-com-downloads"><a href="#下载Git。https-git-scm-com-downloads" class="headerlink" title="下载Git。https://git-scm.com/downloads"></a>下载Git。<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a></h3><ul><li>我装在C盘了</li><li>在终端输入<code>node -v</code>, <code>npm -v</code>, <code>git --version</code>，检查安装是否成功以及环境变量是否配置好</li></ul><h2 id="二、Github"><a href="#二、Github" class="headerlink" title="二、Github"></a>二、Github</h2><h3 id="设置用户名和邮箱"><a href="#设置用户名和邮箱" class="headerlink" title="设置用户名和邮箱"></a>设置用户名和邮箱</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git config --global user.name &quot;GitHub 用户名&quot;<br>git config --global user.email &quot;GitHub 邮箱&quot;<br></code></pre></td></tr></table></figure><h3 id="创建SSH密匙"><a href="#创建SSH密匙" class="headerlink" title="创建SSH密匙"></a>创建SSH密匙</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;<br></code></pre></td></tr></table></figure><ul><li><p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容</p></li><li><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key</p></li><li><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加</p></li><li><p>在Git Bash 中输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>显示successfully authenticated 即成功</p></li></ul><h3 id="创建Github-Pages-仓库"><a href="#创建Github-Pages-仓库" class="headerlink" title="创建Github Pages 仓库"></a>创建Github Pages 仓库</h3><ul><li>GitHub 主页右上角加号 -&gt; New repository：</li><li>Repository name 中输入 <code>用户名.github.io</code></li><li>勾选 “Initialize this repository with a README”</li><li>Description 选填</li><li>填好后点击 Create repository 创建。</li></ul><h2 id="三、本地安装-Hexo-博客程序"><a href="#三、本地安装-Hexo-博客程序" class="headerlink" title="三、本地安装 Hexo 博客程序"></a>三、本地安装 Hexo 博客程序</h2><blockquote><p><strong>npm的使用：</strong></p><p>npm下载非常慢，而且没有任何进度显示。</p><p>我首先手动设置npm镜像源为淘宝镜像源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set registry https://registry.npm.taobao.org/<br></code></pre></td></tr></table></figure><p>但是出现了 <strong>npm ERR! code CERT_HAS_EXPIRED</strong>，即证书过期的问题。</p><p>然后清楚npm缓存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm cache clean --force<br></code></pre></td></tr></table></figure><p>禁用SSL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm config set strict-ssl false<br></code></pre></td></tr></table></figure><p>同时解决了这两个问题，具体细节不清楚hh，我认为真正起作用的是禁用了SSL验证</p></blockquote><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h3 id="Hexo-初始化"><a href="#Hexo-初始化" class="headerlink" title="Hexo 初始化"></a>Hexo 初始化</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo init     # 初始化<br>npm install   # 安装组件<br>hexo g        # 生成页面 <br>hexo s        # 启动预览<br></code></pre></td></tr></table></figure><blockquote><p><strong>Hexo 博客文件夹目录结构</strong></p><p>_config.yml  # 网站的配置信息<br>package.json # 应用程序的信息<br>scaffolds    # 模版文件夹<br>source     # 存放用户资源，Markdown文档<br>themes     # 主题文件夹<br>public       # 网站文件</p></blockquote><h2 id="四、Hexo-Themes"><a href="#四、Hexo-Themes" class="headerlink" title="四、Hexo Themes"></a>四、Hexo Themes</h2><p>手动的话，从github仓库下载后，解压，更改文件夹名，放到themes文件夹下，在_config.yml 里更改theme后为文件夹名。</p><p>在<code>hexo s</code>时，虽然不报错，但是localhost时显示 <strong>No Layout:index.html</strong>，是因为themes目录下的主题文件夹的名称和_config.yml中不一致。</p><p>更改好文件夹名后，hexo s时成功显示theme图案，说明路径正确（不显示theme图案的就要注意了，多半有问题）。但还是不能正确加载，<strong>npm 报错 Error: Cannot find module ‘semver’</strong>，说明没下载模块<code>semver</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm install semver<br></code></pre></td></tr></table></figure><p>再hexo s</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">hexo s</span><br>INFO  Validating config<br>INFO  =======================================<br> ██╗ ██████╗ █████╗ ██████╗ ██╗   ██╗███████╗<br> ██║██╔════╝██╔══██╗██╔══██╗██║   ██║██╔════╝<br> ██║██║     ███████║██████╔╝██║   ██║███████╗<br> ██║██║     ██╔══██║██╔══██╗██║   ██║╚════██║<br> ██║╚██████╗██║  ██║██║  ██║╚██████╔╝███████║<br> ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝<br>=============================================<br>INFO  === Checking package dependencies ===<br>ERROR Package bulma-stylus is not installed.<br>ERROR Package hexo-component-inferno is not installed.<br>ERROR Package hexo-renderer-inferno is not installed.<br>ERROR Package inferno is not installed.<br>ERROR Package inferno-create-element is not installed.<br>ERROR Please install the missing dependencies your Hexo site root directory:<br>ERROR npm install --save bulma-stylus@0.8.0 hexo-component-inferno@^3.1.0 hexo-renderer-inferno@^1.0.2 inferno@^8.2.3 inferno-create-element@^8.2.3<br>ERROR or:<br>ERROR yarn add bulma-stylus@0.8.0 hexo-component-inferno@^3.1.0 hexo-renderer-inferno@^1.0.2 inferno@^8.2.3 inferno-create-element@^8.2.3<br></code></pre></td></tr></table></figure><p>根据报错指引下载缺少的包，下载后，hexo g，hexo s，就一切正常了。</p><p>最后</p><h2 id="五、部署-Hexo-到-GitHub-Pages"><a href="#五、部署-Hexo-到-GitHub-Pages" class="headerlink" title="五、部署 Hexo 到 GitHub Pages"></a>五、部署 Hexo 到 GitHub Pages</h2><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p><p>首先<strong>安装 hexo-deployer-git</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>然后<strong>修改 _config.yml</strong> 文件末尾的 Deployment 部分，修改成如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs text">deploy:<br>  type: git<br>  repository: git@github.com:用户名/用户名.github.io.git<br>  branch: main<br></code></pre></td></tr></table></figure><p>完成后运行 <code>hexo d</code> 将网站上传部署到 GitHub Pages。</p><p>完成！这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code> 就可以看到 Hexo 网站了。</p><p><strong>! 注意：</strong></p><p><strong>2020年10月1日后，Github会将所有新建的仓库的默认分支从master修改为main.所以最后面的config.yml是写main，不是master</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>npm</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>有感</title>
    <link href="/2022/11/08/%E6%9C%89%E6%84%9F/"/>
    <url>/2022/11/08/%E6%9C%89%E6%84%9F/</url>
    
    <content type="html"><![CDATA[<p><em>行于所当行，止于所当止</em>。如果必须要做什么，就让自己喜欢上它。</p><p>至于理想、信念，只要自己是有理想的，自己的信念是正确的，那就足够了。走在正确的路上，不用时时害怕走错。别让理想变成包袱。</p>]]></content>
    
    
    
    <tags>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>立冬</title>
    <link href="/2022/11/07/%E4%BA%8C%E5%8D%81%E5%B2%81%E5%89%8D%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%86%AC%E8%87%B3%E5%A4%9C/"/>
    <url>/2022/11/07/%E4%BA%8C%E5%8D%81%E5%B2%81%E5%89%8D%E7%9A%84%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%86%AC%E8%87%B3%E5%A4%9C/</url>
    
    <content type="html"><![CDATA[<p>忽然得知今天冬至。然而本人身在广州，并不感到冷，所以稀里糊涂地就立冬了。<em>独在异乡为异客，每逢佳节倍思亲。</em>今天倒也不是什么佳节，但是吃晚饭的时候还是想念奶奶包的土豆水饺了。山东就没什么地方包土豆水饺，更别说南方了。我在广州吃到过包玉米粒的蒸饺，感觉自己的常识都被重置了……据说土豆肉馅是从东北传来的，等我的东北师兄回宿舍的时候问问他。（2022年12月31日补：为什么会在立冬想要吃水饺呢，因为当时误以为那一天是冬至了，晚饭时还因此感慨了好久）</p>]]></content>
    
    
    
    <tags>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一篇博客——建站历程</title>
    <link href="/2022/11/07/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <url>/2022/11/07/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="本网站由Hexo构建，主题是Ayer。"><a href="#本网站由Hexo构建，主题是Ayer。" class="headerlink" title="本网站由Hexo构建，主题是Ayer。"></a>本网站由Hexo构建，主题是Ayer。</h3><p>需要用到的工具有：</p><ul><li>Hexo</li><li>Chocolatey</li><li>Git-Bash</li><li>Powershell（选用）</li><li>VsCode</li></ul><hr><p>刚开始决定搭建网站，是从统计之都上看到了一个学长的个人网站，里面有他自己的博客和笔记。他的网站搭载Hugo动力系统，也是在Github上发布。可是他的操作系统是高贵的Mac，我是Windows。我在他的那篇搭建网站教学的blog卡了两天半，终于决定换个别人的教程，但依然使用Hugo。</p><p>使用Hugo搭建网站需要在Github上创建两个仓库，一个是真仓库，一个是网页发布用的，public文件夹下的东西就在后者。首先要搞清楚URL，然后每一次都要git status，git add .，git commit, git push -m origin main，等等。还经常出现无法连接到github，无法push等等问题。总之十分麻烦。我曾成功用Hugo做过一次。但想再更新时就出了问题。</p><p>就在这时，Hexo出现了。对我来说，真是“柳暗花明又一村”啊。我的舍友城哥给我一个用Hexo做动力的教程。Hexo真是太方便啦。</p><p>想要查看效果就用</p><blockquote><p>hexo s</p></blockquote><p>想要更新网站就用</p><blockquote><p>hexo g</p><p>hexo d</p></blockquote><p>再等一分钟发布到github，就ok了。</p><p>Hugo就是👎。对于我来说，网站体量很小，Hugo所宣传的网站搭建速度快我完全不感兴趣，Hexo已经足够了。Hugo上传这么麻烦，问题好多。Hexo才是真正的新手友好。我爱Hexo。</p><p>知乎Hexo教程：😼</p><p><a href="https://zhuanlan.zhihu.com/p/60578464">https://zhuanlan.zhihu.com/p/60578464</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>日常</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
